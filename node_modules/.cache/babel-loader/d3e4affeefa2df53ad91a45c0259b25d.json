{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @class Paginator\n * @classdesc Pagination helper class.\n *\n * @property {Array} items Array of elements on current page.\n * @property {Boolean} hasNextPage Indicates the existence of next page.\n * @property {Boolean} hasPrevPage Indicates the existence of previous page.\n */\n\nclass Paginator {\n  /*\n  * @constructor\n  * @param {Array} items Array of element for current page.\n  * @param {Object} params\n  * @private\n  */\n  constructor(items, source, prevToken, nextToken) {\n    this.prevToken = prevToken;\n    this.nextToken = nextToken;\n    this.items = items;\n    this.source = source;\n  }\n\n  get hasNextPage() {\n    return !!this.nextToken;\n  }\n\n  get hasPrevPage() {\n    return !!this.prevToken;\n  }\n  /**\n   * Request next page.\n   * Does not modify existing object.\n   * @return {Promise<Paginator>}\n   */\n\n\n  nextPage() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (_this.hasNextPage) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('No next page');\n\n          case 2:\n            return _context.abrupt(\"return\", _this.source(_this.nextToken));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  }\n  /**\n   * Request previous page.\n   * Does not modify existing object.\n   * @return {Promise<Paginator>}\n   */\n\n\n  prevPage() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (_this2.hasPrevPage) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new Error('No previous page');\n\n          case 2:\n            return _context2.abrupt(\"return\", _this2.source(_this2.prevToken));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n\n}\n\nexports.Paginator = Paginator;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/node_modules/twilio-sync/lib/paginator.js"],"names":["Object","defineProperty","exports","value","Paginator","constructor","items","source","prevToken","nextToken","hasNextPage","hasPrevPage","nextPage","Error","prevPage"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;;;;;AAQA,MAAMC,SAAN,CAAgB;AACZ;;;;;;AAMAC,EAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,SAA3B,EAAsC;AAC7C,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACD,MAAIG,WAAJ,GAAkB;AACd,WAAO,CAAC,CAAC,KAAKD,SAAd;AACH;;AACD,MAAIE,WAAJ,GAAkB;AACd,WAAO,CAAC,CAAC,KAAKH,SAAd;AACH;AACD;;;;;;;AAKMI,EAAAA,QAAN,GAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACR,KAAI,CAACF,WADG;AAAA;AAAA;AAAA;;AAAA,kBAEH,IAAIG,KAAJ,CAAU,cAAV,CAFG;;AAAA;AAAA,6CAIN,KAAI,CAACN,MAAL,CAAY,KAAI,CAACE,SAAjB,CAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKhB;AACD;;;;;;;AAKMK,EAAAA,QAAN,GAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACR,MAAI,CAACH,WADG;AAAA;AAAA;AAAA;;AAAA,kBAEH,IAAIE,KAAJ,CAAU,kBAAV,CAFG;;AAAA;AAAA,8CAIN,MAAI,CAACN,MAAL,CAAY,MAAI,CAACC,SAAjB,CAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKhB;;AAxCW;;AA0ChBN,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @class Paginator\n * @classdesc Pagination helper class.\n *\n * @property {Array} items Array of elements on current page.\n * @property {Boolean} hasNextPage Indicates the existence of next page.\n * @property {Boolean} hasPrevPage Indicates the existence of previous page.\n */\nclass Paginator {\n    /*\n    * @constructor\n    * @param {Array} items Array of element for current page.\n    * @param {Object} params\n    * @private\n    */\n    constructor(items, source, prevToken, nextToken) {\n        this.prevToken = prevToken;\n        this.nextToken = nextToken;\n        this.items = items;\n        this.source = source;\n    }\n    get hasNextPage() {\n        return !!this.nextToken;\n    }\n    get hasPrevPage() {\n        return !!this.prevToken;\n    }\n    /**\n     * Request next page.\n     * Does not modify existing object.\n     * @return {Promise<Paginator>}\n     */\n    async nextPage() {\n        if (!this.hasNextPage) {\n            throw new Error('No next page');\n        }\n        return this.source(this.nextToken);\n    }\n    /**\n     * Request previous page.\n     * Does not modify existing object.\n     * @return {Promise<Paginator>}\n     */\n    async prevPage() {\n        if (!this.hasPrevPage) {\n            throw new Error('No previous page');\n        }\n        return this.source(this.prevToken);\n    }\n}\nexports.Paginator = Paginator;\n"]},"metadata":{},"sourceType":"script"}
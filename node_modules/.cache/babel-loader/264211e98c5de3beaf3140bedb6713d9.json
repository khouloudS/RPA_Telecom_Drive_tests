{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\components\\\\VideoRoom\\\\VideoRoom.js\";\nimport React, { PureComponent } from \"react\";\nimport { Panel, Columns } from \"react-bulma-components\";\nimport { isEmpty } from \"lodash\";\nimport videoRoomPropType from \"../../propTypes/videoRoom\";\nimport Participant from \"../Participant/Participant\";\nimport LocalParticipant from \"../Participant/LocalParticipant\";\nimport EventSubscriber from \"../EventSubscriber/EventSubscriber\";\nimport { mapToArray } from \"../../utils\";\nconst EVENTS = [\"dominantSpeakerChanged\", \"participantConnected\", \"participantDisconnected\", \"reconnected\", \"reconnecting\", \"trackDimensionsChanged\", \"trackDisabled\", \"trackEnabled\", \"trackPublished\", \"trackStarted\", \"trackSubscribed\", \"trackUnpublished\", \"trackUnsubscribed\"];\n\nclass VideoRoom extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.update = () => this.forceUpdate();\n  }\n\n  render() {\n    const videoRoom = this.props.videoRoom;\n    const remoteParticipants = mapToArray(videoRoom.participants);\n    return React.createElement(EventSubscriber, {\n      events: EVENTS,\n      eventEmitterObject: videoRoom,\n      onUpdate: this.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Columns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Columns.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Panel.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Local Participant\"), React.createElement(Panel.Block, {\n      paddingless: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(LocalParticipant, {\n      participant: videoRoom.localParticipant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))), React.createElement(Columns.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Panel.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Remote Participants\"), React.createElement(Panel.Block, {\n      paddingless: !isEmpty(remoteParticipants),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, !isEmpty(remoteParticipants) ? remoteParticipants.map(participant => React.createElement(Participant, {\n      key: participant.sid,\n      participant: participant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })) : \"No connected participants\")))));\n  }\n\n}\n\nVideoRoom.propTypes = {\n  videoRoom: videoRoomPropType.isRequired\n};\nexport default VideoRoom;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/components/VideoRoom/VideoRoom.js"],"names":["React","PureComponent","Panel","Columns","isEmpty","videoRoomPropType","Participant","LocalParticipant","EventSubscriber","mapToArray","EVENTS","VideoRoom","update","forceUpdate","render","videoRoom","props","remoteParticipants","participants","localParticipant","map","participant","sid","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,wBAA/B;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,MAAMC,MAAM,GAAG,CACb,wBADa,EAEb,sBAFa,EAGb,yBAHa,EAIb,aAJa,EAKb,cALa,EAMb,wBANa,EAOb,eAPa,EAQb,cARa,EASb,gBATa,EAUb,cAVa,EAWb,iBAXa,EAYb,kBAZa,EAab,mBAba,CAAf;;AAgBA,MAAMC,SAAN,SAAwBV,aAAxB,CAAsC;AAAA;AAAA;;AAAA,SAKpCW,MALoC,GAK3B,MAAM,KAAKC,WAAL,EALqB;AAAA;;AAOpCC,EAAAA,MAAM,GAAG;AAAA,UACCC,SADD,GACe,KAAKC,KADpB,CACCD,SADD;AAEP,UAAME,kBAAkB,GAAGR,UAAU,CAACM,SAAS,CAACG,YAAX,CAArC;AAEA,WACE,oBAAC,eAAD;AACE,MAAA,MAAM,EAAER,MADV;AAEE,MAAA,kBAAkB,EAAEK,SAFtB;AAGE,MAAA,QAAQ,EAAE,KAAKH,MAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,WAAW,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,WAAW,EAAEG,SAAS,CAACI,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,CADF,EAUE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,WAAW,EAAE,CAACf,OAAO,CAACa,kBAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACb,OAAO,CAACa,kBAAD,CAAR,GACGA,kBAAkB,CAACG,GAAnB,CAAuBC,WAAW,IAChC,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEA,WAAW,CAACC,GADnB;AAEE,MAAA,WAAW,EAAED,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADH,GAOG,2BARN,CAFF,CADF,CAVF,CALF,CADF;AAkCD;;AA7CmC;;AAAhCV,S,CACGY,S,GAAY;AACjBR,EAAAA,SAAS,EAAEV,iBAAiB,CAACmB;AADZ,C;AA+CrB,eAAeb,SAAf","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport { Panel, Columns } from \"react-bulma-components\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nimport videoRoomPropType from \"../../propTypes/videoRoom\";\r\nimport Participant from \"../Participant/Participant\";\r\nimport LocalParticipant from \"../Participant/LocalParticipant\";\r\nimport EventSubscriber from \"../EventSubscriber/EventSubscriber\";\r\nimport { mapToArray } from \"../../utils\";\r\n\r\nconst EVENTS = [\r\n  \"dominantSpeakerChanged\",\r\n  \"participantConnected\",\r\n  \"participantDisconnected\",\r\n  \"reconnected\",\r\n  \"reconnecting\",\r\n  \"trackDimensionsChanged\",\r\n  \"trackDisabled\",\r\n  \"trackEnabled\",\r\n  \"trackPublished\",\r\n  \"trackStarted\",\r\n  \"trackSubscribed\",\r\n  \"trackUnpublished\",\r\n  \"trackUnsubscribed\"\r\n];\r\n\r\nclass VideoRoom extends PureComponent {\r\n  static propTypes = {\r\n    videoRoom: videoRoomPropType.isRequired\r\n  };\r\n\r\n  update = () => this.forceUpdate();\r\n\r\n  render() {\r\n    const { videoRoom } = this.props;\r\n    const remoteParticipants = mapToArray(videoRoom.participants);\r\n\r\n    return (\r\n      <EventSubscriber\r\n        events={EVENTS}\r\n        eventEmitterObject={videoRoom}\r\n        onUpdate={this.update}\r\n      >\r\n        <Columns>\r\n          <Columns.Column>\r\n            <Panel>\r\n              <Panel.Header>Local Participant</Panel.Header>\r\n              <Panel.Block paddingless>\r\n                <LocalParticipant participant={videoRoom.localParticipant} />\r\n              </Panel.Block>\r\n            </Panel>\r\n          </Columns.Column>\r\n\r\n          <Columns.Column>\r\n            <Panel>\r\n              <Panel.Header>Remote Participants</Panel.Header>\r\n              <Panel.Block paddingless={!isEmpty(remoteParticipants)}>\r\n                {!isEmpty(remoteParticipants)\r\n                  ? remoteParticipants.map(participant => (\r\n                      <Participant\r\n                        key={participant.sid}\r\n                        participant={participant}\r\n                      />\r\n                    ))\r\n                  : \"No connected participants\"}\r\n              </Panel.Block>\r\n            </Panel>\r\n          </Columns.Column>\r\n        </Columns>\r\n      </EventSubscriber>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoRoom;\r\n"]},"metadata":{},"sourceType":"module"}
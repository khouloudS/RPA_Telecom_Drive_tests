{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\layouts\\\\Driver.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\"; // reactstrap components\n\nimport { Container } from \"reactstrap\"; // core components\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout === \"/admin\") {\n          return React.createElement(Route, {\n            path: prop.layout + prop.path,\n            component: prop.component,\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n\n      return \"Brand\";\n    };\n  }\n\n  componentDidUpdate(e) {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    this.refs.mainContent.scrollTop = 0;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Sidebar, Object.assign({}, this.props, {\n      routes: routes,\n      logo: {\n        innerLink: \"/admin/index\",\n        imgSrc: require(\"assets/img/brand/argon-react.png\"),\n        imgAlt: \"...\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-content\",\n      ref: \"mainContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(AdminNavbar, Object.assign({}, this.props, {\n      brandText: this.getBrandText(this.props.location.pathname),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.getRoutes(routes)), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(AdminFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/layouts/Driver.js"],"names":["React","Route","Switch","Redirect","Container","AdminNavbar","AdminFooter","Sidebar","routes","Admin","Component","getRoutes","map","prop","key","layout","path","component","getBrandText","i","length","props","location","pathname","indexOf","name","componentDidUpdate","e","document","documentElement","scrollTop","scrollingElement","refs","mainContent","render","innerLink","imgSrc","require","imgAlt"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// reactstrap components\r\nimport { Container } from \"reactstrap\";\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nclass Admin extends React.Component {\r\n    componentDidUpdate(e) {\r\n        document.documentElement.scrollTop = 0;\r\n        document.scrollingElement.scrollTop = 0;\r\n        this.refs.mainContent.scrollTop = 0;\r\n    }\r\n    getRoutes = routes => {\r\n        return routes.map((prop, key) => {\r\n            if (prop.layout === \"/admin\") {\r\n                return (\r\n                    <Route\r\n                        path={prop.layout + prop.path}\r\n                        component={prop.component}\r\n                        key={key}\r\n                    />\r\n                );\r\n            } else {\r\n                return null;\r\n            }\r\n        });\r\n    };\r\n    getBrandText = path => {\r\n        for (let i = 0; i < routes.length; i++) {\r\n            if (\r\n                this.props.location.pathname.indexOf(\r\n                    routes[i].layout + routes[i].path\r\n                ) !== -1\r\n            ) {\r\n                return routes[i].name;\r\n            }\r\n        }\r\n        return \"Brand\";\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                <Sidebar\r\n                    {...this.props}\r\n                    routes={routes}\r\n                    logo={{\r\n                        innerLink: \"/admin/index\",\r\n                        imgSrc: require(\"assets/img/brand/argon-react.png\"),\r\n                        imgAlt: \"...\"\r\n                    }}\r\n                />\r\n                <div className=\"main-content\" ref=\"mainContent\">\r\n                    <AdminNavbar\r\n                        {...this.props}\r\n                        brandText={this.getBrandText(this.props.location.pathname)}\r\n                    />\r\n                    <Switch>\r\n                        {this.getRoutes(routes)}\r\n                       \r\n                    </Switch>\r\n                    <Container fluid>\r\n                        <AdminFooter />\r\n                    </Container>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;\r\n"]},"metadata":{},"sourceType":"module"}
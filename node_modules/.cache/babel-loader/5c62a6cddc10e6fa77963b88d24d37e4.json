{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\components\\\\App\\\\App.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\nimport { Section, Container, Columns, Button, Form, Notification } from \"react-bulma-components\";\nimport videoRoomPropType from \"../../propTypes/videoRoom\";\nimport VideoRoom from \"../VideoRoom/VideoRoom\";\nimport FieldInput from \"../Fields/FieldInput\";\nimport AppContainer from \"./AppContainer\";\nvar str = window.location.href;\nvar res;\nres = str.search(\"/App/\") + 5;\nvar room_value_id = str.substr(res, str.length - 1);\nconsole.log(this.room_value_id);\n\nconst App = ({\n  videoRoom,\n  userName,\n  roomName,\n  isJoining,\n  isVideoSupported,\n  isScreenSharingSupported,\n  isScreenSharingEnabled,\n  canJoin,\n  onJoin,\n  onLeave,\n  onShare,\n  onUserNameChange,\n  onRoomNameChange,\n  errorMessage,\n  onErrorMessageHide\n}) => {\n  let content = null;\n\n  if (!isVideoSupported) {\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Video is not supported\");\n  } else {\n    content = videoRoom ? React.createElement(React.Fragment, null, React.createElement(VideoRoom, {\n      videoRoom: videoRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      kind: \"group\",\n      align: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => onLeave(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Leave\")), React.createElement(Form.Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => onShare(),\n      disabled: !isScreenSharingSupported,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, isScreenSharingEnabled ? \"Stop sharing\" : \"Start sharing\")))) : React.createElement(Columns, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Columns.Column, {\n      size: \"half\",\n      offset: \"one-quarter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FieldInput, {\n      value: userName,\n      name: \"userName\",\n      label: \"User\",\n      placeholder: \"The identifier of the user\",\n      onChange: onUserNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(FieldInput, {\n      value: roomName = this.random_id,\n      name: \"roomName\",\n      label: \"Room\",\n      placeholder: \"The name of the room that you want to join\",\n      onChange: onRoomNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      kind: \"group\",\n      align: \"centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => onJoin(),\n      loading: isJoining,\n      disabled: !canJoin,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Join\")))));\n  }\n\n  return React.createElement(Section, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Twilio Video chat with screen sharing\"), errorMessage && React.createElement(Notification, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Error: \", errorMessage, React.createElement(Button, {\n    onClick: onErrorMessageHide,\n    remove: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), content));\n};\n\nApp.propTypes = {\n  videoRoom: videoRoomPropType,\n  userName: PropTypes.string.isRequired,\n  roomName: PropTypes.string.isRequired,\n  isJoining: PropTypes.bool.isRequired,\n  isVideoSupported: PropTypes.bool.isRequired,\n  isScreenSharingSupported: PropTypes.bool.isRequired,\n  isScreenSharingEnabled: PropTypes.bool.isRequired,\n  canJoin: PropTypes.bool.isRequired,\n  onJoin: PropTypes.func.isRequired,\n  onLeave: PropTypes.func.isRequired,\n  onShare: PropTypes.func.isRequired,\n  onUserNameChange: PropTypes.func.isRequired,\n  onRoomNameChange: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  onErrorMessageHide: PropTypes.func.isRequired\n};\nApp.defaultProps = {\n  videoRoom: null,\n  errorMessage: null\n};\n\nconst render = containerProps => React.createElement(App, Object.assign({}, containerProps, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n}));\n\nexport default (props => React.createElement(AppContainer, Object.assign({\n  render: render\n}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142\n  },\n  __self: this\n})));","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/components/App/App.js"],"names":["React","PropTypes","Section","Container","Columns","Button","Form","Notification","videoRoomPropType","VideoRoom","FieldInput","AppContainer","str","window","location","href","res","search","room_value_id","substr","length","console","log","App","videoRoom","userName","roomName","isJoining","isVideoSupported","isScreenSharingSupported","isScreenSharingEnabled","canJoin","onJoin","onLeave","onShare","onUserNameChange","onRoomNameChange","errorMessage","onErrorMessageHide","content","random_id","propTypes","string","isRequired","bool","func","defaultProps","render","containerProps","props"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\nimport {\r\n  Section,\r\n  Container,\r\n  Columns,\r\n  Button,\r\n  Form,\r\n  Notification\r\n} from \"react-bulma-components\";\r\n\r\nimport videoRoomPropType from \"../../propTypes/videoRoom\";\r\nimport VideoRoom from \"../VideoRoom/VideoRoom\";\r\nimport FieldInput from \"../Fields/FieldInput\";\r\n\r\nimport AppContainer from \"./AppContainer\";\r\nvar str=window.location.href;\r\nvar res ;\r\nres= str.search(\"/App/\")+5;\r\nvar room_value_id = str.substr(res, str.length-1);\r\nconsole.log(this.room_value_id)\r\n\r\nconst App = ({\r\n  videoRoom,\r\n  userName,\r\n  roomName ,\r\n  isJoining,\r\n  isVideoSupported,\r\n  isScreenSharingSupported,\r\n  isScreenSharingEnabled,\r\n  canJoin,\r\n  onJoin,\r\n  onLeave,\r\n  onShare,\r\n  onUserNameChange,\r\n  onRoomNameChange,\r\n  errorMessage,\r\n  onErrorMessageHide\r\n}) => {\r\n  let content = null;\r\n\r\n  if (!isVideoSupported) {\r\n    content = <div>Video is not supported</div>;\r\n  } else {\r\n    content = videoRoom ? (\r\n      <>\r\n        {<VideoRoom videoRoom={videoRoom} />}\r\n\r\n        <Form.Field kind=\"group\" align=\"centered\">\r\n          <Form.Control>\r\n            <Button onClick={() => onLeave()}>Leave</Button>\r\n          </Form.Control>\r\n\r\n          <Form.Control>\r\n            <Button\r\n              onClick={() => onShare()}\r\n              disabled={!isScreenSharingSupported}\r\n            >\r\n              {isScreenSharingEnabled ? \"Stop sharing\" : \"Start sharing\"}\r\n            </Button>\r\n          </Form.Control>\r\n        </Form.Field>\r\n      </>\r\n    ) : (\r\n      <Columns>\r\n        <Columns.Column size=\"half\" offset=\"one-quarter\">\r\n          <FieldInput\r\n            value={userName}\r\n            name=\"userName\"\r\n            label=\"User\"\r\n            placeholder=\"The identifier of the user\"\r\n            onChange={onUserNameChange}\r\n          />\r\n\r\n          <FieldInput\r\n            value={roomName = this.random_id}\r\n            name=\"roomName\"\r\n            label=\"Room\"\r\n            placeholder=\"The name of the room that you want to join\"\r\n            onChange={onRoomNameChange}\r\n          />\r\n\r\n          <Form.Field kind=\"group\" align=\"centered\">\r\n            <Form.Control>\r\n              <Button\r\n                onClick={() => onJoin()}\r\n                loading={isJoining}\r\n                disabled={!canJoin}\r\n                color=\"primary\"\r\n              >\r\n                Join\r\n              </Button>\r\n            </Form.Control>\r\n          </Form.Field>\r\n        </Columns.Column>\r\n      </Columns>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <h1>Twilio Video chat with screen sharing</h1>\r\n        {errorMessage && (\r\n          <Notification color=\"danger\">\r\n            Error: {errorMessage}\r\n            <Button onClick={onErrorMessageHide} remove />\r\n          </Notification>\r\n        )}\r\n        {content}\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  videoRoom: videoRoomPropType,\r\n  userName: PropTypes.string.isRequired,\r\n  roomName: PropTypes.string.isRequired,\r\n  isJoining: PropTypes.bool.isRequired,\r\n  isVideoSupported: PropTypes.bool.isRequired,\r\n  isScreenSharingSupported: PropTypes.bool.isRequired,\r\n  isScreenSharingEnabled: PropTypes.bool.isRequired,\r\n  canJoin: PropTypes.bool.isRequired,\r\n  onJoin: PropTypes.func.isRequired,\r\n  onLeave: PropTypes.func.isRequired,\r\n  onShare: PropTypes.func.isRequired,\r\n  onUserNameChange: PropTypes.func.isRequired,\r\n  onRoomNameChange: PropTypes.func.isRequired,\r\n  errorMessage: PropTypes.string,\r\n  onErrorMessageHide: PropTypes.func.isRequired\r\n};\r\n\r\nApp.defaultProps = {\r\n  videoRoom: null,\r\n  errorMessage: null\r\n};\r\n\r\nconst render = containerProps => <App {...containerProps} />;\r\nexport default props => <AppContainer render={render} {...props} />;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\components\\\\App\\\\App_chat.js\";\nimport React, { Component } from 'react';\nimport './App_chat.css';\nimport Messages from \"./Messages\";\nimport Input from \"./Input\";\n\nconst Scaledrone = require('scaledrone-react-native');\n\nconst drone = new Scaledrone('QCncBjpRO22enZY5');\n\nfunction randomName() {\n  const adjectives = [\"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\", \"empty\", \"dry\", \"dark\", \"summer\", \"icy\", \"delicate\", \"quiet\", \"white\", \"cool\", \"spring\", \"winter\", \"patient\", \"twilight\", \"dawn\", \"crimson\", \"wispy\", \"weathered\", \"blue\", \"billowing\", \"broken\", \"cold\", \"damp\", \"falling\", \"frosty\", \"green\", \"long\", \"late\", \"lingering\", \"bold\", \"little\", \"morning\", \"muddy\", \"old\", \"red\", \"rough\", \"still\", \"small\", \"sparkling\", \"throbbing\", \"shy\", \"wandering\", \"withered\", \"wild\", \"black\", \"young\", \"holy\", \"solitary\", \"fragrant\", \"aged\", \"snowy\", \"proud\", \"floral\", \"restless\", \"divine\", \"polished\", \"ancient\", \"purple\", \"lively\", \"nameless\"];\n  const nouns = [\"waterfall\", \"river\", \"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \"morning\", \"snow\", \"lake\", \"sunset\", \"pine\", \"shadow\", \"leaf\", \"dawn\", \"glitter\", \"forest\", \"hill\", \"cloud\", \"meadow\", \"sun\", \"glade\", \"bird\", \"brook\", \"butterfly\", \"bush\", \"dew\", \"dust\", \"field\", \"fire\", \"flower\", \"firefly\", \"feather\", \"grass\", \"haze\", \"mountain\", \"night\", \"pond\", \"darkness\", \"snowflake\", \"silence\", \"sound\", \"sky\", \"shape\", \"surf\", \"thunder\", \"violet\", \"water\", \"wildflower\", \"wave\", \"water\", \"resonance\", \"sun\", \"wood\", \"dream\", \"cherry\", \"tree\", \"fog\", \"frost\", \"voice\", \"paper\", \"frog\", \"smoke\", \"star\"];\n  const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n  const noun = nouns[Math.floor(Math.random() * nouns.length)];\n  return adjective + noun;\n}\n\nfunction randomColor() {\n  return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n}\n\nclass App_chat extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      member: {\n        username: randomName(),\n        color: randomColor()\n      }\n    };\n\n    this.onSendMessage = message => {\n      this.drone.publish({\n        room: \"observable-room\",\n        message\n      });\n    };\n\n    const drone = new Scaledrone(\"eiAjk0Vv7MzXdvGN\", {\n      data: this.state.member\n    });\n    drone.on('open', error => {\n      if (error) {\n        return console.error(error);\n      }\n\n      const member = _objectSpread({}, this.state.member);\n\n      member.id = this.drone.clientId;\n      this.setState({\n        member\n      });\n    });\n    const room = this.drone.subscribe(\"observable-room\");\n    room.on('data', (data, member) => {\n      const messages = this.state.messages;\n      messages.push({\n        member,\n        text: data\n      });\n      this.setState({\n        messages\n      });\n    });\n    /* const drone = new Scaledrone('eiAjk0Vv7MzXdvGN');\r\n     drone.on('error', error => {\r\n         console.error('Error with connection:', error);\r\n     });\r\n     drone.on('close', event => {\r\n         console.log('Connection closed:', event);\r\n     });\r\n       const room = drone.subscribe('my-room');\r\n     room.on('message', message => console.log('Received data:', message.data));*/\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"My Chat App\")), React.createElement(Messages, {\n      messages: this.state.messages,\n      currentMember: this.state.member,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Input, {\n      onSendMessage: this.onSendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App_chat;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/components/App/App_chat.js"],"names":["React","Component","Messages","Input","Scaledrone","require","drone","randomName","adjectives","nouns","adjective","Math","floor","random","length","noun","randomColor","toString","App_chat","constructor","state","messages","member","username","color","onSendMessage","message","publish","room","data","on","error","console","id","clientId","setState","subscribe","push","text","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App_chat.css';\r\nimport Messages from \"./Messages\";\r\nimport Input from \"./Input\";\r\nconst Scaledrone = require('scaledrone-react-native');\r\nconst drone = new Scaledrone('QCncBjpRO22enZY5');\r\n\r\nfunction randomName() {\r\n\r\n    const adjectives = [\r\n        \"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\", \"empty\", \"dry\", \"dark\",\r\n        \"summer\", \"icy\", \"delicate\", \"quiet\", \"white\", \"cool\", \"spring\", \"winter\",\r\n        \"patient\", \"twilight\", \"dawn\", \"crimson\", \"wispy\", \"weathered\", \"blue\",\r\n        \"billowing\", \"broken\", \"cold\", \"damp\", \"falling\", \"frosty\", \"green\", \"long\",\r\n        \"late\", \"lingering\", \"bold\", \"little\", \"morning\", \"muddy\", \"old\", \"red\",\r\n        \"rough\", \"still\", \"small\", \"sparkling\", \"throbbing\", \"shy\", \"wandering\",\r\n        \"withered\", \"wild\", \"black\", \"young\", \"holy\", \"solitary\", \"fragrant\",\r\n        \"aged\", \"snowy\", \"proud\", \"floral\", \"restless\", \"divine\", \"polished\",\r\n        \"ancient\", \"purple\", \"lively\", \"nameless\"\r\n    ];\r\n    const nouns = [\r\n        \"waterfall\", \"river\", \"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \"morning\",\r\n        \"snow\", \"lake\", \"sunset\", \"pine\", \"shadow\", \"leaf\", \"dawn\", \"glitter\",\r\n        \"forest\", \"hill\", \"cloud\", \"meadow\", \"sun\", \"glade\", \"bird\", \"brook\",\r\n        \"butterfly\", \"bush\", \"dew\", \"dust\", \"field\", \"fire\", \"flower\", \"firefly\",\r\n        \"feather\", \"grass\", \"haze\", \"mountain\", \"night\", \"pond\", \"darkness\",\r\n        \"snowflake\", \"silence\", \"sound\", \"sky\", \"shape\", \"surf\", \"thunder\",\r\n        \"violet\", \"water\", \"wildflower\", \"wave\", \"water\", \"resonance\", \"sun\",\r\n        \"wood\", \"dream\", \"cherry\", \"tree\", \"fog\", \"frost\", \"voice\", \"paper\", \"frog\",\r\n        \"smoke\", \"star\"\r\n    ];\r\n    const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\r\n    const noun = nouns[Math.floor(Math.random() * nouns.length)];\r\n    return adjective + noun;\r\n}\r\n\r\nfunction randomColor() {\r\n    return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\r\n}\r\n\r\nclass App_chat extends Component {\r\n\r\n    state = {\r\n        messages: [],\r\n        member: {\r\n            username: randomName(),\r\n            color: randomColor(),\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        const  drone = new Scaledrone(\"eiAjk0Vv7MzXdvGN\", {\r\n            data: this.state.member\r\n        });\r\n            drone.on('open', error => {\r\n            if (error) {\r\n                return console.error(error);\r\n            }\r\n            const member = {...this.state.member};\r\n            member.id = this.drone.clientId;\r\n            this.setState({member});\r\n        });\r\n        const room = this.drone.subscribe(\"observable-room\");\r\n        room.on('data', (data, member) => {\r\n            const messages = this.state.messages;\r\n            messages.push({member, text: data});\r\n            this.setState({messages});\r\n        });\r\n       /* const drone = new Scaledrone('eiAjk0Vv7MzXdvGN');\r\n        drone.on('error', error => {\r\n            console.error('Error with connection:', error);\r\n        });\r\n        drone.on('close', event => {\r\n            console.log('Connection closed:', event);\r\n        });\r\n\r\n        const room = drone.subscribe('my-room');\r\n        room.on('message', message => console.log('Received data:', message.data));*/\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"App-header\">\r\n                    <h1>My Chat App</h1>\r\n                </div>\r\n                <Messages\r\n                    messages={this.state.messages}\r\n                    currentMember={this.state.member}\r\n                />\r\n                <Input\r\n                    onSendMessage={this.onSendMessage}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSendMessage = (message) => {\r\n        this.drone.publish({\r\n            room: \"observable-room\",\r\n            message\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default App_chat;\r\n"]},"metadata":{},"sourceType":"module"}
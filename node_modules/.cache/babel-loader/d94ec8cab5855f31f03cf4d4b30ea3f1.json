{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport adapter from \"webrtc-adapter\";\nimport TwilioVideo from \"twilio-video\";\nimport { isEmpty, first } from \"lodash\";\nimport { getToken } from \"../../api\";\nimport axios from \"axios\";\n\nclass AppContainer extends PureComponent {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.state = {\n      videoRoom: null,\n      isJoining: false,\n      userName: \"\",\n      roomName: \"\",\n      errorMessage: null\n    };\n    this.getToken = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var userName, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            userName = _this.state.userName;\n            _context.next = 3;\n            return getToken(userName);\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data.token);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    this.joinRoom = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var roomName, token, localVideoTrack, localAudioTrack, videoRoom;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            roomName = _this.state.roomName;\n\n            _this.setState({\n              isJoining: true\n            });\n\n            _context2.prev = 2;\n            _context2.next = 5;\n            return _this.getToken();\n\n          case 5:\n            token = _context2.sent;\n            _context2.next = 8;\n            return TwilioVideo.createLocalVideoTrack();\n\n          case 8:\n            localVideoTrack = _context2.sent;\n\n            _this.setState({\n              localVideoTrack\n            });\n\n            _context2.next = 12;\n            return TwilioVideo.createLocalAudioTrack();\n\n          case 12:\n            localAudioTrack = _context2.sent;\n\n            _this.setState({\n              localAudioTrack\n            });\n\n            _context2.next = 16;\n            return TwilioVideo.connect(token, {\n              name: roomName,\n              tracks: [localVideoTrack, localAudioTrack],\n              insights: false\n            });\n\n          case 16:\n            videoRoom = _context2.sent;\n            videoRoom.on(\"disconnected\", () => {\n              _this.stopVideoTrack();\n\n              _this.stopAudioTrack();\n\n              _this.stopScreenTrack();\n\n              _this.setState({\n                videoRoom: null\n              });\n            });\n\n            _this.setState({\n              videoRoom\n            });\n\n            _context2.next = 26;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](2);\n\n            _this.stopVideoTrack();\n\n            _this.stopAudioTrack();\n\n            _this.setState({\n              errorMessage: _context2.t0.message\n            });\n\n          case 26:\n            _this.setState({\n              isJoining: false\n            });\n\n          case 27:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[2, 21]]);\n    }));\n    this.leaveRoom = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var videoRoom;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            videoRoom = _this.state.videoRoom;\n\n            if (videoRoom) {\n              videoRoom.disconnect();\n            }\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    this.stopTrack = trackName => {\n      const track = this.state[trackName];\n\n      if (track) {\n        track.stop();\n        this.setState({\n          [trackName]: null\n        });\n      }\n    };\n\n    this.stopScreenTrack = () => this.stopTrack(\"screenTrack\");\n\n    this.stopVideoTrack = () => this.stopTrack(\"localVideoTrack\");\n\n    this.stopAudioTrack = () => this.stopTrack(\"localAudioTrack\");\n\n    this.shareScreen = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _this$state, videoRoom, localVideoTrack, screenTrack, stream, newScreenTrack;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _this$state = _this.state, videoRoom = _this$state.videoRoom, localVideoTrack = _this$state.localVideoTrack, screenTrack = _this$state.screenTrack;\n\n            if (screenTrack) {\n              _context4.next = 12;\n              break;\n            }\n\n            _context4.next = 5;\n            return navigator.mediaDevices.getDisplayMedia({\n              video: true\n            });\n\n          case 5:\n            stream = _context4.sent;\n            newScreenTrack = first(stream.getVideoTracks());\n\n            _this.setState({\n              screenTrack: new TwilioVideo.LocalVideoTrack(newScreenTrack)\n            });\n\n            videoRoom.localParticipant.publishTrack(newScreenTrack);\n            videoRoom.localParticipant.unpublishTrack(localVideoTrack);\n            _context4.next = 15;\n            break;\n\n          case 12:\n            videoRoom.localParticipant.unpublishTrack(screenTrack);\n            videoRoom.localParticipant.publishTrack(localVideoTrack);\n\n            _this.stopScreenTrack();\n\n          case 15:\n            _context4.next = 21;\n            break;\n\n          case 17:\n            _context4.prev = 17;\n            _context4.t0 = _context4[\"catch\"](0);\n\n            _this.stopScreenTrack();\n\n            _this.setState({\n              errorMessage: _context4.t0.message\n            });\n\n          case 21:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 17]]);\n    }));\n\n    this.hideErrorMessage = () => this.setState({\n      errorMessage: null\n    });\n\n    this.changeUserName = userName => this.setState({\n      userName\n    });\n\n    this.changeRoomName = roomName => this.setState({\n      roomName\n    });\n\n    console.log(window.location.href);\n    var str = window.location.href;\n    var res;\n    res = str.search(\"App/\") + 5;\n    var re = str.substr(res, str.length - 1);\n    console.log(re);\n    /* axios.get(url)\r\n         .then(response => {\r\n           console.log(\"res=\",response);\r\n           })\r\n         .catch(function (error) {\r\n           console.log(error);\r\n         })\r\n    */\n\n    console.log(this.props.match.params.random_id);\n  }\n\n  componentDidMount() {\n    if (adapter.browserDetails.browser === \"firefox\") {\n      adapter.browserShim.shimGetDisplayMedia(window, \"screen\");\n    }\n  }\n\n  render() {\n    const render = this.props.render;\n    const _this$state2 = this.state,\n          videoRoom = _this$state2.videoRoom,\n          isJoining = _this$state2.isJoining,\n          userName = _this$state2.userName,\n          roomName = _this$state2.roomName,\n          errorMessage = _this$state2.errorMessage,\n          screenTrack = _this$state2.screenTrack;\n    return render({\n      videoRoom,\n      userName,\n      roomName,\n      isVideoSupported: TwilioVideo.isSupported,\n      isScreenSharingSupported: Boolean(navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia),\n      isScreenSharingEnabled: Boolean(screenTrack),\n      canJoin: !isEmpty(userName) && !isEmpty(roomName),\n      isJoining,\n      onJoin: this.joinRoom,\n      onLeave: this.leaveRoom,\n      onShare: this.shareScreen,\n      onRoomNameChange: this.changeRoomName,\n      onUserNameChange: this.changeUserName,\n      errorMessage,\n      onErrorMessageHide: this.hideErrorMessage\n    });\n  }\n\n}\n\nAppContainer.propTypes = {\n  render: PropTypes.func.isRequired\n};\nexport default AppContainer;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/components/App/AppContainer.js"],"names":["PureComponent","PropTypes","adapter","TwilioVideo","isEmpty","first","getToken","axios","AppContainer","constructor","props","state","videoRoom","isJoining","userName","roomName","errorMessage","response","data","token","joinRoom","setState","createLocalVideoTrack","localVideoTrack","createLocalAudioTrack","localAudioTrack","connect","name","tracks","insights","on","stopVideoTrack","stopAudioTrack","stopScreenTrack","message","leaveRoom","disconnect","stopTrack","trackName","track","stop","shareScreen","screenTrack","navigator","mediaDevices","getDisplayMedia","video","stream","newScreenTrack","getVideoTracks","LocalVideoTrack","localParticipant","publishTrack","unpublishTrack","hideErrorMessage","changeUserName","changeRoomName","console","log","window","location","href","str","res","search","re","substr","length","match","params","random_id","componentDidMount","browserDetails","browser","browserShim","shimGetDisplayMedia","render","isVideoSupported","isSupported","isScreenSharingSupported","Boolean","isScreenSharingEnabled","canJoin","onJoin","onLeave","onShare","onRoomNameChange","onUserNameChange","onErrorMessageHide","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport adapter from \"webrtc-adapter\";\r\nimport TwilioVideo from \"twilio-video\";\r\nimport { isEmpty, first } from \"lodash\";\r\n\r\nimport { getToken } from \"../../api\";\r\nimport axios from \"axios\";\r\n\r\nclass AppContainer extends PureComponent {\r\n  static propTypes = {\r\n    render: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    videoRoom: null,\r\n    isJoining: false,\r\n    userName: \"\",\r\n    roomName: \"\",\r\n    errorMessage: null\r\n  };\r\n  constructor(props){\r\n    super(props);\r\n    console.log(window.location.href)\r\n    var str=window.location.href;\r\n    var res ;\r\n    res= str.search(\"App/\")+5;\r\n    var re = str.substr(res, str.length-1);\r\n    console.log(re)\r\n   /* axios.get(url)\r\n        .then(response => {\r\n          console.log(\"res=\",response);\r\n\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n*/\r\n    console.log(this.props.match.params.random_id)\r\n  }\r\n  componentDidMount() {\r\n    if (adapter.browserDetails.browser === \"firefox\") {\r\n      adapter.browserShim.shimGetDisplayMedia(window, \"screen\");\r\n    }\r\n  }\r\n\r\n  getToken = async () => {\r\n    const { userName } = this.state;\r\n\r\n    const response = await getToken(userName);\r\n\r\n    return response.data.token;\r\n  };\r\n\r\n  joinRoom = async () => {\r\n    const { roomName } = this.state;\r\n\r\n    this.setState({ isJoining: true });\r\n\r\n    try {\r\n      const token = await this.getToken();\r\n\r\n      const localVideoTrack = await TwilioVideo.createLocalVideoTrack();\r\n      this.setState({ localVideoTrack });\r\n\r\n      const localAudioTrack = await TwilioVideo.createLocalAudioTrack();\r\n      this.setState({ localAudioTrack });\r\n\r\n      const videoRoom = await TwilioVideo.connect(\r\n        token,\r\n        {\r\n          name: roomName,\r\n          tracks: [localVideoTrack, localAudioTrack],\r\n          insights: false\r\n        }\r\n      );\r\n\r\n      videoRoom.on(\"disconnected\", () => {\r\n        this.stopVideoTrack();\r\n        this.stopAudioTrack();\r\n        this.stopScreenTrack();\r\n\r\n        this.setState({\r\n          videoRoom: null\r\n        });\r\n      });\r\n\r\n      this.setState({ videoRoom });\r\n    } catch (error) {\r\n      this.stopVideoTrack();\r\n      this.stopAudioTrack();\r\n\r\n      this.setState({\r\n        errorMessage: error.message\r\n      });\r\n    }\r\n\r\n    this.setState({ isJoining: false });\r\n  };\r\n\r\n  leaveRoom = async () => {\r\n    const { videoRoom } = this.state;\r\n\r\n    if (videoRoom) {\r\n      videoRoom.disconnect();\r\n    }\r\n  };\r\n\r\n  stopTrack = trackName => {\r\n    const track = this.state[trackName];\r\n\r\n    if (track) {\r\n      track.stop();\r\n      this.setState({ [trackName]: null });\r\n    }\r\n  };\r\n\r\n  stopScreenTrack = () => this.stopTrack(\"screenTrack\");\r\n\r\n  stopVideoTrack = () => this.stopTrack(\"localVideoTrack\");\r\n\r\n  stopAudioTrack = () => this.stopTrack(\"localAudioTrack\");\r\n\r\n  shareScreen = async () => {\r\n    try {\r\n      const { videoRoom, localVideoTrack, screenTrack } = this.state;\r\n\r\n      if (!screenTrack) {\r\n        const stream = await navigator.mediaDevices.getDisplayMedia({\r\n          video: true\r\n        });\r\n        const newScreenTrack = first(stream.getVideoTracks());\r\n\r\n        this.setState({\r\n          screenTrack: new TwilioVideo.LocalVideoTrack(newScreenTrack)\r\n        });\r\n\r\n        videoRoom.localParticipant.publishTrack(newScreenTrack);\r\n        videoRoom.localParticipant.unpublishTrack(localVideoTrack);\r\n      } else {\r\n        videoRoom.localParticipant.unpublishTrack(screenTrack);\r\n        videoRoom.localParticipant.publishTrack(localVideoTrack);\r\n        this.stopScreenTrack();\r\n      }\r\n    } catch (error) {\r\n      this.stopScreenTrack();\r\n\r\n      this.setState({\r\n        errorMessage: error.message\r\n      });\r\n    }\r\n  };\r\n\r\n  hideErrorMessage = () => this.setState({ errorMessage: null });\r\n\r\n  changeUserName = userName => this.setState({ userName });\r\n\r\n  changeRoomName = roomName => this.setState({ roomName });\r\n\r\n  render() {\r\n    const { render } = this.props;\r\n    const {\r\n      videoRoom,\r\n      isJoining,\r\n      userName,\r\n      roomName,\r\n      errorMessage,\r\n      screenTrack\r\n    } = this.state;\r\n\r\n    return render({\r\n      videoRoom,\r\n      userName,\r\n      roomName,\r\n      isVideoSupported: TwilioVideo.isSupported,\r\n      isScreenSharingSupported: Boolean(\r\n        navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia\r\n      ),\r\n      isScreenSharingEnabled: Boolean(screenTrack),\r\n      canJoin: !isEmpty(userName) && !isEmpty(roomName),\r\n      isJoining,\r\n      onJoin: this.joinRoom,\r\n      onLeave: this.leaveRoom,\r\n      onShare: this.shareScreen,\r\n      onRoomNameChange: this.changeRoomName,\r\n      onUserNameChange: this.changeUserName,\r\n      errorMessage,\r\n      onErrorMessageHide: this.hideErrorMessage\r\n    });\r\n  }\r\n}\r\n\r\nexport default AppContainer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\views\\\\DriveTest\\\\Engineer\\\\DriveTestListAdmin.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React from \"react\"; // reactstrap components\n\nimport { Card, Container, Row, CardHeader, Table, CardFooter, DropdownMenu, DropdownItem, UncontrolledDropdown, DropdownToggle } from \"reactstrap\";\nimport axios from \"axios\";\nimport Button from \"reactstrap/es/Button\";\nimport { Modal } from \"react-bootstrap\";\nimport { MDBCol, MDBIcon } from \"mdbreact\";\nimport { Link } from 'react-router-dom';\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\n\nclass DrivetestlistAdmin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drivetests: [],\n      show: false,\n      DriveTest: '',\n      query: '',\n      showEval: false,\n      DriveTestEval: [],\n      currentPage: 0,\n      sort: true\n    };\n    this.pageSize = 5; //   this.pagesCount=this.pagesCount.bind(this);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.HandleDone = this.HandleDone.bind(this);\n    this.HandlePending = this.HandlePending.bind(this);\n    this.HandleData = this.HandleData.bind(this);\n    this.HandleModalEval = this.HandleModalEval.bind(this);\n    this.toggleSortTitle = this.toggleSortTitle.bind(this);\n    this.toggleSortSetDate = this.toggleSortSetDate.bind(this);\n    this.toggleSortStartDate = this.toggleSortStartDate.bind(this);\n    this.HandleInterrupted = this.HandleInterrupted.bind(this);\n    this.HandleMissed = this.HandleMissed.bind(this);\n  }\n\n  handleClick(e, index) {\n    e.preventDefault();\n    this.setState({\n      currentPage: index\n    });\n  }\n\n  componentDidMount() {\n    this.HandleData();\n  }\n\n  HandleModal(item) {\n    this.setState({\n      show: !this.state.show,\n      DriveTest: item\n    });\n  }\n\n  HandleModalEval(item) {\n    var state = Object.assign(this.state, {\n      DriveTestEval: item\n    });\n    this.setState({\n      showEval: !this.state.showEval,\n      state\n    });\n  }\n\n  HandleDone() {\n    axios.get('http://localhost:4000/api/driveTest/filter/done').then(response => {\n      this.setState({\n        drivetests: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  HandlePending() {\n    axios.get('http://localhost:4000/api/driveTest/filter/pending').then(response => {\n      this.setState({\n        drivetests: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  HandleMissed() {\n    axios.get('http://localhost:4000/api/driveTest/filter/missed').then(response => {\n      this.setState({\n        drivetests: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  HandleInterrupted() {\n    axios.get('http://localhost:4000/api/driveTest/filter/interrupted').then(response => {\n      this.setState({\n        drivetests: response.data\n      });\n      console.log(this.state.drivetests);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  HandleData() {\n    axios.get('http://localhost:4000/api/driveTest').then(response => {\n      this.setState({\n        drivetests: response.data\n      });\n      this.pagesCount = Math.ceil(this.state.drivetests.length / this.pageSize);\n      console.log('drive====', this.state.drivetests);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  handleInputChange() {\n    this.setState({\n      query: this.search.value\n    }, () => {\n      if (this.state.query && this.state.query.length > 1) {\n        if (this.state.query.length % 2 === 0) {\n          this.HandleSearch();\n        }\n      } else this.HandleData();\n    });\n  }\n\n  HandleDelete(D) {\n    axios.delete('http://localhost:4000/api/driveTest/DeleteDriveTest/' + D._id).then(res => {\n      this.setState(previousState => {\n        return {\n          drivetests: previousState.drivetests.filter(m => m._id !== D._id)\n        };\n      }, document.location.href = '/admin/DrivetestListAdmin');\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  formatDate(string) {\n    var options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\"\n    };\n    return new Date(string).toLocaleDateString([], options);\n  }\n\n  CalculHours(string1, string2) {\n    const date1 = new Date(string1);\n    const date2 = new Date(string2);\n    let res = date2.getTime() - date1.getTime();\n    return res;\n  }\n\n  ResulatCalculhours(A) {\n    let h = Math.trunc(A / 3600000);\n    console.log(h);\n    let min = Math.trunc(A % 3600000 / 60000);\n    let sec = Math.trunc(A % 3600000 % 60000 / 1000);\n    let ms = A % 3600000 % 60000 % 1000;\n    let res = h + \" hours , \" + min + \" minutes ,\" + sec + \" secondes and \" + ms + \" Millisecondes \";\n    console.log(res);\n    return res;\n  }\n\n  AffListConditionnel(item) {\n    console.log(item);\n    var d1 = new Date(item.DriveTest_Start_Time);\n    var today = new Date();\n    if (item.DriveTest_State === true && item.DriveTest_Done_Date != null) return React.createElement(React.Fragment, null, \" \", React.createElement(\"td\", {\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Done\"), \" \"), React.createElement(\"td\", {\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.formatDate(item.DriveTest_Done_Date)));else if (item.DriveTest_State === false && item.DriveTest_Done_Date == null && today < d1) return React.createElement(React.Fragment, null, \" \", React.createElement(\"td\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \" Pending \"), \" \"), React.createElement(\"td\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \" Pending \")));else if (item.DriveTest_State === false && item.DriveTest_Done_Date != null) return React.createElement(React.Fragment, null, React.createElement(\"td\", {\n      style: {\n        color: \"orange\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Interrupted\"), \" \"), React.createElement(\"td\", {\n      style: {\n        color: \"orange\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.formatDate(item.DriveTest_Done_Date)));else if (today > d1 && item.DriveTest_State === false) return React.createElement(React.Fragment, null, \" \", React.createElement(\"td\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \" \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Missed\"), \" \"), React.createElement(\"td\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Missed\"), \" \"));\n  }\n\n  AffEvaluationConditionnel(item) {\n    console.log(item);\n    var d1 = new Date(item.DriveTest_Start_Time);\n    var today = new Date();\n\n    if (item.DriveTest_State === true && item.DriveTest_Done_Date != null) {\n      if (this.CalculHours(item.DriveTest_Start_Time, item.DriveTest_Done_Date) <= 7200000 && this.CalculHours(item.DriveTest_Start_Time, item.DriveTest_Done_Date) > 0) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \" The driver did a great job \"), React.createElement(\"h2\", {\n        style: {\n          color: \"blue\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"The driver spent  \", this.ResulatCalculhours(this.CalculHours(item.DriveTest_Start_Time, item.DriveTest_Done_Date)), \"in this mission\"));else if (this.CalculHours(item.DriveTest_Start_Time, item.DriveTest_Done_Date) > 7200000 && item.DriveTest_State === true) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \" The driver has exceeded his provided time on this mission \"), React.createElement(\"h2\", {\n        style: {\n          color: \"#A13838\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"The driver spent   \", this.ResulatCalculhours(this.CalculHours(item.DriveTest_Start_Time, item.DriveTest_Done_Date)), \"in this mission\"));\n    } else if (item.DriveTest_State === false && item.DriveTest_Done_Date == null && today < d1) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \" This mission didn't started yet  \"));else if (item.DriveTest_State === false && item.DriveTest_Done_Date != null) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \" This mission was interrupted  \"));else if (today > d1 && item.DriveTest_State === false) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \" The driver has missed this mission \"));\n  }\n\n  HandleSearch() {\n    axios.get('http://localhost:4000/api/driveTest/search/' + this.state.query).then(response => {\n      this.setState({\n        drivetests: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  onKeyPress(event) {\n    if (event.which === 13\n    /* Enter */\n    ) {\n        event.preventDefault();\n      }\n  }\n\n  toggleSortTitle() {\n    let res;\n    let List = this.state.drivetests;\n    let NewList;\n    console.log(\"mel lou \", List);\n\n    if (this.state.sort) {\n      NewList = List.sort(function (a, b) {\n        res = a.DriveTest_Title.localeCompare(b.DriveTest_Title);\n        return res;\n      }); // console.log(this.state.sort)\n    } else {\n      NewList = List.reverse();\n    }\n\n    this.setState({\n      sort: !this.state.sort,\n      drivetests: NewList\n    });\n  }\n\n  toggleSortSetDate() {\n    let res;\n    let List = this.state.drivetests;\n    let NewList;\n    console.log(\"mel lou \", List);\n\n    if (this.state.sort) {\n      NewList = List.sort(function (a, b) {\n        res = a.DriveTest_Set_Date.localeCompare(b.DriveTest_Set_Date);\n        return res;\n      }); // console.log(this.state.sort)\n    } else {\n      NewList = List.reverse();\n    }\n\n    this.setState({\n      sort: !this.state.sort,\n      drivetests: NewList\n    });\n  }\n\n  toggleSortStartDate() {\n    let res;\n    let List = this.state.drivetests;\n    let NewList;\n    console.log(\"mel lou \", List);\n\n    if (this.state.sort) {\n      NewList = List.sort(function (a, b) {\n        res = a.DriveTest_Start_Time.localeCompare(b.DriveTest_Start_Time);\n        return res;\n      }); // console.log(this.state.sort)\n    } else {\n      NewList = List.reverse();\n    }\n\n    this.setState({\n      sort: !this.state.sort,\n      drivetests: NewList\n    });\n  }\n\n  render() {\n    const currentPage = this.state.currentPage;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\",\n      style: {\n        minHeight: \"600px\",\n        backgroundImage: \"url(\" + require(\"assets/img/theme/Logo-SFM.png\") + \")\",\n        backgroundSize: \"50 %\",\n        backgroundPosition: \"center top\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mask bg-gradient-gray-dark opacity-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"info\",\n      href: \"/admin/PlanDriveTest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"+ Add New drive Test \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-inline mt-4 mb-4\",\n      onKeyPress: this.onKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"form-control form-control-sm ml-3 w-75\",\n      type: \"text\",\n      placeholder: \"Search\",\n      \"aria-label\": \"Search\",\n      ref: input => this.search = input,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })), React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"Filter\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: () => this.HandleData(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"All\"), React.createElement(Dropdown.Item, {\n      onClick: () => this.HandleDone(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"Done Drive Tests \"), React.createElement(Dropdown.Item, {\n      onClick: () => this.HandlePending(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"Pending Drive Tests \"), React.createElement(Dropdown.Item, {\n      onClick: () => this.HandleMissed(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Missed Drive Tests \"), React.createElement(Dropdown.Item, {\n      onClick: () => this.HandleInterrupted(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"Interrupted Drive Tests \")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"All drive Tests\")), React.createElement(Table, {\n      className: \"align-items-center table-flush \",\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      outline: true,\n      type: \"button\",\n      onClick: this.toggleSortTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-bold-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), \" Title\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      outline: true,\n      type: \"button\",\n      onClick: this.toggleSortSetDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-bold-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }), \" Set Date\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"secondary\",\n      outline: true,\n      type: \"button\",\n      onClick: this.toggleSortStartDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-bold-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), \"  Start Time\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"State \"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"Done Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \" \"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, this.state.drivetests.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize).map(D => React.createElement(\"tr\", {\n      key: D._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, D.DriveTest_Title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, D.DriveTest_Description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, this.formatDate(D.DriveTest_Set_Date)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \" \", this.formatDate(D.DriveTest_Start_Time)), this.AffListConditionnel(D), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, \" \", React.createElement(UncontrolledDropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      className: \"btn-icon-only text-light\",\n      href: \"#pablo\",\n      role: \"button\",\n      size: \"sm\",\n      color: \"\",\n      onClick: e => e.preventDefault(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-ellipsis-v\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    })), React.createElement(DropdownMenu, {\n      className: \"dropdown-menu-arrow\",\n      right: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"info\",\n      onClick: () => {\n        this.HandleModalEval(D);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, \"Evaluation\")), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => {\n        this.HandleModal(D);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, \"Delete\")), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/admin/EditDriveTest/\".concat(D._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Update\")))))))))), React.createElement(CardFooter, {\n      className: \"py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      \"aria-label\": \"Page navigation example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(PaginationItem, {\n      disabled: currentPage === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: e => this.handleClick(e, currentPage - 1),\n      previous: true,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    })), [...Array(this.pagesCount)].map((page, i) => React.createElement(PaginationItem, {\n      active: i === currentPage,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: e => this.handleClick(e, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, i + 1))), React.createElement(PaginationItem, {\n      disabled: currentPage >= this.pagesCount - 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: e => this.handleClick(e, currentPage + 1),\n      next: true,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    })))))))))))), React.createElement(Modal, {\n      show: this.state.show,\n      onHide: () => this.HandleModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"DELETE CONFIRMATION \"))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, \" Are You sure You want to delete this drive test ? \")), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.HandleDelete(this.state.DriveTest),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"Confirm\"), React.createElement(Button, {\n      color: \"default\",\n      onClick: () => this.HandleModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Modal, {\n      show: this.state.showEval,\n      onHide: () => this.HandleModalEval(this.state.DriveTestEval),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, this.state.DriveTestEval.DriveTest_Title, \" Evaluation\"), React.createElement(\"h4\", {\n      style: {\n        color: \"#1A2493\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, \" \", this.state.DriveTestEval.DriveTest_Description, \"   \"), React.createElement(\"h4\", {\n      style: {\n        color: \"#9C145A\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, \" \", this.formatDate(this.state.DriveTestEval.DriveTest_Start_Time), \"   \"))), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, this.AffEvaluationConditionnel(this.state.DriveTestEval)), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"default\",\n      onClick: () => this.HandleModalEval(this.state.DriveTestEval),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default DrivetestlistAdmin;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/views/DriveTest/Engineer/DriveTestListAdmin.js"],"names":["React","Card","Container","Row","CardHeader","Table","CardFooter","DropdownMenu","DropdownItem","UncontrolledDropdown","DropdownToggle","axios","Button","Modal","MDBCol","MDBIcon","Link","Dropdown","Pagination","PaginationItem","PaginationLink","DrivetestlistAdmin","Component","constructor","props","state","drivetests","show","DriveTest","query","showEval","DriveTestEval","currentPage","sort","pageSize","handleInputChange","bind","HandleDone","HandlePending","HandleData","HandleModalEval","toggleSortTitle","toggleSortSetDate","toggleSortStartDate","HandleInterrupted","HandleMissed","handleClick","e","index","preventDefault","setState","componentDidMount","HandleModal","item","Object","assign","get","then","response","data","catch","error","console","log","pagesCount","Math","ceil","length","search","value","HandleSearch","HandleDelete","D","delete","_id","res","previousState","filter","m","document","location","href","err","formatDate","string","options","year","month","day","hour","minute","second","Date","toLocaleDateString","CalculHours","string1","string2","date1","date2","getTime","ResulatCalculhours","A","h","trunc","min","sec","ms","AffListConditionnel","d1","DriveTest_Start_Time","today","DriveTest_State","DriveTest_Done_Date","color","AffEvaluationConditionnel","onKeyPress","event","which","List","NewList","a","b","DriveTest_Title","localeCompare","reverse","DriveTest_Set_Date","render","minHeight","backgroundImage","require","backgroundSize","backgroundPosition","input","slice","map","DriveTest_Description","Array","page","i"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Card,\r\n\r\n    Container,\r\n    Row,\r\n\r\n    CardHeader,\r\n    Table,\r\n\r\n    CardFooter,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Button from \"reactstrap/es/Button\";\r\nimport {Modal} from \"react-bootstrap\";\r\nimport { MDBCol, MDBIcon} from \"mdbreact\";\r\nimport { Link } from 'react-router-dom';\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport  { Pagination ,PaginationItem, PaginationLink} from \"reactstrap\";\r\nclass DrivetestlistAdmin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            drivetests: [],\r\n            show :false,\r\n            DriveTest : '',\r\n            query:'',\r\n            showEval:false,\r\n            DriveTestEval :[],\r\n            currentPage: 0,\r\n            sort: true,\r\n\r\n        };\r\n        this.pageSize = 5;\r\n\r\n        //   this.pagesCount=this.pagesCount.bind(this);\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n        this.HandleDone=this.HandleDone.bind(this);\r\n        this.HandlePending=this.HandlePending.bind(this);\r\n        this.HandleData=this.HandleData.bind(this);\r\n        this.HandleModalEval=this.HandleModalEval.bind(this);\r\n        this.toggleSortTitle=this.toggleSortTitle.bind(this);\r\n        this.toggleSortSetDate=this.toggleSortSetDate.bind(this);\r\n        this.toggleSortStartDate=this.toggleSortStartDate.bind(this);\r\n        this.HandleInterrupted=this.HandleInterrupted.bind(this);\r\n        this.HandleMissed=this.HandleMissed.bind(this);\r\n    }\r\n\r\n    handleClick(e, index) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            currentPage: index\r\n        });\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.HandleData();\r\n\r\n\r\n    }\r\n    HandleModal(item) {\r\n        this.setState({\r\n            show: !this.state.show,\r\n            DriveTest :item\r\n        });\r\n    }\r\n    HandleModalEval(item){\r\n        var state = Object.assign(this.state, {    DriveTestEval:item });\r\n        this.setState({\r\n                showEval: !this.state.showEval,\r\n                state\r\n            }\r\n        );\r\n\r\n    }\r\n    HandleDone() {\r\n        axios.get('http://localhost:4000/api/driveTest/filter/done')\r\n            .then(response => {\r\n                this.setState({ drivetests: response.data });\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    HandlePending() {\r\n        axios.get('http://localhost:4000/api/driveTest/filter/pending')\r\n            .then(response => {\r\n                this.setState({ drivetests: response.data });\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    HandleMissed() {\r\n        axios.get('http://localhost:4000/api/driveTest/filter/missed')\r\n            .then(response => {\r\n                this.setState({ drivetests: response.data });\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    HandleInterrupted() {\r\n        axios.get('http://localhost:4000/api/driveTest/filter/interrupted')\r\n            .then(response => {\r\n                this.setState({ drivetests: response.data });\r\n                console.log(this.state.drivetests);\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    HandleData() {\r\n        axios.get('http://localhost:4000/api/driveTest')\r\n            .then(response => {\r\n                this.setState({ drivetests: response.data });\r\n                this.pagesCount = Math.ceil(this.state.drivetests.length / this.pageSize);\r\n                console.log('drive====',this.state.drivetests)\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    handleInputChange(){\r\n        this.setState({\r\n            query:  this.search.value\r\n        }, () => {\r\n            if (this.state.query && this.state.query.length > 1) {\r\n                if (this.state.query.length % 2 === 0) {\r\n                    this.HandleSearch();\r\n                }\r\n            }\r\n            else this.HandleData();\r\n        })\r\n    }\r\n    HandleDelete(D) {\r\n\r\n        axios.delete('http://localhost:4000/api/driveTest/DeleteDriveTest/'+D._id)\r\n            .then(res => {\r\n                this.setState(previousState => {\r\n                        return {\r\n                            drivetests: previousState.drivetests.filter(m => m._id !== D._id)\r\n                        };\r\n                    },\r\n                    document.location.href='/admin/DrivetestListAdmin');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n\r\n    }\r\n    formatDate(string){\r\n        var options = { year: 'numeric', month: 'long', day: 'numeric' ,hour:\"numeric\",minute:\"numeric\",second:\"numeric\"};\r\n        return new Date(string).toLocaleDateString([],options);\r\n    }\r\n    CalculHours(string1,string2){\r\n        const date1 = new Date(string1)\r\n        const date2 = new Date(string2)\r\n        let  res=(date2.getTime()-date1.getTime())\r\n        return res\r\n    }\r\n    ResulatCalculhours(A){\r\n        let h = Math.trunc(A/3600000)\r\n        console.log(h);\r\n        let min  = Math.trunc((A%3600000)/60000)\r\n        let sec =Math.trunc(((A%3600000)%60000)/1000)\r\n        let ms =((A%3600000)%60000)%1000\r\n        let  res = h +\" hours , \"+ min +\" minutes ,\"+ sec +\" secondes and \"+ ms+\" Millisecondes \"\r\n        console.log(res)\r\n        return res\r\n    }\r\n    AffListConditionnel(item){\r\n        console.log(item);\r\n        var d1 = new Date(item.DriveTest_Start_Time);\r\n        var today = new Date();\r\n        if(item.DriveTest_State===true && item.DriveTest_Done_Date!=null)\r\n            return <> <td style={{color: \"green\"}} > <strong>Done</strong> </td>\r\n                <td style={{color: \"green\"}} >{this.formatDate(item.DriveTest_Done_Date)}</td></>\r\n        else if (item.DriveTest_State===false && item.DriveTest_Done_Date ==null && (today<d1))\r\n            return <> <td style={{color: \"blue\"}} > <strong> Pending </strong> </td>\r\n                <td style={{color: \"blue\"}} > <strong> Pending </strong></td></>\r\n        else if (item.DriveTest_State===false && item.DriveTest_Done_Date !=null  )\r\n            return  <><td style={{color: \"orange\"}}> <strong>Interrupted</strong> </td>\r\n                <td style={{color: \"orange\"}}>{this.formatDate(item.DriveTest_Done_Date)}</td></>\r\n        else if( (today> d1) && item.DriveTest_State===false)\r\n            return <> <td style={{color: \"red\"}} > <strong>Missed</strong> </td>\r\n                <td style={{color: \"red\"}} ><strong>Missed</strong> </td></>\r\n\r\n\r\n    }\r\n    AffEvaluationConditionnel(item){\r\n        console.log(item);\r\n        var d1 = new Date(item.DriveTest_Start_Time);\r\n        var today = new Date();\r\n        if(item.DriveTest_State===true && item.DriveTest_Done_Date!=null)\r\n        {\r\n            if(this.CalculHours (item.DriveTest_Start_Time,item.DriveTest_Done_Date) <=7200000\r\n                && this.CalculHours (item.DriveTest_Start_Time,item.DriveTest_Done_Date)>0 )\r\n                return <div>\r\n                    <h1 style={{color: \"green\"}}> The driver did a great job </h1>\r\n                    <h2 style={{color: \"blue\"}}>\r\n                        The driver spent  {this.ResulatCalculhours(this.CalculHours (item.DriveTest_Start_Time,item.DriveTest_Done_Date))}\r\n                        in this mission\r\n                    </h2>\r\n                </div>\r\n            else if(this.CalculHours (item.DriveTest_Start_Time,item.DriveTest_Done_Date)>7200000 &&\r\n                item.DriveTest_State===true)\r\n                return <div>\r\n                    <h1 style={{color: \"red\"}} > The driver has exceeded his provided time on this mission </h1>\r\n                    <h2 style={{color: \"#A13838\"}}>\r\n                        The driver spent   {this.ResulatCalculhours(this.CalculHours (item.DriveTest_Start_Time,item.DriveTest_Done_Date))}\r\n                        in this mission\r\n                    </h2>\r\n                </div>  ;\r\n        }\r\n        else if (item.DriveTest_State===false && item.DriveTest_Done_Date ==null && (today<d1))\r\n            return  <div>\r\n                <h1 style={{color: \"blue\"}} > This mission didn't started yet  </h1>\r\n            </div>  ;\r\n        else if (item.DriveTest_State===false && item.DriveTest_Done_Date !=null )\r\n            return  <div>\r\n                <h1 style={{color: \"red\"}} > This mission was interrupted  </h1>\r\n            </div>  ;\r\n        else if( (today> d1) && item.DriveTest_State===false)\r\n            return <div>\r\n                <h1 style={{color: \"red\"}} > The driver has missed this mission </h1>\r\n            </div>  ;\r\n\r\n\r\n    }\r\n    HandleSearch(){\r\n\r\n        axios.get('http://localhost:4000/api/driveTest/search/'+this.state.query)\r\n            .then(response => {\r\n\r\n                this.setState({ drivetests: response.data });\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n\r\n\r\n    }\r\n    onKeyPress(event) {\r\n        if (event.which === 13 /* Enter */) {\r\n            event.preventDefault();\r\n        }}\r\n    toggleSortTitle(){\r\n        let res ;\r\n        let List =this.state.drivetests ;\r\n        let NewList;\r\n        console.log(\"mel lou \",List);\r\n        if(this.state.sort) {\r\n            NewList = List.sort(function (a,b) {\r\n                res=a.DriveTest_Title.localeCompare(b.DriveTest_Title)\r\n                return res;\r\n            });\r\n            // console.log(this.state.sort)\r\n        } else {\r\n            NewList = List.reverse()\r\n        }\r\n        this.setState({\r\n            sort:!this.state.sort,\r\n            drivetests:NewList\r\n        })\r\n\r\n    }\r\n    toggleSortSetDate(){\r\n        let res ;\r\n        let List =this.state.drivetests ;\r\n        let NewList;\r\n        console.log(\"mel lou \",List);\r\n        if(this.state.sort) {\r\n            NewList = List.sort(function (a,b) {\r\n                res=a.DriveTest_Set_Date.localeCompare(b.DriveTest_Set_Date)\r\n                return res;\r\n            });\r\n            // console.log(this.state.sort)\r\n        } else {\r\n            NewList = List.reverse()\r\n        }\r\n        this.setState({\r\n            sort:!this.state.sort,\r\n            drivetests:NewList\r\n        })\r\n\r\n    }\r\n\r\n    toggleSortStartDate(){\r\n        let res ;\r\n        let List =this.state.drivetests ;\r\n        let NewList;\r\n        console.log(\"mel lou \",List);\r\n        if(this.state.sort) {\r\n            NewList = List.sort(function (a,b) {\r\n                res=a.DriveTest_Start_Time.localeCompare(b.DriveTest_Start_Time)\r\n                return res;\r\n            });\r\n            // console.log(this.state.sort)\r\n        } else {\r\n            NewList = List.reverse()\r\n        }\r\n        this.setState({\r\n            sort:!this.state.sort,\r\n            drivetests:NewList\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const { currentPage } = this.state;\r\n        return (\r\n            <>\r\n                <div className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n                     style={{\r\n                         minHeight: \"600px\",\r\n                         backgroundImage:\r\n                             \"url(\" + require(\"assets/img/theme/Logo-SFM.png\") + \")\",\r\n                         backgroundSize: \"50 %\"  ,\r\n                         backgroundPosition: \"center top\"\r\n                     }}>\r\n                    <span className=\"mask bg-gradient-gray-dark opacity-8\" />\r\n                    <Container fluid>\r\n                        <Button color=\"info\"  href=\"/admin/PlanDriveTest\" >+ Add New drive Test </Button>\r\n                        <br/> <br/>\r\n                        <div className=\"header-body\">\r\n                            {/* Card stats */}\r\n                            <Row>\r\n                                <div className=\"col\">\r\n                                    <Card className=\"shadow\">\r\n                                        <CardHeader className=\"border-0\">\r\n                                            <MDBCol md=\"6\">\r\n                                                <form className=\"form-inline mt-4 mb-4\" onKeyPress={this.onKeyPress} >\r\n                                                    <MDBIcon icon=\"search\" />\r\n                                                    <input className=\"form-control form-control-sm ml-3 w-75\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"\r\n                                                           ref={input => this.search = input}\r\n                                                           onChange={this.handleInputChange}/>\r\n                                                </form>\r\n                                                <Dropdown>\r\n                                                    <Dropdown.Toggle variant=\"warning\">\r\n                                                        Filter\r\n                                                    </Dropdown.Toggle>\r\n\r\n                                                    <Dropdown.Menu>\r\n                                                        <Dropdown.Item onClick={()=>this.HandleData()} >All</Dropdown.Item>\r\n                                                        <Dropdown.Item onClick={()=>this.HandleDone()} >Done Drive Tests </Dropdown.Item>\r\n                                                        <Dropdown.Item onClick={()=>this.HandlePending()}>Pending Drive Tests </Dropdown.Item>\r\n                                                        <Dropdown.Item onClick={()=>this.HandleMissed()}>Missed Drive Tests </Dropdown.Item>\r\n                                                        <Dropdown.Item onClick={()=>this.HandleInterrupted()}>Interrupted Drive Tests </Dropdown.Item>\r\n                                                    </Dropdown.Menu>\r\n                                                </Dropdown>\r\n                                            </MDBCol>\r\n                                            <br></br>\r\n                                               <h3 className=\"mb-0\">All drive Tests</h3>\r\n\r\n\r\n                                        </CardHeader>\r\n                                        <Table className=\"align-items-center table-flush \" responsive >\r\n                                            <thead className=\"thead-light\">\r\n                                            <tr>\r\n                                                <th scope=\"col\">\r\n                                                    <Button  color=\"secondary\" outline type=\"button\" onClick={this.toggleSortTitle}>\r\n                                                        <i className=\"ni ni-bold-up\"></i> Title\r\n                                                    </Button>\r\n                                                </th>\r\n                                                <th scope=\"col\">Description</th>\r\n                                                <th scope=\"col\">\r\n                                                    <Button  color=\"secondary\" outline type=\"button\" onClick={this.toggleSortSetDate}>\r\n                                                        <i className=\"ni ni-bold-up\"></i> Set Date\r\n                                                    </Button>\r\n                                                </th>\r\n                                                <th scope=\"col\">\r\n                                                    <Button  color=\"secondary\" outline type=\"button\" onClick={this.toggleSortStartDate}>\r\n                                                        <i className=\"ni ni-bold-up\"></i>  Start Time\r\n                                                    </Button>\r\n                                                </th>\r\n                                                <th scope=\"col\">State </th>\r\n                                                <th scope=\"col\">\r\n                                                    Done Date\r\n\r\n                                                </th>\r\n\r\n\r\n\r\n                                                <th> </th>\r\n\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                            {this.state.drivetests\r\n                                                .slice(\r\n                                                    currentPage * this.pageSize,\r\n                                                    (currentPage + 1) * this.pageSize\r\n                                                )\r\n                                                .map(D => (\r\n                                                    <tr key={D._id}>\r\n                                                        <td>{D.DriveTest_Title}</td>\r\n                                                        <td>{D.DriveTest_Description}</td>\r\n                                                        <td>{this.formatDate(D.DriveTest_Set_Date)}</td>\r\n                                                        <td> {this.formatDate(D.DriveTest_Start_Time)}</td>\r\n                                                        { this.AffListConditionnel(D)}\r\n                                                        <td> <UncontrolledDropdown>\r\n                                                            <DropdownToggle\r\n                                                                className=\"btn-icon-only text-light\"\r\n                                                                href=\"#pablo\"\r\n                                                                role=\"button\"\r\n                                                                size=\"sm\"\r\n                                                                color=\"\"\r\n                                                                onClick={e => e.preventDefault()}\r\n                                                            >\r\n                                                                <i className=\"fas fa-ellipsis-v\" />\r\n                                                            </DropdownToggle>\r\n                                                            <DropdownMenu className=\"dropdown-menu-arrow\" right>\r\n                                                                <DropdownItem>\r\n                                                                    <Button color=\"info\"  onClick={()=>{this.HandleModalEval(D)}} >Evaluation</Button>\r\n                                                                </DropdownItem>\r\n                                                                <DropdownItem>\r\n                                                                    <Button color=\"danger\"  onClick={()=>{this.HandleModal(D)}} >Delete</Button>\r\n                                                                </DropdownItem>\r\n                                                                <DropdownItem>\r\n                                                                    <Link to={`/admin/EditDriveTest/${D._id}`}><Button color=\"success\">Update</Button>\r\n                                                                    </Link>\r\n                                                                </DropdownItem>\r\n\r\n                                                            </DropdownMenu>\r\n                                                        </UncontrolledDropdown></td>\r\n                                                    </tr>\r\n\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                        <CardFooter className=\"py-4\">\r\n                                            <nav >\r\n                                                <div>\r\n                                                    <Pagination aria-label=\"Page navigation example\">\r\n                                                        <PaginationItem  disabled={currentPage ===0} >\r\n                                                            <PaginationLink\r\n                                                                onClick={e => this.handleClick(e, currentPage - 1)}\r\n                                                                previous\r\n                                                                href=\"#\"\r\n                                                            />\r\n                                                        </PaginationItem>\r\n\r\n                                                        {[...Array(this.pagesCount)].map((page, i) =>\r\n                                                            <PaginationItem active={i === currentPage} key={i}>\r\n                                                                <PaginationLink onClick={e => this.handleClick(e, i)}>\r\n                                                                    {i + 1}\r\n                                                                </PaginationLink>\r\n                                                            </PaginationItem>\r\n                                                        )}\r\n                                                        <PaginationItem disabled={currentPage >= this.pagesCount -1} >\r\n                                                            <PaginationLink\r\n                                                                onClick={e => this.handleClick(e, currentPage + 1)}\r\n                                                                next\r\n                                                                href=\"#\"\r\n                                                            />\r\n\r\n                                                        </PaginationItem>\r\n\r\n                                                    </Pagination>\r\n                                                </div>\r\n                                            </nav>\r\n                                        </CardFooter>\r\n\r\n                                    </Card>\r\n\r\n                                </div>\r\n                            </Row>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n\r\n                <Modal show={this.state.show} onHide={()=>this.HandleModal()}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            <h2>DELETE CONFIRMATION </h2>\r\n                        </Modal.Title >\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h4> Are You sure You want to delete this drive test ? </h4>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                        <Button color=\"danger\" onClick={()=>this.HandleDelete(this.state.DriveTest)} >\r\n                            Confirm\r\n                        </Button>\r\n                        <Button color=\"default\"  onClick={()=>this.HandleModal()}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal  show={this.state.showEval} onHide={()=>this.HandleModalEval(this.state.DriveTestEval)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title >\r\n                            <h2 style={{color: \"blue\"}} >{this.state.DriveTestEval.DriveTest_Title} Evaluation</h2>\r\n                            <h4 style={{color: \"#1A2493\"}}  > {this.state.DriveTestEval.DriveTest_Description}   </h4>\r\n                            <h4 style={{color: \"#9C145A\"}}  > {this.formatDate(this.state.DriveTestEval.DriveTest_Start_Time)}   </h4>\r\n\r\n                        </Modal.Title >\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {this.AffEvaluationConditionnel(this.state.DriveTestEval)}\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button color=\"default\"  onClick={()=>this.HandleModalEval(this.state.DriveTestEval)}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DrivetestlistAdmin;\r\n"]},"metadata":{},"sourceType":"module"}
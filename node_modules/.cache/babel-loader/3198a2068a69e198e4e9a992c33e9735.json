{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\views\\\\DriveTest\\\\Engineer\\\\EditDriveTestInformations.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React from \"react\";\nimport Datetime from \"react-datetime\"; // reactstrap components\n\nimport { Button, Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Input, InputGroup, Modal, InputGroupAddon, InputGroupText, Collapse } from \"reactstrap\";\nimport axios from \"axios\";\nimport bsCustomFileInput from \"bs-custom-file-input\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport Badge from \"react-bootstrap/Badge\";\nimport jwt_decode from \"jwt-decode\";\n\nclass EditDriveTestInformations extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleRoadChange = this.handleRoadChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.onSubmit1 = this.onSubmit1.bind(this);\n    this.onSubmit2 = this.onSubmit2.bind(this);\n    this.onSubmit3 = this.onSubmit3.bind(this);\n    this.validator = new SimpleReactValidator({\n      autoForceUpdate: this\n    });\n    this.validator2 = new SimpleReactValidator({\n      autoForceUpdate: this,\n      validators: {\n        csv: {\n          // name the rule\n          message: 'This file must be data set  with .CSV/.csv extension.',\n          rule: (val, params, validator) => {\n            return validator.helpers.testRegex(val, /(?:.*).CSV|csv/);\n          }\n        }\n      }\n    });\n    this.validator1 = new SimpleReactValidator({\n      autoForceUpdate: this,\n      validators: {\n        py: {\n          // name the rule\n          message: 'This file must be python script with .py extension.',\n          rule: (val, params, validator) => {\n            return validator.helpers.testRegex(val, /(?:.*).py/);\n          }\n        }\n      }\n    });\n    this.state = {\n      DriveTest_Title: '',\n      DriveTest_Description: '',\n      DriveTest_Start_Time: null,\n      DriveTest_File: null,\n      DriveTest_Road: null,\n      DriveTest_Driver: null,\n      isOpen1: false,\n      isOpen2: false,\n      isOpen3: false,\n      notificationModal: false,\n      techCompanies: [{\n        label: \"Mohamed Salah\",\n        id: \"kh3214fsfsd3fs4fds3f\"\n      }, {\n        label: \"Oumeima Ibn elfekih \",\n        id: \"kh3214fsfsd3fs4fds3f\"\n      }, {\n        label: \"Khouloud sallemi\",\n        id: \"kh3214fsfsd3fs4fdsaaaaaaaaaaaaaaaaaaaaaaaaa3f\"\n      }],\n      file1: null,\n      file2: null\n    };\n  }\n\n  handleSelectChange(e) {\n    this.setState({\n      DriveTest_Driver: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    let url = 'http://localhost:4000/api/driveTest/' + this.props.match.params._id;\n    axios.get(url).then(response => {\n      console.log(\"res=\", response);\n      this.setState({\n        DriveTest_Title: response.data.DriveTest_Title,\n        DriveTest_Description: response.data.DriveTest_Description,\n        DriveTest_Start_Time: response.data.DriveTest_Start_Time,\n        DriveTest_Driver: response.data.DriveTest_Driver_id\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  handleTitleChange(e) {\n    this.setState({\n      DriveTest_Title: e.target.value\n    });\n  }\n\n  handleDescChange(e) {\n    this.setState({\n      DriveTest_Description: e.target.value\n    });\n  }\n\n  handleTimeChange(date) {\n    this.setState({\n      DriveTest_Start_Time: date\n    });\n  }\n\n  handleFileChange(e) {\n    this.setState({\n      DriveTest_File: e.target.files[0],\n      file1: e.target.files[0].name,\n      loaded: 0\n    });\n  }\n\n  handleRoadChange(e) {\n    this.setState({\n      DriveTest_Road: e.target.files[0],\n      file2: e.target.files[0].name,\n      loaded: 0\n    });\n  }\n\n  HandleCollapse1() {\n    if (this.state.isOpen2 === true || this.state.isOpen3 === true) this.setState({\n      isOpen1: !this.state.isOpen1,\n      isOpen3: false,\n      isOpen2: false\n    });else this.setState({\n      isOpen1: !this.state.isOpen1\n    });\n  }\n\n  HandleCollapse2() {\n    if (this.state.isOpen1 === true || this.state.isOpen3 === true) this.setState({\n      isOpen2: !this.state.isOpen2,\n      isOpen3: false,\n      isOpen1: false\n    });else this.setState({\n      isOpen2: !this.state.isOpen2\n    });\n  }\n\n  HandleCollapse3() {\n    if (this.state.isOpen1 === true || this.state.isOpen2 === true) this.setState({\n      isOpen3: !this.state.isOpen3,\n      isOpen2: false,\n      isOpen1: false\n    });else this.setState({\n      isOpen3: !this.state.isOpen3\n    });\n  }\n\n  GoList() {\n    const token = localStorage.usertoken;\n    const decoded = jwt_decode(token);\n\n    if (decoded.role === \"Admin\") {\n      document.location.href = '/admin/DrivetestListAdmin';\n    } else if (decoded.role === \"Engineer\") {\n      document.location.href = '/admin/Engineer';\n    }\n  }\n\n  UpdateDriveTest() {\n    document.location.href = '/admin/EditDriveTest/' + this.props.match.params._id;\n  }\n\n  onSubmit1(e) {\n    e.preventDefault();\n\n    if (this.validator.allValid()) {\n      const obj = {\n        DriveTest_Title: this.state.DriveTest_Title,\n        DriveTest_Description: this.state.DriveTest_Description,\n        DriveTest_Start_Time: this.state.DriveTest_Start_Time,\n        DriveTest_Driver_id: this.state.DriveTest_Driver\n      };\n      console.log(\"obj=\", obj);\n      let url = 'http://localhost:4000/api/driveTest/UpdateDriveTest/' + this.props.match.params._id;\n      console.log(url);\n      axios.post(url, obj).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            notificationModal: !this.state.notificationModal\n          });\n        } else {\n          console.log('DriveTest failed to update');\n        }\n      });\n    } else {\n      this.validator.showMessages();\n    }\n  }\n\n  onSubmit2(e) {\n    e.preventDefault();\n\n    if (this.validator2.allValid()) {\n      const formData = new FormData();\n      formData.append('DriveTestRoad', this.state.DriveTest_Road);\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      let url = 'http://localhost:4000/api/driveTest/UpdateDriveTestRoad/' + this.props.match.params._id;\n      axios.post(url, formData, config).then(response => {\n        console.log(this.state.notificationModal);\n\n        if (response.status === 200) {\n          this.setState({\n            notificationModal: !this.state.notificationModal\n          });\n        } else {\n          console.log('DriveTest failed to update');\n        }\n      });\n    } else {\n      this.validator2.showMessages();\n    }\n  }\n\n  onSubmit3(e) {\n    e.preventDefault();\n\n    if (this.validator1.allValid()) {\n      const formData = new FormData();\n      formData.append('DriveTestFile', this.state.DriveTest_File);\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      let url = 'http://localhost:4000/api/driveTest/UpdateDriveTestfile/' + this.props.match.params._id;\n      axios.post(url, formData, config).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            notificationModal: !this.state.notificationModal\n          });\n        } else {\n          console.log('DriveTest failed to update');\n        }\n      });\n    } else {\n      this.validator1.showMessages();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\",\n      style: {\n        minHeight: \"600px\",\n        backgroundImage: \"url(\" + require(\"assets/img/theme/Logo-SFM.png\") + \")\",\n        backgroundSize: \"50 %\",\n        backgroundPosition: \"center top\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mask bg-gradient-default opacity-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"d-flex align-items-center\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"d-flex align-items-center\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"8\",\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"70rem\"\n      },\n      className: \"bg-secondary shadow border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-transparent pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center mt-2 mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Choose what You want to update \")), React.createElement(\"div\", {\n      className: \"text-center mt-2 mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => {\n        this.HandleCollapse1();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Informations\"), React.createElement(Button, {\n      color: \"info\",\n      onClick: () => {\n        this.HandleCollapse2();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"The Road\"), React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => {\n        this.HandleCollapse3();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"The drive test file\"))), React.createElement(CardBody, {\n      className: \"px-lg-5 py-lg-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Collapse, {\n      isOpen: this.state.isOpen1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center text-muted mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"All fields are required * \")), React.createElement(Form, {\n      onSubmit: this.onSubmit1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"input-group-alternative mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-check-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"Write the Title\",\n      type: \"text\",\n      value: this.state.DriveTest_Title,\n      onChange: this.handleTitleChange,\n      name: \"DriveTest_Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, this.validator.message('DriveTest_Title', this.state.DriveTest_Title, 'required'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"input-group-alternative mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-align-left-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }))), React.createElement(\"textarea\", {\n      className: \"form-control-alternative form-control\",\n      rows: \"6\",\n      placeholder: \"Write the description here...\",\n      type: \"text\",\n      value: this.state.DriveTest_Description,\n      onChange: this.handleDescChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, this.validator.message('DriveTest_Description', this.state.DriveTest_Description, 'required'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"input-group-alternative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-calendar-grid-58\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }))), React.createElement(Datetime, {\n      dateFormat: \"DD-MM-YYYY\",\n      showTimeSelect: true,\n      required: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 5,\n      timeCaption: \"time\",\n      inputProps: {\n        placeholder: \"Date Picker Here...\" + \" Select the date and time for this drive test\"\n      },\n      name: \"DriveTest_Start_Time\",\n      selected: this.state.DriveTest_Start_Time,\n      onChange: this.handleTimeChange,\n      value: this.state.DriveTest_Start_Time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, this.validator.message('DriveTest_Start_Time', this.state.DriveTest_Start_Time, 'required'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      name: \"DriveTest_Driver\",\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"Update the affected driver for this mission... \"), this.state.techCompanies.map(V => React.createElement(\"option\", {\n      value: V.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, V.label))), React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, this.validator.message('DriveTest_Driver', this.state.DriveTest_Driver, 'required'))), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mt-4\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"Update drive test informations\")))))), React.createElement(Collapse, {\n      isOpen: this.state.isOpen2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"  \", React.createElement(Form, {\n      onSubmit: this.onSubmit2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"input-group-alternative mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputGroupFile01\",\n      type: \"file\",\n      className: \"custom-file-input\",\n      onChange: this.handleRoadChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-file-label\",\n      htmlFor: \"inputGroupFile01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, \"Update file for this drive test's Road\"))), React.createElement(Badge, {\n      className: \"badge-danger\",\n      pill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, this.validator2.message('DriveTest_Road', this.state.file2, 'required|csv')), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mt-4\",\n      color: \"info\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, \"Update Drive Test road\")))), \" \"))), React.createElement(Collapse, {\n      isOpen: this.state.isOpen3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \" \", React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, \"  \", React.createElement(Form, {\n      onSubmit: this.onSubmit3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"input-group-alternative mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputGroupFile01\",\n      type: \"file\",\n      className: \"custom-file-input\",\n      onChange: this.handleFileChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-file-label\",\n      htmlFor: \"inputGroupFile01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Choose file for this drive test\"))), React.createElement(Badge, {\n      className: \"badge-danger\",\n      pill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, this.validator1.message('DriveTest_File', this.state.file1, 'required|py')), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mt-4\",\n      color: \"danger\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Update drive test file\")))), \" \")))))))))), React.createElement(Modal, {\n      className: \"modal-dialog-centered modal-info\",\n      isOpen: this.state.notificationModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"modal-title\",\n      id: \"modal-title-notification\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, \"Alert\")), React.createElement(\"div\", {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"py-3 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-bell-55 ni-3x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      className: \"heading mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, \"  Your Drive Test was successfully updated!\"))), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"btn-white\",\n      color: \"default\",\n      type: \"button\",\n      onClick: () => this.GoList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, \"Got it ,Return to The list\"), React.createElement(Button, {\n      className: \"text-white ml-auto\",\n      color: \"link\",\n      \"data-dismiss\": \"modal\",\n      type: \"button\",\n      onClick: () => this.UpdateDriveTest(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, \"Complete Your Changes\"))));\n  }\n\n}\n\nexport default EditDriveTestInformations;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/views/DriveTest/Engineer/EditDriveTestInformations.js"],"names":["React","Datetime","Button","Container","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","Input","InputGroup","Modal","InputGroupAddon","InputGroupText","Collapse","axios","bsCustomFileInput","SimpleReactValidator","Badge","jwt_decode","EditDriveTestInformations","Component","constructor","props","handleTitleChange","bind","handleDescChange","handleTimeChange","handleFileChange","handleRoadChange","handleSelectChange","onSubmit1","onSubmit2","onSubmit3","validator","autoForceUpdate","validator2","validators","csv","message","rule","val","params","helpers","testRegex","validator1","py","state","DriveTest_Title","DriveTest_Description","DriveTest_Start_Time","DriveTest_File","DriveTest_Road","DriveTest_Driver","isOpen1","isOpen2","isOpen3","notificationModal","techCompanies","label","id","file1","file2","e","setState","target","value","componentDidMount","init","url","match","_id","get","then","response","console","log","data","DriveTest_Driver_id","catch","error","date","files","name","loaded","HandleCollapse1","HandleCollapse2","HandleCollapse3","GoList","token","localStorage","usertoken","decoded","role","document","location","href","UpdateDriveTest","preventDefault","allValid","obj","post","status","showMessages","formData","FormData","append","config","headers","render","minHeight","backgroundImage","require","backgroundSize","backgroundPosition","width","color","fontWeight","placeholder","map","V"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport Datetime from\"react-datetime\";\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    InputGroup,Modal,\r\n    InputGroupAddon, InputGroupText ,Collapse\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport bsCustomFileInput from \"bs-custom-file-input\";\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport jwt_decode from \"jwt-decode\";\r\nclass EditDriveTestInformations extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleDescChange = this.handleDescChange.bind(this);\r\n        this.handleTimeChange = this.handleTimeChange.bind(this);\r\n        this.handleFileChange = this.handleFileChange.bind(this);\r\n        this.handleRoadChange=this.handleRoadChange.bind(this);\r\n        this.handleSelectChange=this.handleSelectChange.bind(this);\r\n        this.onSubmit1 = this.onSubmit1.bind(this);\r\n        this.onSubmit2 = this.onSubmit2.bind(this);\r\n        this.onSubmit3 = this.onSubmit3.bind(this);\r\n        this.validator = new SimpleReactValidator({autoForceUpdate: this});\r\n        this.validator2 = new SimpleReactValidator({autoForceUpdate: this,\r\n            validators: {\r\n                csv: {  // name the rule\r\n                    message: 'This file must be data set  with .CSV/.csv extension.',\r\n                    rule: (val, params, validator) => {\r\n                        return validator.helpers.testRegex(val,/(?:.*).CSV|csv/)\r\n                    }\r\n                }}});\r\n        this.validator1= new SimpleReactValidator({autoForceUpdate: this ,\r\n\r\n            validators: {\r\n                py: {  // name the rule\r\n                    message: 'This file must be python script with .py extension.',\r\n                    rule: (val, params, validator) => {\r\n                        return validator.helpers.testRegex(val,/(?:.*).py/)\r\n                    }\r\n                }}});\r\n        this.state = {\r\n            DriveTest_Title: '',\r\n            DriveTest_Description: '',\r\n            DriveTest_Start_Time: null,\r\n            DriveTest_File:  null,\r\n            DriveTest_Road:null,\r\n            DriveTest_Driver:null,\r\n            isOpen1 :false,\r\n            isOpen2 :false,\r\n            isOpen3 :false,\r\n            notificationModal :false,\r\n            techCompanies : [\r\n                { label: \"Mohamed Salah\", id: \"kh3214fsfsd3fs4fds3f\" },\r\n                { label: \"Oumeima Ibn elfekih \", id: \"kh3214fsfsd3fs4fds3f\" },\r\n                { label: \"Khouloud sallemi\", id: \"kh3214fsfsd3fs4fdsaaaaaaaaaaaaaaaaaaaaaaaaa3f\" },\r\n            ],\r\n            file1:null, file2:null,\r\n        }}\r\n    handleSelectChange  (e)  {\r\n        this.setState({DriveTest_Driver: e.target.value  });\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        bsCustomFileInput.init();\r\n        let url ='http://localhost:4000/api/driveTest/'+this.props.match.params._id;\r\n        axios.get(url)\r\n            .then(response => {\r\n                console.log(\"res=\",response);\r\n                this.setState({\r\n                    DriveTest_Title: response.data.DriveTest_Title,\r\n                    DriveTest_Description: response.data.DriveTest_Description,\r\n                    DriveTest_Start_Time: response.data.DriveTest_Start_Time,\r\n                    DriveTest_Driver: response.data.DriveTest_Driver_id,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n    handleTitleChange(e) {\r\n        this.setState({\r\n            DriveTest_Title: e.target.value\r\n        });\r\n    }\r\n    handleDescChange(e) {\r\n        this.setState({\r\n            DriveTest_Description: e.target.value\r\n        });\r\n    }\r\n    handleTimeChange(date) {\r\n\r\n        this.setState({\r\n            DriveTest_Start_Time: date\r\n        });\r\n    }\r\n    handleFileChange(e) {\r\n        this.setState({\r\n            DriveTest_File: e.target.files[0],\r\n            file1:e.target.files[0].name,\r\n            loaded: 0,\r\n        });\r\n    }\r\n    handleRoadChange(e) {\r\n        this.setState({\r\n            DriveTest_Road: e.target.files[0],\r\n            file2:  e.target.files[0].name,\r\n            loaded: 0,\r\n        });\r\n    }\r\n    HandleCollapse1() {\r\n        if(this.state.isOpen2 === true || this.state.isOpen3=== true )\r\n            this.setState({\r\n                isOpen1: !this.state.isOpen1,\r\n                isOpen3 : false ,\r\n                isOpen2 : false\r\n            });\r\n        else\r\n            this.setState({\r\n                isOpen1: !this.state.isOpen1,\r\n            });\r\n    }\r\n    HandleCollapse2() {\r\n        if(this.state.isOpen1 === true || this.state.isOpen3=== true )\r\n            this.setState({\r\n                isOpen2: !this.state.isOpen2,\r\n                isOpen3 : false ,\r\n                isOpen1: false\r\n            });\r\n        else\r\n            this.setState({\r\n                isOpen2: !this.state.isOpen2,\r\n            });\r\n    }\r\n    HandleCollapse3() {\r\n        if(this.state.isOpen1 === true || this.state.isOpen2=== true )\r\n            this.setState({\r\n                isOpen3: !this.state.isOpen3,\r\n                isOpen2 : false ,\r\n                isOpen1: false\r\n            });\r\n        else\r\n            this.setState({\r\n                isOpen3: !this.state.isOpen3,\r\n            });\r\n    }\r\n    GoList(){\r\n        const token = localStorage.usertoken\r\n        const decoded = jwt_decode(token)\r\n            if (decoded.role === \"Admin\") {\r\n                document.location.href = '/admin/DrivetestListAdmin'\r\n            } else if (decoded.role === \"Engineer\") {\r\n                document.location.href = '/admin/Engineer'\r\n            }\r\n        }\r\n\r\n\r\n    UpdateDriveTest(){\r\n        document.location.href='/admin/EditDriveTest/'+this.props.match.params._id;\r\n    }\r\n\r\n    onSubmit1(e) {\r\n        e.preventDefault();\r\n        if (this.validator.allValid()) {\r\n            const obj = {\r\n                DriveTest_Title: this.state.DriveTest_Title,\r\n                DriveTest_Description: this.state.DriveTest_Description,\r\n                DriveTest_Start_Time: this.state.DriveTest_Start_Time,\r\n                DriveTest_Driver_id:this.state.DriveTest_Driver\r\n            };\r\n            console.log(\"obj=\", obj);\r\n            let url = 'http://localhost:4000/api/driveTest/UpdateDriveTest/' + this.props.match.params._id;\r\n            console.log(url);\r\n            axios.post(url, obj)\r\n                .then(response => {\r\n                    if (response.status === 200) {\r\n                        this.setState({\r\n                            notificationModal: !this.state.notificationModal\r\n\r\n                        });\r\n                    } else {\r\n                        console.log('DriveTest failed to update')\r\n\r\n                    }\r\n                });\r\n\r\n        }else {\r\n            this.validator.showMessages();\r\n        }\r\n\r\n    }\r\n    onSubmit2(e) {\r\n        e.preventDefault();\r\n        if (this.validator2.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('DriveTestRoad', this.state.DriveTest_Road);\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            };\r\n            let url = 'http://localhost:4000/api/driveTest/UpdateDriveTestRoad/' + this.props.match.params._id;\r\n            axios.post(url, formData, config)\r\n                .then(response => {\r\n                    console.log(this.state.notificationModal);\r\n                    if (response.status === 200) {\r\n                        this.setState({\r\n                            notificationModal: !this.state.notificationModal\r\n\r\n                        });\r\n                    } else {\r\n                        console.log('DriveTest failed to update')\r\n\r\n                    }\r\n                }); }else {\r\n            this.validator2.showMessages();\r\n        }}\r\n\r\n\r\n\r\n    onSubmit3(e) {\r\n        e.preventDefault();\r\n        if (this.validator1.allValid()) {\r\n            const formData = new FormData();\r\n            formData.append('DriveTestFile',this.state.DriveTest_File);\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data'\r\n                }\r\n            };\r\n            let url ='http://localhost:4000/api/driveTest/UpdateDriveTestfile/'+this.props.match.params._id;\r\n            axios.post(url,formData,config)\r\n                .then(response =>\r\n                {\r\n                    if ( response.status === 200)\r\n                    {\r\n                        this.setState({\r\n                            notificationModal : !this.state.notificationModal\r\n\r\n                        });\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log('DriveTest failed to update')\r\n\r\n                    }\r\n                });}else {\r\n            this.validator1.showMessages();\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n                    style={{\r\n                        minHeight: \"600px\",\r\n                        backgroundImage:\r\n                            \"url(\" + require(\"assets/img/theme/Logo-SFM.png\") + \")\",\r\n                        backgroundSize: \"50 %\"  ,\r\n                        backgroundPosition: \"center top\"\r\n                    }}>\r\n\r\n                    {/* Mask */}\r\n                    <span className=\"mask bg-gradient-default opacity-8\" />\r\n                    {/* Header container */}\r\n\r\n                    <Container className=\"d-flex align-items-center\" fluid>\r\n                        <Container className=\"d-flex align-items-center\" fluid>\r\n\r\n                            <Row>\r\n                                <Col lg=\"8\" md=\"6\">\r\n                                    <Card  style={{ width: \"70rem\" }} className=\"bg-secondary shadow border-0\">\r\n                                        <CardHeader className=\"bg-transparent pb-5\">\r\n                                            <div className=\"text-center mt-2 mb-4\">\r\n                                                <strong>Choose what You want to update </strong>\r\n                                            </div>\r\n                                            <div className=\"text-center mt-2 mb-4\">\r\n                                                <Button color=\"primary\" onClick={()=>{this.HandleCollapse1()}}>Informations</Button>\r\n                                                <Button color=\"info\" onClick={()=>{this.HandleCollapse2()}}>The Road</Button>\r\n                                                <Button color=\"danger\" onClick={()=>{this.HandleCollapse3()}}>The drive test file</Button>\r\n                                            </div>\r\n                                        </CardHeader>\r\n                                        <CardBody className=\"px-lg-5 py-lg-5\">\r\n                                            <Collapse isOpen={this.state.isOpen1}>\r\n                                                <Card>\r\n                                                    <CardBody>\r\n                                                        <div className=\"text-center text-muted mb-4\">\r\n                                                            <small>All fields are required * </small>\r\n                                                        </div>\r\n                                                        <Form  onSubmit={this.onSubmit1} >\r\n\r\n                                                            <FormGroup>\r\n                                                                <InputGroup className=\"input-group-alternative mb-3\">\r\n                                                                    <InputGroupAddon addonType=\"prepend\">\r\n                                                                        <InputGroupText>\r\n                                                                            <i className=\"ni ni-check-bold\" />\r\n                                                                        </InputGroupText>\r\n                                                                    </InputGroupAddon>\r\n                                                                    <Input placeholder=\"Write the Title\" type=\"text\"\r\n                                                                           value={this.state.DriveTest_Title}\r\n                                                                           onChange={this.handleTitleChange}\r\n                                                                           name=\"DriveTest_Title\"\r\n                                                                    />\r\n                                                                </InputGroup>\r\n                                                                <p style={{color:\"red\" , fontWeight: 'bold' }}>\r\n                                                                    {this.validator.message('DriveTest_Title', this.state.DriveTest_Title, 'required')}\r\n                                                                </p>\r\n\r\n                                                            </FormGroup>\r\n\r\n                                                            <FormGroup>\r\n                                                                <InputGroup className=\"input-group-alternative mb-3\">\r\n                                                                    <InputGroupAddon addonType=\"prepend\">\r\n                                                                        <InputGroupText>\r\n                                                                            <i className=\"ni ni-align-left-2\" />\r\n                                                                        </InputGroupText>\r\n                                                                    </InputGroupAddon>\r\n                                                                    <textarea className=\"form-control-alternative form-control\"\r\n                                                                              rows=\"6\" placeholder=\"Write the description here...\" type=\"text\"\r\n                                                                              value={this.state.DriveTest_Description}\r\n                                                                              onChange={this.handleDescChange}\r\n                                                                    >\r\n                                                                    </textarea>\r\n\r\n                                                                </InputGroup>\r\n                                                                <p style={{color:\"red\" , fontWeight: 'bold'  }}>\r\n                                                                    {this.validator.message('DriveTest_Description', this.state.DriveTest_Description, 'required')}\r\n                                                                </p>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup>\r\n                                                                <InputGroup className=\"input-group-alternative\">\r\n                                                                    <InputGroupAddon addonType=\"prepend\">\r\n                                                                        <InputGroupText>\r\n                                                                            <i className=\"ni ni-calendar-grid-58\" />\r\n                                                                        </InputGroupText>\r\n                                                                    </InputGroupAddon>\r\n                                                                    <Datetime dateFormat=\"DD-MM-YYYY\"  showTimeSelect\r\n                                                                              required\r\n                                                                              timeFormat=\"HH:mm\"\r\n                                                                              timeIntervals={5}\r\n                                                                              timeCaption=\"time\"\r\n                                                                              inputProps={{\r\n                                                                                  placeholder: \"Date Picker Here...\" +\r\n                                                                                      \" Select the date and time for this drive test\"\r\n\r\n                                                                              }}\r\n                                                                              name=\"DriveTest_Start_Time\"\r\n                                                                              selected={this.state.DriveTest_Start_Time}\r\n                                                                              onChange={ this.handleTimeChange }\r\n                                                                              value={this.state.DriveTest_Start_Time}  />\r\n\r\n                                                                </InputGroup>\r\n                                                                <p style={{color:\"red\" , fontWeight: 'bold' }}>\r\n                                                                    {this.validator.message('DriveTest_Start_Time', this.state.DriveTest_Start_Time, 'required')}\r\n                                                                </p>\r\n                                                            </FormGroup>\r\n                                                            <FormGroup>\r\n\r\n                                                                <select className=\"browser-default custom-select\"\r\n                                                                        name=\"DriveTest_Driver\"\r\n                                                                        onChange={this.handleSelectChange}  >\r\n                                                                    <option  disabled selected>Update the affected driver for this mission... </option>\r\n                                                                    {this.state.techCompanies.map(V => (\r\n                                                                        <option   value={V.id}>{V.label}</option>))}\r\n                                                                </select>\r\n                                                                <p style={{color:\"red\" , fontWeight: 'bold' }}>\r\n                                                                    {this.validator.message('DriveTest_Driver', this.state.DriveTest_Driver, 'required')}\r\n                                                                </p>\r\n                                                            </FormGroup>\r\n                                                            <div className=\"text-center\">\r\n                                                                <Button className=\"mt-4\" color=\"primary\"  type=\"submit\">\r\n                                                                    Update drive test informations\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </Form>\r\n\r\n                                                    </CardBody>\r\n                                                </Card>\r\n                                            </Collapse>\r\n                                            <Collapse isOpen={this.state.isOpen2}>\r\n                                                <Card>\r\n                                                    <CardBody>  <Form  onSubmit={this.onSubmit2} >\r\n                                                        <FormGroup>\r\n                                                            <InputGroup className=\"input-group-alternative mb-3\">\r\n                                                                <div className=\"custom-file\">\r\n                                                                    <input id=\"inputGroupFile01\" type=\"file\"\r\n                                                                           className=\"custom-file-input\"\r\n                                                                           onChange={this.handleRoadChange}\r\n                                                                    />\r\n                                                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                                        Update file for this drive test's Road</label>\r\n                                                                </div>\r\n\r\n                                                            </InputGroup>\r\n                                                            <Badge className=\"badge-danger\" pill >\r\n                                                                {this.validator2.message('DriveTest_Road', this.state.file2, 'required|csv')}\r\n                                                            </Badge>\r\n                                                            <div className=\"text-center\">\r\n                                                                <Button className=\"mt-4\" color=\"info\"  type=\"submit\">\r\n                                                                    Update Drive Test road\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </FormGroup>\r\n                                                    </Form> </CardBody>\r\n\r\n                                                </Card>\r\n                                            </Collapse>\r\n                                            <Collapse isOpen={this.state.isOpen3}>\r\n                                                <Card> <CardBody>  <Form  onSubmit={this.onSubmit3} >\r\n                                                    <FormGroup>\r\n                                                        <InputGroup className=\"input-group-alternative mb-3\">\r\n                                                            <div className=\"custom-file\">\r\n                                                                <input id=\"inputGroupFile01\" type=\"file\"\r\n                                                                       className=\"custom-file-input\"\r\n                                                                       onChange={this.handleFileChange}\r\n                                                                />\r\n                                                                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                                    Choose file for this drive test</label>\r\n                                                            </div>\r\n\r\n                                                        </InputGroup>\r\n                                                        <Badge className=\"badge-danger\" pill>\r\n                                                            {this.validator1.message('DriveTest_File', this.state.file1, 'required|py')}\r\n                                                        </Badge>\r\n                                                        <div className=\"text-center\">\r\n                                                            <Button className=\"mt-4\" color=\"danger\"  type=\"submit\">\r\n                                                                Update drive test file\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </FormGroup>\r\n\r\n\r\n                                                </Form> </CardBody>\r\n\r\n\r\n                                                </Card>\r\n                                            </Collapse>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n\r\n\r\n                    </Container>\r\n\r\n                </div>\r\n                <Modal\r\n                    className=\"modal-dialog-centered modal-info\"\r\n                    isOpen={this.state.notificationModal}>\r\n                    <div className=\"modal-header\">\r\n                        <h6 className=\"modal-title\" id=\"modal-title-notification\">\r\n                            Alert\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"py-3 text-center\">\r\n                            <i className=\"ni ni-bell-55 ni-3x\" />\r\n                            <h4 className=\"heading mt-4\">  Your Drive Test was successfully updated!</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <Button className=\"btn-white\" color=\"default\" type=\"button\" onClick={()=> this.GoList()}>\r\n                            Got it ,Return to The list\r\n                        </Button>\r\n                        <Button\r\n                            className=\"text-white ml-auto\"\r\n                            color=\"link\"\r\n                            data-dismiss=\"modal\"\r\n                            type=\"button\"\r\n                            onClick={() => this.UpdateDriveTest()}>\r\n                            Complete Your Changes\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditDriveTestInformations;\r\n"]},"metadata":{},"sourceType":"module"}
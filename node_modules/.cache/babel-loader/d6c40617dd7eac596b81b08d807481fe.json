{"ast":null,"code":"exports.wrapError = function (error) {\n  if (!error) {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error;\n  }\n\n  return new Error(error);\n};\n\nexports.isFunction = function (fn) {\n  return typeof fn === 'function';\n};\n\nexports.isString = function (string) {\n  return typeof string === 'string';\n};\n\nexports.hasListeners = function (target, eventName) {\n  return !!(target._events && target._events[eventName]);\n};\n\nexports.warn = function () {\n  if (console && console.warn) {\n    console.warn.apply(console, arguments);\n  }\n};","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/node_modules/scaledrone-react-native/utils.js"],"names":["exports","wrapError","error","Error","isFunction","fn","isString","string","hasListeners","target","eventName","_events","warn","console","apply","arguments"],"mappings":"AAAAA,OAAO,CAACC,SAAR,GAAoB,UAASC,KAAT,EAAgB;AAClC,MAAI,CAACA,KAAL,EAAY;AACV,WAAOA,KAAP;AACD;;AACD,MAAIA,KAAK,YAAYC,KAArB,EAA4B;AAC1B,WAAOD,KAAP;AACD;;AACD,SAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAP;AACD,CARD;;AAUAF,OAAO,CAACI,UAAR,GAAqB,UAASC,EAAT,EAAa;AAChC,SAAO,OAAOA,EAAP,KAAc,UAArB;AACD,CAFD;;AAIAL,OAAO,CAACM,QAAR,GAAmB,UAASC,MAAT,EAAiB;AAClC,SAAO,OAAOA,MAAP,KAAkB,QAAzB;AACD,CAFD;;AAIAP,OAAO,CAACQ,YAAR,GAAuB,UAASC,MAAT,EAAiBC,SAAjB,EAA4B;AACjD,SAAO,CAAC,EAAED,MAAM,CAACE,OAAP,IAAkBF,MAAM,CAACE,OAAP,CAAeD,SAAf,CAApB,CAAR;AACD,CAFD;;AAIAV,OAAO,CAACY,IAAR,GAAe,YAAW;AACxB,MAAIC,OAAO,IAAIA,OAAO,CAACD,IAAvB,EAA6B;AAC3BC,IAAAA,OAAO,CAACD,IAAR,CAAaE,KAAb,CAAmBD,OAAnB,EAA4BE,SAA5B;AACD;AACF,CAJD","sourcesContent":["exports.wrapError = function(error) {\n  if (!error) {\n    return error;\n  }\n  if (error instanceof Error) {\n    return error;\n  }\n  return new Error(error);\n};\n\nexports.isFunction = function(fn) {\n  return typeof fn === 'function';\n};\n\nexports.isString = function(string) {\n  return typeof string === 'string';\n};\n\nexports.hasListeners = function(target, eventName) {\n  return !!(target._events && target._events[eventName]);\n};\n\nexports.warn = function() {\n  if (console && console.warn) {\n    console.warn.apply(console, arguments);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\views\\\\rpa\\\\list_rpa_process.js\";\nimport React from \"react\"; // reactstrap components\n\nimport { Badge, Card, CardHeader, CardFooter, Pagination, PaginationItem, PaginationLink, Container, Row, Button, Col, CardBody, CardTitle } from \"reactstrap\"; // core components\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Header from \"components/Headers/Header_RPA.js\";\nimport axios from \"axios\";\nimport { Link, Route } from 'react-router-dom';\nimport Maps from \"../driver/Maps\";\n\nfunction icon(e, DriveTest_Done_Date) {\n  if (e == false && DriveTest_Done_Date != null) {\n    return React.createElement(\"img\", {\n      src: \"https://img.icons8.com/color/30/000000/usb-disconnected.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n  if (e == false && DriveTest_Done_Date == null) {\n    return React.createElement(\"img\", {\n      src: \"https://img.icons8.com/color/30/000000/cancel--v1.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  } else if (e == true) {\n    return React.createElement(\"img\", {\n      src: \"https://img.icons8.com/flat_round/30/000000/checkmark.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n}\n\nfunction convertDate(today) {\n  today = new Date(today);\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  return date + ' ' + time;\n}\n\nconst DriveTest = props => React.createElement(Card, {\n  className: \"card-stats mb-4 mb-xl-0\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(CardBody, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(CardTitle, {\n  tag: \"h5\",\n  className: \"text-uppercase text-muted mb-0\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, props.drive_test.DriveTest_Title), React.createElement(\"span\", {\n  className: \"h2 font-weight-bold mb-0\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, props.drive_test.DriveTest_Description)), React.createElement(Col, {\n  className: \"col-auto\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, icon(props.drive_test.DriveTest_State, props.drive_test.DriveTest_Done_Date))), React.createElement(\"p\", {\n  className: \"mt-3 mb-0 text-muted text-sm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"text-success mr-2\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, React.createElement(Link, {\n  to: \"/admin/maps/\" + props.drive_test._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, React.createElement(Button, {\n  className: \"btn-neutral btn-icon\",\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, \"Show\"))), \" \", React.createElement(\"span\", {\n  className: \"text-nowrap\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, convertDate(props.drive_test.DriveTest_Set_Date)))));\n\nclass RPAList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.interval = window.setInterval(this.moveObject, 1000);\n      /* axios.get('http://localhost:4000/api/planning/get_planning')\r\n           .then(response => {\r\n               this.setState({ drive_tests: response.data });\r\n               this.drive_test = response.data;\r\n               console.log(this.drive_test);\r\n           })\r\n           .catch(function (error){\r\n               console.log(error);\r\n           })*/\n\n      this.HandleData();\n    };\n\n    this.state = {\n      drive_tests: [],\n      currentPage: 0\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.HandleDone = this.HandleDone.bind(this);\n    this.HandlePending = this.HandlePending.bind(this);\n    this.HandleData = this.HandleData.bind(this);\n    this.HandleModalEval = this.HandleModalEval.bind(this);\n    this.pageSize = 4;\n  }\n\n  handleClick(e, index) {\n    e.preventDefault();\n    this.setState({\n      currentPage: index\n    });\n  }\n\n  HandleDone() {\n    axios.get('http://localhost:4000/api/planning/filter/done').then(response => {\n      this.setState({\n        drive_tests: response.data\n      });\n      this.drive_test = response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  HandlePending() {\n    axios.get('http://localhost:4000/api/planning/filter/pending').then(response => {\n      this.setState({\n        drive_tests: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  HandleData() {\n    axios.get('http://localhost:4000/api/planning').then(response => {\n      this.setState({\n        drive_tests: response.data\n      });\n      this.pagesCount = Math.ceil(this.state.drive_tests.length / this.pageSize);\n      console.log('drive====', this.state.drive_tests);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  HandleFailure() {\n    axios.get('http://localhost:4000/api/planning/filter/failure').then(response => {\n      this.setState({\n        drive_tests: response.data\n      });\n      this.pagesCount = Math.ceil(this.state.drive_tests.length / this.pageSize);\n      console.log('drive====', this.state.drive_tests);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  handleInputChange() {\n    this.setState({\n      query: this.search.value\n    }, () => {\n      if (this.state.query && this.state.query.length > 1) {\n        if (this.state.query.length % 2 === 0) {\n          this.HandleSearch();\n        }\n      } else this.HandleData();\n    });\n  }\n\n  driveTestList() {\n    return this.state.drive_tests.map(function (currentTodo, i) {\n      for (var cpt = 0; cpt < 8; cpt++) {\n        return React.createElement(DriveTest, {\n          drive_test: currentTodo,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        });\n        console.log(i);\n      }\n    });\n  }\n\n  render() {\n    const currentPage = this.state.currentPage;\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"info\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Drive tests state\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: () => this.HandleData(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"All\"), React.createElement(Dropdown.Item, {\n      onClick: () => this.HandleDone(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Done Drive Tests \"), React.createElement(Dropdown.Item, {\n      onClick: () => this.HandlePending(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Pending Drive Tests \"), React.createElement(Dropdown.Item, {\n      onClick: () => this.HandleFailure(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Failed Driving Tests \"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"d-flex align-content-around flex-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.state.drive_tests.slice(currentPage * this.pageSize, (currentPage + 1) * this.pageSize).map(function (currentTodo, i) {\n      for (var cpt = 0; cpt < 8; cpt++) {\n        return React.createElement(DriveTest, {\n          drive_test: currentTodo,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        });\n        console.log(i);\n      }\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(CardFooter, {\n      className: \"py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      \"aria-label\": \"...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      className: \"pagination justify-content-end mb-0\",\n      listClassName: \"justify-content-end mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(PaginationItem, {\n      disabled: currentPage === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: e => this.handleClick(e, currentPage - 1),\n      previous: true,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })), [...Array(this.pagesCount)].map((page, i) => React.createElement(PaginationItem, {\n      active: i === currentPage,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: e => this.handleClick(e, i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, i + 1))), React.createElement(PaginationItem, {\n      disabled: currentPage >= this.pagesCount - 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: e => this.handleClick(e, currentPage + 1),\n      next: true,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }))))))))));\n  }\n\n}\n\nexport default RPAList;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/views/rpa/list_rpa_process.js"],"names":["React","Badge","Card","CardHeader","CardFooter","Pagination","PaginationItem","PaginationLink","Container","Row","Button","Col","CardBody","CardTitle","Dropdown","Header","axios","Link","Route","Maps","icon","e","DriveTest_Done_Date","convertDate","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","DriveTest","props","drive_test","DriveTest_Title","DriveTest_Description","DriveTest_State","_id","DriveTest_Set_Date","RPAList","Component","constructor","componentDidMount","interval","window","setInterval","moveObject","HandleData","state","drive_tests","currentPage","handleInputChange","bind","HandleDone","HandlePending","HandleModalEval","pageSize","handleClick","index","preventDefault","setState","get","then","response","data","catch","error","console","log","pagesCount","Math","ceil","length","HandleFailure","query","search","value","HandleSearch","driveTestList","map","currentTodo","i","cpt","render","slice","Array","page"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n    Badge,\r\n    Card,\r\n    CardHeader,\r\n    CardFooter,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink,\r\n    Container,\r\n    Row,\r\n    Button, Col, CardBody, CardTitle\r\n} from \"reactstrap\";\r\n// core components\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Header from \"components/Headers/Header_RPA.js\";\r\nimport axios from \"axios\";\r\nimport {Link, Route} from 'react-router-dom'\r\nimport Maps from \"../driver/Maps\";\r\n\r\nfunction icon(e,DriveTest_Done_Date) {\r\n   if (e == false && DriveTest_Done_Date != null){\r\n       return  <img src=\"https://img.icons8.com/color/30/000000/usb-disconnected.png\"/>\r\n   }\r\n   if (e == false && DriveTest_Done_Date == null ){\r\n       return  <img src=\"https://img.icons8.com/color/30/000000/cancel--v1.png\"/>\r\n   }\r\n   else if (e == true){\r\n       return  <img src=\"https://img.icons8.com/flat_round/30/000000/checkmark.png\"/>\r\n   }\r\n  }\r\n  function convertDate(today) {\r\n    today = new Date(today);\r\n      var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n      var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n      return  date+' '+time;\r\n  }\r\n\r\nconst DriveTest = (props) => (\r\n\r\n\r\n    <Card className=\"card-stats mb-4 mb-xl-0\">\r\n        <CardBody>\r\n            <Row>\r\n                <div className=\"col\">\r\n                    <CardTitle\r\n                        tag=\"h5\"\r\n                        className=\"text-uppercase text-muted mb-0\"\r\n                    >\r\n                        {props.drive_test.DriveTest_Title}\r\n                    </CardTitle>\r\n                    <span className=\"h2 font-weight-bold mb-0\">\r\n                        {props.drive_test.DriveTest_Description}\r\n                     </span>\r\n                </div>\r\n                <Col className=\"col-auto\">\r\n                        {icon(props.drive_test.DriveTest_State,props.drive_test.DriveTest_Done_Date)}\r\n                </Col>\r\n            </Row>\r\n            <p className=\"mt-3 mb-0 text-muted text-sm\">\r\n                <span className=\"text-success mr-2\">\r\n\r\n            <Link to={\"/admin/maps/\"+props.drive_test._id}>\r\n               <Button\r\n                   className=\"btn-neutral btn-icon\"\r\n                   color=\"primary\"\r\n                  >\r\n                    Show\r\n               </Button>\r\n            </Link>\r\n\r\n\r\n                </span>{\" \"}\r\n                <span className=\"text-nowrap\">\r\n            {\r\n               convertDate( props.drive_test.DriveTest_Set_Date)\r\n            }\r\n                </span>\r\n            </p>\r\n        </CardBody>\r\n    </Card>\r\n)\r\n\r\nclass RPAList extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            drive_tests : [],\r\n            currentPage: 0\r\n        }\r\n        this.handleInputChange=this.handleInputChange.bind(this);\r\n        this.HandleDone=this.HandleDone.bind(this);\r\n        this.HandlePending=this.HandlePending.bind(this);\r\n        this.HandleData=this.HandleData.bind(this);\r\n        this.HandleModalEval=this.HandleModalEval.bind(this);\r\n        this.pageSize = 4;\r\n\r\n    }\r\n    componentDidMount = () => {\r\n        this.interval = window.setInterval(this.moveObject, 1000)\r\n       /* axios.get('http://localhost:4000/api/planning/get_planning')\r\n            .then(response => {\r\n                this.setState({ drive_tests: response.data });\r\n                this.drive_test = response.data;\r\n                console.log(this.drive_test);\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            })*/\r\n       this.HandleData()\r\n    }\r\n\r\n\r\n    handleClick(e, index) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            currentPage: index\r\n        });\r\n\r\n    }\r\n\r\n    HandleDone() {\r\n        axios.get('http://localhost:4000/api/planning/filter/done')\r\n            .then(response => {\r\n                this.setState({ drive_tests: response.data });\r\n                this.drive_test = response.data;\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    HandlePending() {\r\n        axios.get('http://localhost:4000/api/planning/filter/pending')\r\n            .then(response => {\r\n                this.setState({ drive_tests: response.data });\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    HandleData() {\r\n        axios.get('http://localhost:4000/api/planning')\r\n            .then(response => {\r\n                this.setState({ drive_tests: response.data });\r\n                this.pagesCount = Math.ceil(this.state.drive_tests.length / this.pageSize);\r\n                console.log('drive====',this.state.drive_tests)\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    HandleFailure(){\r\n        axios.get('http://localhost:4000/api/planning/filter/failure')\r\n            .then(response => {\r\n                this.setState({ drive_tests: response.data });\r\n                this.pagesCount = Math.ceil(this.state.drive_tests.length / this.pageSize);\r\n                console.log('drive====',this.state.drive_tests)\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    handleInputChange(){\r\n        this.setState({\r\n            query:  this.search.value\r\n        }, () => {\r\n            if (this.state.query && this.state.query.length > 1) {\r\n                if (this.state.query.length % 2 === 0) {\r\n                    this.HandleSearch();\r\n                }\r\n            }\r\n            else this.HandleData();\r\n        })\r\n    }\r\n\r\n\r\n    driveTestList() {\r\n\r\n\r\n            return this.state.drive_tests.map(function(currentTodo, i){\r\n                for (var cpt = 0; cpt < 8; cpt++) {\r\n                    return <DriveTest drive_test={currentTodo} key={i}/>;\r\n                    console.log(i)\r\n                }\r\n            })\r\n    }\r\n    render() {\r\n        const { currentPage } = this.state;\r\n        return (\r\n            <>\r\n                <Header />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    {/* Table */}\r\n\r\n                    <Row>\r\n                        <div className=\"col\">\r\n                            <Card className=\"shadow\">\r\n                                <CardHeader className=\"border-0\">\r\n\r\n                                    <Col>\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n                                            Drive tests state\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Item onClick={()=>this.HandleData()} >All</Dropdown.Item>\r\n                                            <Dropdown.Item onClick={()=>this.HandleDone()} >Done Drive Tests </Dropdown.Item>\r\n                                            <Dropdown.Item onClick={()=>this.HandlePending()}>Pending Drive Tests </Dropdown.Item>\r\n                                            <Dropdown.Item onClick={()=>this.HandleFailure()}>Failed Driving Tests </Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                    </Col>\r\n                                </CardHeader>\r\n                                <br/>\r\n\r\n                                <div className=\"d-flex align-content-around flex-wrap\">\r\n                                    {\r\n                                        this.state.drive_tests.slice(\r\n                                            currentPage * this.pageSize,\r\n                                            (currentPage + 1) * this.pageSize\r\n                                        ).map(function(currentTodo, i){\r\n                                            for (var cpt = 0; cpt < 8; cpt++) {\r\n                                                return <DriveTest drive_test={currentTodo} key={i}/>;\r\n                                                console.log(i)\r\n                                            }\r\n                                        })\r\n                                    }\r\n\r\n\r\n                                </div>\r\n<br/>\r\n                                <CardFooter className=\"py-4\">\r\n                                    <nav aria-label=\"...\">\r\n                                        <Pagination\r\n                                            className=\"pagination justify-content-end mb-0\"\r\n                                            listClassName=\"justify-content-end mb-0\"\r\n                                        >\r\n                                            <PaginationItem  disabled={currentPage ===0} >\r\n                                                <PaginationLink\r\n                                                    onClick={e => this.handleClick(e, currentPage - 1)}\r\n                                                    previous\r\n                                                    href=\"#\"\r\n                                                />\r\n                                            </PaginationItem>\r\n\r\n                                            {[...Array(this.pagesCount)].map((page, i) =>\r\n                                                <PaginationItem active={i === currentPage} key={i}>\r\n                                                    <PaginationLink onClick={e => this.handleClick(e, i)}>\r\n                                                        {i + 1}\r\n                                                    </PaginationLink>\r\n                                                </PaginationItem>\r\n                                            )}\r\n                                            <PaginationItem disabled={currentPage >= this.pagesCount - 1} >\r\n                                                <PaginationLink\r\n                                                    onClick={e => this.handleClick(e, currentPage + 1)}\r\n                                                    next\r\n                                                    href=\"#\"\r\n                                                />\r\n\r\n                                            </PaginationItem>\r\n\r\n                                        </Pagination>\r\n                                    </nav>\r\n                                </CardFooter>\r\n                            </Card>\r\n                        </div>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RPAList;\r\n"]},"metadata":{},"sourceType":"module"}
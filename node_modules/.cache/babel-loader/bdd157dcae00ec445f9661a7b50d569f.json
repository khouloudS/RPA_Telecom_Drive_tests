{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\views\\\\statistics\\\\statistics.js\";\nimport React from \"react\"; // node.js library that concatenates classes (strings)\n\nimport classnames from \"classnames\"; // javascipt plugin for creating charts\n\nimport Chart from \"chart.js\"; // react plugin used to create charts\n\nimport { Line, Bar } from \"react-chartjs-2\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, NavItem, NavLink, Nav, Progress, Table, Container, Row, Col } from \"reactstrap\"; // core components\n\nimport { chartOptions, parseOptions, chartExample1, chartExample2 } from \"variables/charts.js\";\nimport Header from \"components/Headers/Header.js\";\nimport CanvasJSReact from '../../assets/css/canvasjs.react';\nimport axios from \"axios\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass statistics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drive_tests: []\n    };\n    this.drive_test_done = [];\n    this.drive_test_failed = [];\n\n    this.toggleNavs = (e, index) => {\n      e.preventDefault();\n      this.setState({\n        activeNav: index,\n        chartExample1Data: this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\n      });\n    };\n\n    this.state = {\n      activeNav: 1,\n      chartExample1Data: \"data1\"\n    };\n\n    if (window.Chart) {\n      parseOptions(Chart, chartOptions());\n    }\n  }\n\n  convertDate(today) {\n    today = new Date(today);\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    return date + ' ' + time;\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/api/statistics/done_drive_test_by_date').then(response => {\n      this.setState({\n        drive_tests: response.data\n      });\n      this.drive_tests = response.data;\n      console.log(this.drive_tests);\n\n      for (var i = 0; i < response.data.length; i++) {\n        if (response.data[i]['_id']['DriveTest_State'] == true) {\n          var today = new Date(response.data[i]['_id']['year'], response.data[i]['_id']['month'] - 1, response.data[i]['_id']['day']);\n          this.drive_test_done.push({\n            x: today,\n            y: response.data[i]['count']\n          });\n        } else if (response.data[i]['_id']['DriveTest_State'] == false && response.data[i]['_id']['year'] != null) {\n          var today = new Date(response.data[i]['_id']['year'], response.data[i]['_id']['month'] - 1, response.data[i]['_id']['day']);\n          this.drive_test_failed.push({\n            x: today,\n            y: response.data[i]['count']\n          });\n        }\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    console.log(this.drive_test_failed);\n    const options = {\n      theme: \"light2\",\n      animationEnabled: true,\n      title: {\n        text: \"Number of done and failed test\"\n      },\n      subtitles: [{\n        text: \"per day\"\n      }],\n      axisX: {\n        title: \"date\"\n      },\n      axisY: {\n        title: \"Number\",\n        titleFontColor: \"#6D78AD\",\n        lineColor: \"#6D78AD\",\n        labelFontColor: \"#6D78AD\",\n        tickColor: \"#6D78AD\",\n        includeZero: false\n      },\n      axisY2: {\n        title: \"Profit in USD\",\n        titleFontColor: \"#51CDA0\",\n        lineColor: \"#51CDA0\",\n        labelFontColor: \"#51CDA0\",\n        tickColor: \"#51CDA0\",\n        includeZero: false\n      },\n      toolTip: {\n        shared: true\n      },\n      legend: {\n        cursor: \"pointer\",\n        itemclick: this.toggleDataSeries\n      },\n      data: [{\n        type: \"spline\",\n        name: \"Done\",\n        showInLegend: true,\n        xValueFormatString: \"MMM YYYY\",\n        yValueFormatString: \"#\",\n        dataPoints: this.drive_test_done\n      }, {\n        type: \"spline\",\n        name: \"Failed\",\n        axisYType: \"secondary\",\n        showInLegend: true,\n        xValueFormatString: \"MMM YYYY\",\n        yValueFormatString: \"#\",\n        dataPoints: this.drive_test_failed\n      }]\n    };\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"mt--7\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"mb-5 mb-xl-0\",\n      xl: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Page visits\")), React.createElement(\"div\", {\n      className: \"col text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      href: \"#pablo\",\n      onClick: e => e.preventDefault(),\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"See all\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      xl: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"text-uppercase text-muted ls-1 mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Performance\"), React.createElement(\"h2\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Total orders\")))), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: chartExample2.data,\n      options: chartExample2.options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default statistics;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/views/statistics/statistics.js"],"names":["React","classnames","Chart","Line","Bar","Button","Card","CardHeader","CardBody","NavItem","NavLink","Nav","Progress","Table","Container","Row","Col","chartOptions","parseOptions","chartExample1","chartExample2","Header","CanvasJSReact","axios","CanvasJSChart","statistics","Component","constructor","props","state","drive_tests","drive_test_done","drive_test_failed","toggleNavs","e","index","preventDefault","setState","activeNav","chartExample1Data","window","convertDate","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","componentDidMount","get","then","response","data","console","log","i","length","push","x","y","catch","error","render","options","theme","animationEnabled","title","text","subtitles","axisX","axisY","titleFontColor","lineColor","labelFontColor","tickColor","includeZero","axisY2","toolTip","shared","legend","cursor","itemclick","toggleDataSeries","type","name","showInLegend","xValueFormatString","yValueFormatString","dataPoints","axisYType","ref","chart"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// node.js library that concatenates classes (strings)\r\nimport classnames from \"classnames\";\r\n// javascipt plugin for creating charts\r\nimport Chart from \"chart.js\";\r\n// react plugin used to create charts\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    NavItem,\r\n    NavLink,\r\n    Nav,\r\n    Progress,\r\n    Table,\r\n    Container,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport {\r\n    chartOptions,\r\n    parseOptions,\r\n    chartExample1,\r\n    chartExample2\r\n} from \"variables/charts.js\";\r\n\r\nimport Header from \"components/Headers/Header.js\";\r\nimport CanvasJSReact from '../../assets/css/canvasjs.react';\r\nimport axios from \"axios\";\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\nclass statistics extends React.Component {\r\n   state = {\r\n        drive_tests : [],\r\n    }\r\n    drive_test_done = [];\r\n   drive_test_failed = []\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            activeNav: 1,\r\n            chartExample1Data: \"data1\"\r\n        };\r\n        if (window.Chart) {\r\n            parseOptions(Chart, chartOptions());\r\n        }\r\n    }\r\n    toggleNavs = (e, index) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            activeNav: index,\r\n            chartExample1Data:\r\n                this.state.chartExample1Data === \"data1\" ? \"data2\" : \"data1\"\r\n        });\r\n    };\r\n     convertDate(today) {\r\n        today = new Date(today);\r\n        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n        var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n        return  date+' '+time;\r\n    }\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/api/statistics/done_drive_test_by_date')\r\n            .then(response => {\r\n                this.setState({ drive_tests: response.data });\r\n                this.drive_tests = response.data;\r\n                console.log(this.drive_tests)\r\n                for(var i = 0 ; i<response.data.length; i++) {\r\n                    if (response.data[i]['_id']['DriveTest_State']== true){\r\n                        var today = new Date(response.data[i]['_id']['year'],response.data[i]['_id']['month']-1,response.data[i]['_id']['day']);\r\n                        this.drive_test_done.push(\r\n                            {\r\n\r\n                            x:today,\r\n                            y: response.data[i]['count']\r\n                        }\r\n                        )\r\n                    }\r\n                    else if (response.data[i]['_id']['DriveTest_State']== false && response.data[i]['_id']['year']!= null){\r\n                        var today = new Date(response.data[i]['_id']['year'],response.data[i]['_id']['month']-1,response.data[i]['_id']['day']);\r\n                        this.drive_test_failed.push(\r\n                            {\r\n                                x:today,\r\n                                y: response.data[i]['count']\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.drive_test_failed)\r\n\r\n        const options = {\r\n            theme: \"light2\",\r\n            animationEnabled: true,\r\n            title:{\r\n                text: \"Number of done and failed test\"\r\n            },\r\n            subtitles: [{\r\n                text: \"per day\"\r\n            }],\r\n            axisX: {\r\n                title: \"date\"\r\n            },\r\n            axisY: {\r\n                title: \"Number\",\r\n                titleFontColor: \"#6D78AD\",\r\n                lineColor: \"#6D78AD\",\r\n                labelFontColor: \"#6D78AD\",\r\n                tickColor: \"#6D78AD\",\r\n                includeZero: false\r\n            },\r\n            axisY2: {\r\n                title: \"Profit in USD\",\r\n                titleFontColor: \"#51CDA0\",\r\n                lineColor: \"#51CDA0\",\r\n                labelFontColor: \"#51CDA0\",\r\n                tickColor: \"#51CDA0\",\r\n                includeZero: false\r\n            },\r\n            toolTip: {\r\n                shared: true\r\n            },\r\n            legend: {\r\n                cursor: \"pointer\",\r\n                itemclick: this.toggleDataSeries\r\n            },\r\n            data: [\r\n                {\r\n                type: \"spline\",\r\n                name: \"Done\",\r\n                showInLegend: true,\r\n                xValueFormatString: \"MMM YYYY\",\r\n                yValueFormatString: \"#\",\r\n                dataPoints: this.drive_test_done\r\n\r\n            },\r\n                {\r\n                    type: \"spline\",\r\n                    name: \"Failed\",\r\n                    axisYType: \"secondary\",\r\n                    showInLegend: true,\r\n                   xValueFormatString: \"MMM YYYY\",\r\n                    yValueFormatString: \"#\",\r\n                    dataPoints: this.drive_test_failed\r\n                }\r\n                ]\r\n        }\r\n        return (\r\n            <>\r\n                <Header />\r\n                {/* Page content */}\r\n                <Container className=\"mt--7\" fluid>\r\n                    <Row>\r\n                        <Col className=\"mb-5 mb-xl-0\" xl=\"8\">\r\n                            <Card className=\"shadow\">\r\n                                <CardHeader className=\"border-0\">\r\n                                    <Row className=\"align-items-center\">\r\n                                        <div className=\"col\">\r\n                                            <h3 className=\"mb-0\">Page visits</h3>\r\n                                        </div>\r\n                                        <div className=\"col text-right\">\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                href=\"#pablo\"\r\n                                                onClick={e => e.preventDefault()}\r\n                                                size=\"sm\"\r\n                                            >\r\n                                                See all\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Row>\r\n                                </CardHeader>\r\n\r\n                                <div>\r\n                                    <CanvasJSChart options = {options}\r\n                                                   onRef={ref => this.chart = ref}\r\n                                    />\r\n                                    {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n                                </div>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xl=\"4\">\r\n                            <Card className=\"shadow\">\r\n                                <CardHeader className=\"bg-transparent\">\r\n                                    <Row className=\"align-items-center\">\r\n                                        <div className=\"col\">\r\n                                            <h6 className=\"text-uppercase text-muted ls-1 mb-1\">\r\n                                                Performance\r\n                                            </h6>\r\n                                            <h2 className=\"mb-0\">Total orders</h2>\r\n                                        </div>\r\n                                    </Row>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    {/* Chart */}\r\n                                    <div className=\"chart\">\r\n                                        <Bar\r\n                                            data={chartExample2.data}\r\n                                            options={chartExample2.options}\r\n                                        />\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                   \r\n                </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default statistics;\r\n"]},"metadata":{},"sourceType":"module"}
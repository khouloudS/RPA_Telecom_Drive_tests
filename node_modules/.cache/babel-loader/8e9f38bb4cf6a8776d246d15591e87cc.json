{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\views\\\\driver\\\\Current_User_Position.js\";\nvar map = new google.maps.Map(document.getElementById('map'), {\n  center: {\n    lat: 39.8282,\n    lng: -98.5795\n  },\n  zoom: 4\n});\nvar infoWindow = new google.maps.InfoWindow({});\nvar markers = [];\nvar PoIMarkers = []; //a function place a marker at a city location\n\nfunction createMarker(city) {\n  var icon = 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2%7CFE7569';\n  var cityLatLong = {\n    lat: city.lat,\n    lng: city.lon\n  }; //this actually creates the google maps marker on the google maps map\n\n  var marker = new google.maps.Marker({\n    position: cityLatLong,\n    map: map,\n    title: city.city,\n    icon: icon // animation: google.maps.Animation.DROP\n\n  }); //this listens for the user to click on a marker, and then creates an infoWindow with specified content inside\n\n  google.maps.event.addListener(marker, 'click', function () {\n    infoWindow.setContent(\"<h2> \".concat(city.city, \"</h2><div>\").concat(city.state, \"</div><div>\").concat(city.yearEstimate, \"</div>\"));\n    infoWindow.open(map, marker);\n  }); //this pushes the google maps marker onto the markers array\n\n  markers.push(marker);\n}\n\nfunction createPoI(place) {\n  var infoWindow = new google.maps.InfoWindow({});\n  console.log(place);\n  var marker = new google.maps.Marker({\n    map: map,\n    position: place.geometry.location,\n    icon: place.icon\n  });\n  google.maps.event.addListener(marker, 'click', () => {\n    infoWindow.setContent(place.name);\n    infoWindow.open(map, marker);\n  });\n  PoIMarkers.push(marker); // poIMarkers.map(function(){\n  // })\n}\n\nvar GoogleCity = React.createClass({\n  displayName: \"GoogleCity\",\n  handleClickedCity: function handleClickedCity(event) {\n    google.maps.event.trigger(markers[this.props.cityObject.yearRank - 1], \"click\");\n  },\n  handleClickedCity: function handleClickedCity(event) {\n    google.maps.event.trigger(markers[this.props.cityObject.yearRank - 1], \"click\"); //something else here)\n  },\n  zoomToCity: function zoomToCity(event) {\n    event.preventDefault;\n    var cityLL = new google.maps.LatLng(this.props.cityObject.lat, this.props.cityObject.lon); //created a new map at this city's center\n\n    map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 10,\n      center: cityLL\n    });\n    var service = new google.maps.places.PlacesService(map);\n    service.nearbySearch({\n      location: cityLL,\n      radius: '500',\n      type: ['store']\n    }, function (results, status) {\n      console.log(results);\n\n      if (status == 'OK') {\n        //we got a good response\n        results.map(function (currPlace, index) {\n          createPoI(currPlace);\n        });\n      } else {\n        console.log(\"NO RESPONSE ERROR!\");\n      }\n    });\n    var bounds = new google.maps.LatLngBounds(cityLL);\n    PoIMarkers.map(function (currMarker, index) {\n      bounds.extend(currMarker.getPosition());\n    });\n    map.fitBounds(bounds);\n  },\n  render: function render() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"cityName\",\n      onClick: this.handleClickedCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.props.cityObject.city), React.createElement(\"td\", {\n      className: \"cityRank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.props.cityObject.yearRank), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.zoomToCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Zoom\")));\n  }\n});\nvar startArray = [];\nvar destinationArray = [];\nvar destinationString = '';\nvar Cities = React.createClass({\n  displayName: \"Cities\",\n  getInitialState: function getInitialState() {\n    return {\n      currCities: this.props.cities\n    };\n  },\n  handleInputChange: function handleInputChange(event) {\n    var newFilterValue = event.target.value;\n    var filteredCitiesArray = [];\n    this.props.cities.map(function (currCity, index) {\n      if (currCity.city.toUpperCase().indexOf(newFilterValue.toUpperCase()) != -1) {\n        //BAM. We got a hit ;0\n        filteredCitiesArray.push(currCity);\n      }\n    }); // this.state.currCities = filteredCitiesArray;\n\n    this.setState({\n      currCities: filteredCitiesArray\n    });\n\n    if (filteredCitiesArray[1] == null) {\n      this.updateMarkers();\n    }\n\n    startArray = filteredCitiesArray;\n  },\n  handleInputChangeDestination: function handleInputChangeDestination(event) {\n    var newFilterValue = event.target.value;\n    var filteredCitiesArray = [];\n    this.props.cities.map(function (currCity, index) {\n      if (currCity.city.toUpperCase().indexOf(newFilterValue.toUpperCase()) != -1) {\n        //BAM. We got a hit ;0\n        filteredCitiesArray.push(currCity);\n      }\n    }); // this.state.currCities = filteredCitiesArray;\n\n    this.setState({\n      currCities: filteredCitiesArray\n    });\n\n    if (filteredCitiesArray[1] == null) {\n      this.updateMarkers();\n    }\n\n    destinationString = filteredCitiesArray[0].city;\n\n    if (filteredCitiesArray[1] == null && filteredCitiesArray[0] != null) {\n      initMap();\n    }\n  },\n  updateMarkers: function updateMarkers() {\n    // event.preventDefault();\n    // this iterates over the entire markers array with our markers objects inside, and sets their maps to null\n    markers.map(function (marker, index) {\n      //removes the marker from the google maps map\n      if (markers.indexOf(marker.title) == -1) {\n        marker.setMap(null);\n      }\n    });\n    this.state.currCities.map(function (city, index) {\n      createMarker(city);\n    });\n  },\n  render: function render() {\n    var cityRows = [];\n    this.state.currCities.map(function (currentCity, index) {\n      createMarker(currentCity);\n      cityRows.push(React.createElement(GoogleCity, {\n        zoomFunction: this.zoomToCity,\n        cityObject: currentCity,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }));\n    }.bind(this));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Start: \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Start Location\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Destination: \"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Destination\",\n      onChange: this.handleInputChangeDestination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"spacer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"City Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"City Rank\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, cityRows)));\n  }\n});\n\nfunction Test(props) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"This is the test route\");\n}\n\nvar App = React.createClass({\n  displayName: \"App\",\n  render: function render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, this.props.children);\n  }\n});\nvar BootstrapNavBar = React.createClass({\n  displayName: \"BootstrapNavBar\",\n  render: function render() {\n    React.createElement(\"nav\", {\n      className: \"navbar navbar-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"navbar-brand\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"WebSiteName\")), React.createElement(\"ul\", {\n      className: \"nav navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Home\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Page 1\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Page 2\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Page 3\")))));\n  }\n});\nReactDOM.render(React.createElement(ReactRouter.Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 260\n  },\n  __self: this\n}, React.createElement(ReactRouter.Route, {\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 261\n  },\n  __self: this\n}, React.createElement(ReactRouter.IndexRoute, {\n  component: Cities,\n  cities: cities,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 262\n  },\n  __self: this\n}), React.createElement(ReactRouter.Route, {\n  path: \"cities\",\n  component: Test,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 263\n  },\n  __self: this\n}))), document.getElementById('cities-container'));\nvar directionsService = new google.maps.DirectionsService();\nvar directionsDisplay = new google.maps.DirectionsRenderer();\n\nfunction initMap() {\n  // directionsDisplay.directions.routes = [];\n  directionsDisplay.setMap(map);\n  calculateAndDisplayRoute(directionsService, directionsDisplay);\n\n  function calculateAndDisplayRoute(directionsService, directionsDisplay) {\n    directionsService.route({\n      origin: startArray[0].city,\n      destination: destinationString,\n      travelMode: 'DRIVING'\n    }, function (response, status) {\n      if (status === 'OK') {\n        // directionsDisplay.setDirections({});\n        console.log(response);\n        directionsDisplay.setMap(null);\n        directionsDisplay.setMap(map);\n        directionsDisplay.setDirections(response);\n      } else {\n        window.alert('Directions request failed due to ' + status);\n      }\n    });\n  }\n} // you can choose the map you want to setDirections, or change by using document.getElementById('specified map') in the DOM;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/views/driver/Current_User_Position.js"],"names":["map","google","maps","Map","document","getElementById","center","lat","lng","zoom","infoWindow","InfoWindow","markers","PoIMarkers","createMarker","city","icon","cityLatLong","lon","marker","Marker","position","title","event","addListener","setContent","state","yearEstimate","open","push","createPoI","place","console","log","geometry","location","name","GoogleCity","React","createClass","handleClickedCity","trigger","props","cityObject","yearRank","zoomToCity","preventDefault","cityLL","LatLng","service","places","PlacesService","nearbySearch","radius","type","results","status","currPlace","index","bounds","LatLngBounds","currMarker","extend","getPosition","fitBounds","render","startArray","destinationArray","destinationString","Cities","getInitialState","currCities","cities","handleInputChange","newFilterValue","target","value","filteredCitiesArray","currCity","toUpperCase","indexOf","setState","updateMarkers","handleInputChangeDestination","initMap","setMap","cityRows","currentCity","bind","Test","App","children","BootstrapNavBar","ReactDOM","directionsService","DirectionsService","directionsDisplay","DirectionsRenderer","calculateAndDisplayRoute","route","origin","destination","travelMode","response","setDirections","window","alert"],"mappings":"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","sourcesContent":["var map = new google.maps.Map(\r\n    document.getElementById('map'),\r\n    {\r\n        center: {lat: 39.8282, lng: -98.5795},\r\n        zoom: 4\r\n    }\r\n)\r\n\r\nvar infoWindow = new google.maps.InfoWindow({});\r\nvar markers = [];\r\nvar PoIMarkers = [];\r\n\r\n//a function place a marker at a city location\r\nfunction createMarker(city){\r\n    var icon = 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2%7CFE7569';\r\n    var cityLatLong = {\r\n        lat: city.lat,\r\n        lng: city.lon\r\n    }\r\n\r\n    //this actually creates the google maps marker on the google maps map\r\n    var marker = new google.maps.Marker({\r\n        position: cityLatLong,\r\n        map: map,\r\n        title: city.city,\r\n        icon: icon,\r\n        // animation: google.maps.Animation.DROP\r\n    })\r\n\r\n    //this listens for the user to click on a marker, and then creates an infoWindow with specified content inside\r\n    google.maps.event.addListener(marker,'click',function(){\r\n\r\n        infoWindow.setContent(`<h2> ${city.city}</h2><div>${city.state}</div><div>${city.yearEstimate}</div>`);\r\n        infoWindow.open(map,marker);\r\n    });\r\n    //this pushes the google maps marker onto the markers array\r\n    markers.push(marker);\r\n}\r\n\r\nfunction createPoI(place){\r\n    var infoWindow = new google.maps.InfoWindow({});\r\n    console.log(place);\r\n    var marker = new google.maps.Marker({\r\n        map: map,\r\n        position: place.geometry.location,\r\n        icon: place.icon\r\n    })\r\n    google.maps.event.addListener(marker, 'click', () =>{\r\n        infoWindow.setContent(place.name);\r\n        infoWindow.open(map, marker);\r\n    })\r\n    PoIMarkers.push(marker);\r\n    // poIMarkers.map(function(){\r\n\r\n    // })\r\n}\r\n\r\n\r\nvar GoogleCity = React.createClass({\r\n    handleClickedCity: function(event){\r\n        google.maps.event.trigger(markers[this.props.cityObject.yearRank - 1],\"click\");\r\n    },\r\n    handleClickedCity: function(event){\r\n        google.maps.event.trigger(markers[this.props.cityObject.yearRank - 1], \"click\"); //something else here)\r\n    },\r\n    zoomToCity: function(event){\r\n        event.preventDefault;\r\n\r\n\r\n        var cityLL = new google.maps.LatLng(this.props.cityObject.lat, this.props.cityObject.lon)\r\n        //created a new map at this city's center\r\n        map = new google.maps.Map(\r\n            document.getElementById('map'),\r\n            {\r\n                zoom: 10,\r\n                center: cityLL\r\n            }\r\n        )\r\n        var service = new google.maps.places.PlacesService(map);\r\n\r\n        service.nearbySearch(\r\n            {\r\n                location: cityLL,\r\n                radius: '500',\r\n                type: ['store']\r\n            }, function(results, status){\r\n                console.log(results);\r\n                if (status == 'OK') {\r\n                    //we got a good response\r\n                    results.map(function(currPlace, index){\r\n                        createPoI(currPlace);\r\n                    })\r\n                }\r\n                else{\r\n                    console.log(\"NO RESPONSE ERROR!\");\r\n                }\r\n            });\r\n\r\n        var bounds = new google.maps.LatLngBounds(cityLL);\r\n        PoIMarkers.map(function(currMarker, index){\r\n            bounds.extend(currMarker.getPosition());\r\n        })\r\n        map.fitBounds(bounds);\r\n\r\n    },\r\n    render: function(){\r\n        return(\r\n            <tr>\r\n                <td className=\"cityName\" onClick={this.handleClickedCity}>{this.props.cityObject.city}</td>\r\n                <td className=\"cityRank\">{this.props.cityObject.yearRank}</td>\r\n                <td><button type=\"button\" onClick={this.zoomToCity}>Zoom</button></td>\r\n            </tr>\r\n        )\r\n    }\r\n})\r\n\r\nvar startArray = [];\r\nvar destinationArray = [];\r\nvar destinationString = '';\r\n\r\nvar Cities = React.createClass({\r\n\r\n    getInitialState: function() {\r\n        return {\r\n            currCities: this.props.cities\r\n        }\r\n    },\r\n    handleInputChange: function(event){\r\n        var newFilterValue = event.target.value;\r\n\r\n        var filteredCitiesArray = [];\r\n        this.props.cities.map(function(currCity, index){\r\n\r\n            if(currCity.city.toUpperCase().indexOf(newFilterValue.toUpperCase()) != -1){\r\n                //BAM. We got a hit ;0\r\n                filteredCitiesArray.push(currCity)\r\n            }\r\n\r\n        });\r\n        // this.state.currCities = filteredCitiesArray;\r\n        this.setState({\r\n            currCities: filteredCitiesArray\r\n        })\r\n        if (filteredCitiesArray[1] == null){\r\n            this.updateMarkers();\r\n        }\r\n        startArray = filteredCitiesArray;\r\n\r\n    },\r\n    handleInputChangeDestination: function(event){\r\n        var newFilterValue = event.target.value;\r\n\r\n        var filteredCitiesArray = [];\r\n        this.props.cities.map(function(currCity, index){\r\n\r\n            if(currCity.city.toUpperCase().indexOf(newFilterValue.toUpperCase()) != -1){\r\n                //BAM. We got a hit ;0\r\n                filteredCitiesArray.push(currCity)\r\n            }\r\n\r\n        });\r\n        // this.state.currCities = filteredCitiesArray;\r\n        this.setState({\r\n            currCities: filteredCitiesArray\r\n        })\r\n        if (filteredCitiesArray[1] == null){\r\n            this.updateMarkers();\r\n        }\r\n        destinationString = filteredCitiesArray[0].city;\r\n\r\n        if ((filteredCitiesArray[1] == null) && (filteredCitiesArray[0] != null)) {\r\n            initMap();\r\n        }\r\n\r\n    },\r\n    updateMarkers: function(){\r\n        // event.preventDefault();\r\n\r\n        // this iterates over the entire markers array with our markers objects inside, and sets their maps to null\r\n        markers.map(function(marker,index){\r\n            //removes the marker from the google maps map\r\n            if (markers.indexOf(marker.title) == -1) {\r\n                marker.setMap(null);\r\n            }\r\n        })\r\n        this.state.currCities.map(function(city, index){\r\n            createMarker(city);\r\n        })\r\n    },\r\n    render: function(){\r\n        var cityRows = [];\r\n        this.state.currCities.map(function(currentCity, index){\r\n\r\n            createMarker(currentCity)\r\n            cityRows.push(<GoogleCity zoomFunction={this.zoomToCity} cityObject={currentCity} key={index} />);\r\n        }.bind(this));\r\n        return(\r\n            <div>\r\n                <form>\r\n                    <p>Start: </p><input type=\"text\" placeholder=\"Search Start Location\" onChange={this.handleInputChange}/>\r\n                    <p>Destination: </p><input type=\"text\" placeholder=\"Search Destination\" onChange={this.handleInputChangeDestination}/>\r\n                    <div className=\"spacer\"></div>\r\n                </form>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>City Name</th>\r\n                        <th>City Rank</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {cityRows}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nfunction Test(props){\r\n\r\n    return(\r\n        <h1>This is the test route</h1>\r\n    )\r\n}\r\n\r\nvar App = React.createClass({\r\n    render: function(){\r\n        return(\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nvar BootstrapNavBar = React.createClass({\r\n\r\n    render: function(){\r\n        <nav className=\"navbar navbar-default\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-header\">\r\n                    <a className=\"navbar-brand\" href=\"#\">WebSiteName</a>\r\n                </div>\r\n                <ul className=\"nav navbar-nav\">\r\n                    <li className=\"active\"><a href=\"#\">Home</a></li>\r\n                    <li><a href=\"#\">Page 1</a></li>\r\n                    <li><a href=\"#\">Page 2</a></li>\r\n                    <li><a href=\"#\">Page 3</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <ReactRouter.Router>\r\n        <ReactRouter.Route path=\"/\" component={App}>\r\n            <ReactRouter.IndexRoute component={Cities} cities={cities}/>\r\n            <ReactRouter.Route path=\"cities\" component={Test}/>\r\n        </ReactRouter.Route>\r\n    </ReactRouter.Router>,\r\n    document.getElementById('cities-container')\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar directionsService = new google.maps.DirectionsService;\r\nvar directionsDisplay = new google.maps.DirectionsRenderer;\r\n\r\nfunction initMap() {\r\n\r\n    // directionsDisplay.directions.routes = [];\r\n    directionsDisplay.setMap(map);\r\n\r\n    calculateAndDisplayRoute(directionsService, directionsDisplay);\r\n\r\n    function calculateAndDisplayRoute(directionsService, directionsDisplay) {\r\n        directionsService.route({\r\n            origin: startArray[0].city,\r\n            destination: destinationString,\r\n            travelMode: 'DRIVING'\r\n        }, function(response, status) {\r\n            if (status === 'OK') {\r\n                // directionsDisplay.setDirections({});\r\n                console.log(response);\r\n                directionsDisplay.setMap(null);\r\n                directionsDisplay.setMap(map);\r\n                directionsDisplay.setDirections(response);\r\n            } else {\r\n                window.alert('Directions request failed due to ' + status);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n// you can choose the map you want to setDirections, or change by using document.getElementById('specified map') in the DOM;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
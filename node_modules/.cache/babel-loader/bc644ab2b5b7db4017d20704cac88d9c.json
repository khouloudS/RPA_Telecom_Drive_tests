{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DefaultRecordingSignaling = require('./recording');\n\nvar StateMachine = require('../statemachine');\n\nvar DefaultTimeout = require('../util/timeout');\n\nvar _require = require('../util/twilio-video-errors'),\n    MediaConnectionError = _require.MediaConnectionError,\n    MediaDTLSTransportFailedError = _require.MediaDTLSTransportFailedError,\n    SignalingConnectionDisconnectedError = _require.SignalingConnectionDisconnectedError;\n/*\r\nRoomSignaling States\r\n-----------------------\r\n\r\n    +-----------+     +--------------+\r\n    |           |     |              |\r\n    | connected |---->| disconnected |\r\n    |           |     |              |\r\n    +-----------+     +--------------+\r\n          |  ^               ^\r\n          |  |               |\r\n          |  |   +--------------+\r\n          |  +---|              |\r\n          |      | reconnecting |\r\n          +----->|              |\r\n                 +--------------+\r\n\r\n*/\n\n\nvar states = {\n  connected: ['reconnecting', 'disconnected'],\n  reconnecting: ['connected', 'disconnected'],\n  disconnected: []\n};\n/**\r\n * A {@link Room} implementation\r\n * @extends StateMachine\r\n * @property {RTCPeerConnectionState} connectionState\r\n * @property {?Participant.SID} dominantSpeakerSid\r\n * @property {ParticipantSignaling} localParticipant\r\n * @property {RTCIceConnectionState} iceConnectionState\r\n * @property {string} name\r\n * @property {Map<string, RemoteParticipantSignaling>} participants\r\n * @property {RecordingSignaling} recording\r\n * @property {Room.SID} sid\r\n * @property {string} state - \"connected\", \"reconnecting\", or \"disconnected\"\r\n * @property {string} signalingConnectionState - \"connected\",\r\n *   \"reconnecting\", or \"disconnected\"\r\n * @emits RoomSignaling#connectionStateChanged\r\n * @emits RoomSignaling#dominantSpeakerChanged\r\n * @emits RoomSignaling#iceConnectionStateChanged\r\n * @emits RoomSignaling#signalingConnectionStateChanged\r\n */\n\nvar RoomSignaling = function (_StateMachine) {\n  _inherits(RoomSignaling, _StateMachine);\n  /**\r\n   * Construct a {@link RoomSignaling}.\r\n   * @param {ParticipantSignaling} localParticipant\r\n   * @param {Room.SID} sid\r\n   * @param {string} name\r\n   * @param {object} options\r\n   */\n\n\n  function RoomSignaling(localParticipant, sid, name, options) {\n    _classCallCheck(this, RoomSignaling);\n\n    options = Object.assign({\n      RecordingSignaling: DefaultRecordingSignaling,\n      Timeout: DefaultTimeout\n    }, options);\n\n    var _this = _possibleConstructorReturn(this, (RoomSignaling.__proto__ || Object.getPrototypeOf(RoomSignaling)).call(this, 'connected', states));\n\n    var RecordingSignaling = options.RecordingSignaling;\n    var sessionTimeout = new options.Timeout(function () {\n      _this._disconnect(_this._reconnectingError);\n    }, options.sessionTimeout, false);\n    Object.defineProperties(_this, {\n      _mediaConnectionIsReconnecting: {\n        writable: true,\n        value: false\n      },\n      _options: {\n        value: options\n      },\n      _reconnectingError: {\n        value: null,\n        writable: true\n      },\n      _sessionTimeout: {\n        value: sessionTimeout\n      },\n      dominantSpeakerSid: {\n        enumerable: true,\n        value: null,\n        writable: true\n      },\n      localParticipant: {\n        enumerable: true,\n        value: localParticipant\n      },\n      name: {\n        enumerable: true,\n        value: name\n      },\n      participants: {\n        enumerable: true,\n        value: new Map()\n      },\n      recording: {\n        enumerable: true,\n        value: new RecordingSignaling()\n      },\n      sid: {\n        enumerable: true,\n        value: sid\n      }\n    });\n\n    _this.on('connectionStateChanged', function () {\n      if (_this.connectionState === 'failed' && !['disconnected', 'failed'].includes(_this.iceConnectionState)) {\n        _this._disconnect(new MediaDTLSTransportFailedError());\n      }\n    });\n\n    _this.on('iceConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    });\n\n    _this.on('signalingConnectionStateChanged', function () {\n      return maybeUpdateState(_this);\n    }); // NOTE(mmalavalli): In case \"iceConnectionState\" is already failed, update\n    // the RoomSignaling state. setTimeout() ensures that the state is updated\n    // after RoomV2's constructor is fully executed, thereby making \"signalingConnectionState\"\n    // available here.\n\n\n    setTimeout(function () {\n      return maybeUpdateState(_this);\n    });\n    return _this;\n  }\n  /**\r\n   * Disconnect, possibly with an Error.\r\n   * @private\r\n   * @param {Error} [error]\r\n   * @returns {boolean}\r\n   */\n\n\n  _createClass(RoomSignaling, [{\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      if (this.state !== 'disconnected') {\n        this.preempt('disconnected', null, [error]);\n        return true;\n      }\n\n      return false;\n    }\n    /**\r\n     * Connect {@link RemoteParticipantSignaling} to the {@link RoomSignaling}.\r\n     * @param {RemoteParticipantSignaling} participant\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: 'connectParticipant',\n    value: function connectParticipant(participant) {\n      var self = this;\n\n      if (participant.state === 'disconnected') {\n        return false;\n      }\n\n      if (this.participants.has(participant.sid)) {\n        return false;\n      }\n\n      this.participants.set(participant.sid, participant);\n      participant.on('stateChanged', function stateChanged(state) {\n        if (state === 'disconnected') {\n          participant.removeListener('stateChanged', stateChanged);\n          self.participants.delete(participant.sid);\n          self.emit('participantDisconnected', participant);\n        }\n      });\n      this.emit('participantConnected', participant);\n      return true;\n    }\n    /**\r\n     * Disconnect.\r\n     * @returns {boolean}\r\n     */\n\n  }, {\n    key: 'disconnect',\n    value: function disconnect() {\n      return this._disconnect();\n    }\n    /**\r\n     * Set (or unset) the Dominant Speaker.\r\n     * @param {?Participant.SID} dominantSpeakerSid\r\n     * @returns {void}\r\n     */\n\n  }, {\n    key: 'setDominantSpeaker',\n    value: function setDominantSpeaker(dominantSpeakerSid) {\n      this.dominantSpeakerSid = dominantSpeakerSid;\n      this.emit('dominantSpeakerChanged');\n    }\n  }]);\n\n  return RoomSignaling;\n}(StateMachine);\n/**\r\n * @event RoomSignaling#event:connectionStateChanged\r\n */\n\n/**\r\n * @event RoomSignaling#event:dominantSpeakerChanged\r\n */\n\n/**\r\n * {@link RemoteParticipantSignaling} connected to the {@link RoomSignaling}.\r\n * @event RoomSignaling#event:participantConnected\r\n * @param {RemoteParticipantSignaling} participantSignaling\r\n */\n\n/**\r\n * {@link RemoteParticipantSignaling} disconnected from the {@link RoomSignaling}.\r\n * @event RoomSignaling#event:participantDisconnected\r\n * @param {RemoteParticipantSignaling} participantSignaling\r\n */\n\n/**\r\n * @event RoomSignaling#event:iceConnectionStateChanged\r\n */\n\n/**\r\n * @event RoomSignaling#event:signalingConnectionStateChanged\r\n */\n\n/**\r\n * Maybe update the {@link RoomSignaling} state.\r\n * @param {RoomSignaling} roomSignaling\r\n */\n\n\nfunction maybeUpdateState(roomSignaling) {\n  if (roomSignaling.state === 'disconnected' || roomSignaling.signalingConnectionState === 'disconnected') {\n    roomSignaling._sessionTimeout.clear();\n\n    return;\n  }\n\n  var newState = void 0;\n\n  if (roomSignaling.signalingConnectionState === 'reconnecting') {\n    newState = roomSignaling.signalingConnectionState;\n  } else if (roomSignaling.iceConnectionState === 'failed') {\n    roomSignaling._mediaConnectionIsReconnecting = true;\n    newState = 'reconnecting';\n  } else if (roomSignaling.iceConnectionState === 'new' || roomSignaling.iceConnectionState === 'checking') {\n    newState = roomSignaling._mediaConnectionIsReconnecting ? 'reconnecting' : 'connected';\n  } else {\n    roomSignaling._mediaConnectionIsReconnecting = false;\n    roomSignaling._reconnectingError = null;\n\n    roomSignaling._sessionTimeout.clear();\n\n    newState = 'connected';\n  }\n\n  if (newState === roomSignaling.state) {\n    return;\n  }\n\n  if (newState === 'reconnecting') {\n    roomSignaling._reconnectingError = roomSignaling.signalingConnectionState === 'reconnecting' ? new SignalingConnectionDisconnectedError() : new MediaConnectionError();\n\n    roomSignaling._sessionTimeout.start();\n\n    roomSignaling.preempt(newState, null, [roomSignaling._reconnectingError]);\n  } else {\n    roomSignaling.preempt(newState);\n  }\n}\n\nmodule.exports = RoomSignaling;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/node_modules/twilio-video/es5/signaling/room.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","DefaultRecordingSignaling","require","StateMachine","DefaultTimeout","_require","MediaConnectionError","MediaDTLSTransportFailedError","SignalingConnectionDisconnectedError","states","connected","reconnecting","disconnected","RoomSignaling","_StateMachine","localParticipant","sid","name","options","assign","RecordingSignaling","Timeout","_this","getPrototypeOf","sessionTimeout","_disconnect","_reconnectingError","_mediaConnectionIsReconnecting","_options","_sessionTimeout","dominantSpeakerSid","participants","Map","recording","on","connectionState","includes","iceConnectionState","maybeUpdateState","setTimeout","error","state","preempt","connectParticipant","participant","has","set","stateChanged","removeListener","delete","emit","disconnect","setDominantSpeaker","roomSignaling","signalingConnectionState","clear","newState","start","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\r\n\r\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\r\n\r\nvar DefaultRecordingSignaling = require('./recording');\r\nvar StateMachine = require('../statemachine');\r\nvar DefaultTimeout = require('../util/timeout');\r\n\r\nvar _require = require('../util/twilio-video-errors'),\r\n    MediaConnectionError = _require.MediaConnectionError,\r\n    MediaDTLSTransportFailedError = _require.MediaDTLSTransportFailedError,\r\n    SignalingConnectionDisconnectedError = _require.SignalingConnectionDisconnectedError;\r\n\r\n/*\r\nRoomSignaling States\r\n-----------------------\r\n\r\n    +-----------+     +--------------+\r\n    |           |     |              |\r\n    | connected |---->| disconnected |\r\n    |           |     |              |\r\n    +-----------+     +--------------+\r\n          |  ^               ^\r\n          |  |               |\r\n          |  |   +--------------+\r\n          |  +---|              |\r\n          |      | reconnecting |\r\n          +----->|              |\r\n                 +--------------+\r\n\r\n*/\r\n\r\nvar states = {\r\n  connected: ['reconnecting', 'disconnected'],\r\n  reconnecting: ['connected', 'disconnected'],\r\n  disconnected: []\r\n};\r\n\r\n/**\r\n * A {@link Room} implementation\r\n * @extends StateMachine\r\n * @property {RTCPeerConnectionState} connectionState\r\n * @property {?Participant.SID} dominantSpeakerSid\r\n * @property {ParticipantSignaling} localParticipant\r\n * @property {RTCIceConnectionState} iceConnectionState\r\n * @property {string} name\r\n * @property {Map<string, RemoteParticipantSignaling>} participants\r\n * @property {RecordingSignaling} recording\r\n * @property {Room.SID} sid\r\n * @property {string} state - \"connected\", \"reconnecting\", or \"disconnected\"\r\n * @property {string} signalingConnectionState - \"connected\",\r\n *   \"reconnecting\", or \"disconnected\"\r\n * @emits RoomSignaling#connectionStateChanged\r\n * @emits RoomSignaling#dominantSpeakerChanged\r\n * @emits RoomSignaling#iceConnectionStateChanged\r\n * @emits RoomSignaling#signalingConnectionStateChanged\r\n */\r\n\r\nvar RoomSignaling = function (_StateMachine) {\r\n  _inherits(RoomSignaling, _StateMachine);\r\n\r\n  /**\r\n   * Construct a {@link RoomSignaling}.\r\n   * @param {ParticipantSignaling} localParticipant\r\n   * @param {Room.SID} sid\r\n   * @param {string} name\r\n   * @param {object} options\r\n   */\r\n  function RoomSignaling(localParticipant, sid, name, options) {\r\n    _classCallCheck(this, RoomSignaling);\r\n\r\n    options = Object.assign({\r\n      RecordingSignaling: DefaultRecordingSignaling,\r\n      Timeout: DefaultTimeout\r\n    }, options);\r\n\r\n    var _this = _possibleConstructorReturn(this, (RoomSignaling.__proto__ || Object.getPrototypeOf(RoomSignaling)).call(this, 'connected', states));\r\n\r\n    var RecordingSignaling = options.RecordingSignaling;\r\n\r\n    var sessionTimeout = new options.Timeout(function () {\r\n      _this._disconnect(_this._reconnectingError);\r\n    }, options.sessionTimeout, false);\r\n\r\n    Object.defineProperties(_this, {\r\n      _mediaConnectionIsReconnecting: {\r\n        writable: true,\r\n        value: false\r\n      },\r\n      _options: {\r\n        value: options\r\n      },\r\n      _reconnectingError: {\r\n        value: null,\r\n        writable: true\r\n      },\r\n      _sessionTimeout: {\r\n        value: sessionTimeout\r\n      },\r\n      dominantSpeakerSid: {\r\n        enumerable: true,\r\n        value: null,\r\n        writable: true\r\n      },\r\n      localParticipant: {\r\n        enumerable: true,\r\n        value: localParticipant\r\n      },\r\n      name: {\r\n        enumerable: true,\r\n        value: name\r\n      },\r\n      participants: {\r\n        enumerable: true,\r\n        value: new Map()\r\n      },\r\n      recording: {\r\n        enumerable: true,\r\n        value: new RecordingSignaling()\r\n      },\r\n      sid: {\r\n        enumerable: true,\r\n        value: sid\r\n      }\r\n    });\r\n\r\n    _this.on('connectionStateChanged', function () {\r\n      if (_this.connectionState === 'failed' && !['disconnected', 'failed'].includes(_this.iceConnectionState)) {\r\n        _this._disconnect(new MediaDTLSTransportFailedError());\r\n      }\r\n    });\r\n\r\n    _this.on('iceConnectionStateChanged', function () {\r\n      return maybeUpdateState(_this);\r\n    });\r\n    _this.on('signalingConnectionStateChanged', function () {\r\n      return maybeUpdateState(_this);\r\n    });\r\n\r\n    // NOTE(mmalavalli): In case \"iceConnectionState\" is already failed, update\r\n    // the RoomSignaling state. setTimeout() ensures that the state is updated\r\n    // after RoomV2's constructor is fully executed, thereby making \"signalingConnectionState\"\r\n    // available here.\r\n    setTimeout(function () {\r\n      return maybeUpdateState(_this);\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Disconnect, possibly with an Error.\r\n   * @private\r\n   * @param {Error} [error]\r\n   * @returns {boolean}\r\n   */\r\n\r\n\r\n  _createClass(RoomSignaling, [{\r\n    key: '_disconnect',\r\n    value: function _disconnect(error) {\r\n      if (this.state !== 'disconnected') {\r\n        this.preempt('disconnected', null, [error]);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Connect {@link RemoteParticipantSignaling} to the {@link RoomSignaling}.\r\n     * @param {RemoteParticipantSignaling} participant\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: 'connectParticipant',\r\n    value: function connectParticipant(participant) {\r\n      var self = this;\r\n\r\n      if (participant.state === 'disconnected') {\r\n        return false;\r\n      }\r\n\r\n      if (this.participants.has(participant.sid)) {\r\n        return false;\r\n      }\r\n\r\n      this.participants.set(participant.sid, participant);\r\n\r\n      participant.on('stateChanged', function stateChanged(state) {\r\n        if (state === 'disconnected') {\r\n          participant.removeListener('stateChanged', stateChanged);\r\n          self.participants.delete(participant.sid);\r\n          self.emit('participantDisconnected', participant);\r\n        }\r\n      });\r\n\r\n      this.emit('participantConnected', participant);\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Disconnect.\r\n     * @returns {boolean}\r\n     */\r\n\r\n  }, {\r\n    key: 'disconnect',\r\n    value: function disconnect() {\r\n      return this._disconnect();\r\n    }\r\n\r\n    /**\r\n     * Set (or unset) the Dominant Speaker.\r\n     * @param {?Participant.SID} dominantSpeakerSid\r\n     * @returns {void}\r\n     */\r\n\r\n  }, {\r\n    key: 'setDominantSpeaker',\r\n    value: function setDominantSpeaker(dominantSpeakerSid) {\r\n      this.dominantSpeakerSid = dominantSpeakerSid;\r\n      this.emit('dominantSpeakerChanged');\r\n    }\r\n  }]);\r\n\r\n  return RoomSignaling;\r\n}(StateMachine);\r\n\r\n/**\r\n * @event RoomSignaling#event:connectionStateChanged\r\n */\r\n\r\n/**\r\n * @event RoomSignaling#event:dominantSpeakerChanged\r\n */\r\n\r\n/**\r\n * {@link RemoteParticipantSignaling} connected to the {@link RoomSignaling}.\r\n * @event RoomSignaling#event:participantConnected\r\n * @param {RemoteParticipantSignaling} participantSignaling\r\n */\r\n\r\n/**\r\n * {@link RemoteParticipantSignaling} disconnected from the {@link RoomSignaling}.\r\n * @event RoomSignaling#event:participantDisconnected\r\n * @param {RemoteParticipantSignaling} participantSignaling\r\n */\r\n\r\n/**\r\n * @event RoomSignaling#event:iceConnectionStateChanged\r\n */\r\n\r\n/**\r\n * @event RoomSignaling#event:signalingConnectionStateChanged\r\n */\r\n\r\n/**\r\n * Maybe update the {@link RoomSignaling} state.\r\n * @param {RoomSignaling} roomSignaling\r\n */\r\n\r\n\r\nfunction maybeUpdateState(roomSignaling) {\r\n  if (roomSignaling.state === 'disconnected' || roomSignaling.signalingConnectionState === 'disconnected') {\r\n    roomSignaling._sessionTimeout.clear();\r\n    return;\r\n  }\r\n\r\n  var newState = void 0;\r\n\r\n  if (roomSignaling.signalingConnectionState === 'reconnecting') {\r\n    newState = roomSignaling.signalingConnectionState;\r\n  } else if (roomSignaling.iceConnectionState === 'failed') {\r\n    roomSignaling._mediaConnectionIsReconnecting = true;\r\n    newState = 'reconnecting';\r\n  } else if (roomSignaling.iceConnectionState === 'new' || roomSignaling.iceConnectionState === 'checking') {\r\n    newState = roomSignaling._mediaConnectionIsReconnecting ? 'reconnecting' : 'connected';\r\n  } else {\r\n    roomSignaling._mediaConnectionIsReconnecting = false;\r\n    roomSignaling._reconnectingError = null;\r\n    roomSignaling._sessionTimeout.clear();\r\n    newState = 'connected';\r\n  }\r\n\r\n  if (newState === roomSignaling.state) {\r\n    return;\r\n  }\r\n\r\n  if (newState === 'reconnecting') {\r\n    roomSignaling._reconnectingError = roomSignaling.signalingConnectionState === 'reconnecting' ? new SignalingConnectionDisconnectedError() : new MediaConnectionError();\r\n    roomSignaling._sessionTimeout.start();\r\n    roomSignaling.preempt(newState, null, [roomSignaling._reconnectingError]);\r\n  } else {\r\n    roomSignaling.preempt(newState);\r\n  }\r\n}\r\n\r\nmodule.exports = RoomSignaling;"]},"metadata":{},"sourceType":"script"}
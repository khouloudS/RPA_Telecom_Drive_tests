{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\views\\\\driver\\\\Current_User_Position.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom'; //import Hello from './Hello';\n\nimport './style.css';\nimport { DirectionsRenderer, Rectangle, withScriptjs, withGoogleMap, GoogleMap, Marker, Polyline } from \"react-google-maps\";\nimport RPA from \"../rpa/rpa-process\";\nconst grid = {\n  id: 1,\n  bounds: {\n    north: 33.685,\n    south: 33.671,\n    east: -116.234,\n    west: -116.251\n  },\n  options: {\n    strokeColor: '#FF0000',\n    fillColor: '#FF0000'\n  }\n};\nconst MyMapComponent = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n  defaultZoom: 12,\n  defaultCenter: new window.google.maps.LatLng(10.844928, 106.768102),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, props.isMarkerShown && React.createElement(Marker, {\n  position: {\n    lat: -36.73540441,\n    lng: 144.25178598\n  },\n  animation: window.google.maps.Animation.BOUNCE,\n  onClick: () => {\n    alert('test');\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(Polyline, {\n  path: [{\n    lat: -36.73540441,\n    lng: 144.25178598\n  }, {\n    lat: -36.73590441,\n    lng: 144.25178198\n  }],\n  options: {\n    strokeColor: '#ff2343',\n    strokeOpacity: '1.0',\n    strokeWeight: 2,\n    icons: [{\n      icon: \"hello\",\n      offset: '0',\n      repeat: '10px'\n    }]\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}))));\nlet DirectionsService = new window.google.maps.DirectionsService();\nvar DirectionsDisplay = new window.google.maps.DirectionsRenderer();\nDirectionsService.route({\n  origin: new window.google.maps.LatLng(10.8441402, 106.76757429999999),\n  destination: new window.google.maps.LatLng(10.8463797, 107.7721405),\n  travelMode: window.google.maps.TravelMode.DRIVING,\n  optimizeWaypoints: true,\n  waypoints: [{\n    location: new window.google.maps.LatLng(10.8454946, 106.764759),\n    stopover: false\n  }]\n}, (result, status) => {\n  if (status === window.google.maps.DirectionsStatus.OK) {\n    this.setState({\n      directions: result\n    });\n    DirectionsDisplay.setDirections(result);\n    var DirectionsDisplay = new window.google.maps.DirectionsRenderer({\n      directions: result\n    });\n  } else {\n    console.error(\"error fetching directions \".concat(result));\n  }\n});\n\nclass Demo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(MyMapComponent, {\n      isMarkerShown: true,\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyAchXF7TnN6vtEMPdQKby_8rm1V6hK08TE\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"400px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Demo;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/views/driver/Current_User_Position.js"],"names":["React","Component","render","DirectionsRenderer","Rectangle","withScriptjs","withGoogleMap","GoogleMap","Marker","Polyline","RPA","grid","id","bounds","north","south","east","west","options","strokeColor","fillColor","MyMapComponent","props","window","google","maps","LatLng","isMarkerShown","lat","lng","Animation","BOUNCE","alert","strokeOpacity","strokeWeight","icons","icon","offset","repeat","DirectionsService","DirectionsDisplay","route","origin","destination","travelMode","TravelMode","DRIVING","optimizeWaypoints","waypoints","location","stopover","result","status","DirectionsStatus","OK","setState","directions","setDirections","console","error","Demo","constructor","state","name","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\n//import Hello from './Hello';\r\nimport './style.css';\r\nimport { DirectionsRenderer, Rectangle, withScriptjs, withGoogleMap, GoogleMap, Marker, Polyline } from \"react-google-maps\"\r\nimport RPA from \"../rpa/rpa-process\";\r\n\r\nconst grid = {\r\n    id:  1,\r\n    bounds: {\r\n        north: 33.685,\r\n        south: 33.671,\r\n        east: -116.234,\r\n        west: -116.251\r\n    },\r\n    options:{\r\n        strokeColor: '#FF0000',\r\n        fillColor: '#FF0000'\r\n    }\r\n}\r\n\r\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\r\n    <GoogleMap\r\n        defaultZoom={12}\r\n        defaultCenter={new window.google.maps.LatLng(10.844928, 106.768102)}\r\n    >\r\n        {props.isMarkerShown &&\r\n        <Marker\r\n            position={{ lat: -36.73540441, lng: 144.25178598 }}\r\n            animation={window.google.maps.Animation.BOUNCE}\r\n            onClick={()=>{alert('test')}}\r\n\r\n        />}\r\n        <Polyline\r\n            path={[\r\n                { lat: -36.73540441, lng: 144.25178598 },\r\n                { lat: -36.73590441, lng: 144.25178198 }\r\n            ]}\r\n            options={{\r\n                strokeColor: '#ff2343',\r\n                strokeOpacity: '1.0',\r\n                strokeWeight: 2,\r\n                icons: [{\r\n                    icon: \"hello\",\r\n                    offset: '0',\r\n                    repeat: '10px'\r\n                }],\r\n            }}\r\n        />\r\n    </GoogleMap>\r\n))\r\n\r\nlet DirectionsService = new window.google.maps.DirectionsService;\r\nvar DirectionsDisplay = new window.google.maps.DirectionsRenderer;\r\nDirectionsService.route(\r\n    {\r\n        origin: new window.google.maps.LatLng(10.8441402, 106.76757429999999),\r\n        destination: new window.google.maps.LatLng(10.8463797,107.7721405),\r\n        travelMode: window.google.maps.TravelMode.DRIVING,\r\n        optimizeWaypoints: true,\r\n\r\n        waypoints: [\r\n            {\r\n                location: new window.google.maps.LatLng(10.8454946,106.764759),\r\n                stopover: false\r\n            }\r\n        ]\r\n    },\r\n    (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n            this.setState({\r\n                directions: result,\r\n            });\r\n            DirectionsDisplay.setDirections(result);\r\n            var DirectionsDisplay = new window.google.maps.DirectionsRenderer({\r\n                directions:result,\r\n            })\r\n\r\n        } else {\r\n            console.error(`error fetching directions ${result}`);\r\n        }\r\n    });\r\n\r\nclass Demo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: 'React'\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <MyMapComponent isMarkerShown googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyAchXF7TnN6vtEMPdQKby_8rm1V6hK08TE\"\r\n                                    loadingElement={<div style={{ height: `100%` }} />}\r\n                                    containerElement={<div style={{ height: `400px` }} />}\r\n                                    mapElement={<div style={{ height: `100%` }} />} />\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Demo;\r\n"]},"metadata":{},"sourceType":"module"}
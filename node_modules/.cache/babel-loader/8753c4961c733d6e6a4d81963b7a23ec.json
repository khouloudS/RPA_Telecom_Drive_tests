{"ast":null,"code":"'use strict';\n\nvar debug = function debug() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:utils:transport');\n}\n\nmodule.exports = function (availableTransports) {\n  return {\n    filterToEnabled: function filterToEnabled(transportsWhitelist, info) {\n      var transports = {\n        main: [],\n        facade: []\n      };\n\n      if (!transportsWhitelist) {\n        transportsWhitelist = [];\n      } else if (typeof transportsWhitelist === 'string') {\n        transportsWhitelist = [transportsWhitelist];\n      }\n\n      availableTransports.forEach(function (trans) {\n        if (!trans) {\n          return;\n        }\n\n        if (trans.transportName === 'websocket' && info.websocket === false) {\n          debug('disabled from server', 'websocket');\n          return;\n        }\n\n        if (transportsWhitelist.length && transportsWhitelist.indexOf(trans.transportName) === -1) {\n          debug('not in whitelist', trans.transportName);\n          return;\n        }\n\n        if (trans.enabled(info)) {\n          debug('enabled', trans.transportName);\n          transports.main.push(trans);\n\n          if (trans.facadeTransport) {\n            transports.facade.push(trans.facadeTransport);\n          }\n        } else {\n          debug('disabled', trans.transportName);\n        }\n      });\n      return transports;\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/node_modules/sockjs-client/lib/utils/transport.js"],"names":["debug","process","env","NODE_ENV","require","module","exports","availableTransports","filterToEnabled","transportsWhitelist","info","transports","main","facade","forEach","trans","transportName","websocket","length","indexOf","enabled","push","facadeTransport"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAG,iBAAW,CAAE,CAAzB;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,KAAK,GAAGI,OAAO,CAAC,OAAD,CAAP,CAAiB,+BAAjB,CAAR;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAASC,mBAAT,EAA8B;AAC7C,SAAO;AACLC,IAAAA,eAAe,EAAE,yBAASC,mBAAT,EAA8BC,IAA9B,EAAoC;AACnD,UAAIC,UAAU,GAAG;AACfC,QAAAA,IAAI,EAAE,EADS;AAEfC,QAAAA,MAAM,EAAE;AAFO,OAAjB;;AAIA,UAAI,CAACJ,mBAAL,EAA0B;AACxBA,QAAAA,mBAAmB,GAAG,EAAtB;AACD,OAFD,MAEO,IAAI,OAAOA,mBAAP,KAA+B,QAAnC,EAA6C;AAClDA,QAAAA,mBAAmB,GAAG,CAACA,mBAAD,CAAtB;AACD;;AAEDF,MAAAA,mBAAmB,CAACO,OAApB,CAA4B,UAASC,KAAT,EAAgB;AAC1C,YAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAED,YAAIA,KAAK,CAACC,aAAN,KAAwB,WAAxB,IAAuCN,IAAI,CAACO,SAAL,KAAmB,KAA9D,EAAqE;AACnEjB,UAAAA,KAAK,CAAC,sBAAD,EAAyB,WAAzB,CAAL;AACA;AACD;;AAED,YAAIS,mBAAmB,CAACS,MAApB,IACAT,mBAAmB,CAACU,OAApB,CAA4BJ,KAAK,CAACC,aAAlC,MAAqD,CAAC,CAD1D,EAC6D;AAC3DhB,UAAAA,KAAK,CAAC,kBAAD,EAAqBe,KAAK,CAACC,aAA3B,CAAL;AACA;AACD;;AAED,YAAID,KAAK,CAACK,OAAN,CAAcV,IAAd,CAAJ,EAAyB;AACvBV,UAAAA,KAAK,CAAC,SAAD,EAAYe,KAAK,CAACC,aAAlB,CAAL;AACAL,UAAAA,UAAU,CAACC,IAAX,CAAgBS,IAAhB,CAAqBN,KAArB;;AACA,cAAIA,KAAK,CAACO,eAAV,EAA2B;AACzBX,YAAAA,UAAU,CAACE,MAAX,CAAkBQ,IAAlB,CAAuBN,KAAK,CAACO,eAA7B;AACD;AACF,SAND,MAMO;AACLtB,UAAAA,KAAK,CAAC,UAAD,EAAae,KAAK,CAACC,aAAnB,CAAL;AACD;AACF,OAzBD;AA0BA,aAAOL,UAAP;AACD;AAvCI,GAAP;AAyCD,CA1CD","sourcesContent":["'use strict';\r\n\r\nvar debug = function() {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n  debug = require('debug')('sockjs-client:utils:transport');\r\n}\r\n\r\nmodule.exports = function(availableTransports) {\r\n  return {\r\n    filterToEnabled: function(transportsWhitelist, info) {\r\n      var transports = {\r\n        main: []\r\n      , facade: []\r\n      };\r\n      if (!transportsWhitelist) {\r\n        transportsWhitelist = [];\r\n      } else if (typeof transportsWhitelist === 'string') {\r\n        transportsWhitelist = [transportsWhitelist];\r\n      }\r\n\r\n      availableTransports.forEach(function(trans) {\r\n        if (!trans) {\r\n          return;\r\n        }\r\n\r\n        if (trans.transportName === 'websocket' && info.websocket === false) {\r\n          debug('disabled from server', 'websocket');\r\n          return;\r\n        }\r\n\r\n        if (transportsWhitelist.length &&\r\n            transportsWhitelist.indexOf(trans.transportName) === -1) {\r\n          debug('not in whitelist', trans.transportName);\r\n          return;\r\n        }\r\n\r\n        if (trans.enabled(info)) {\r\n          debug('enabled', trans.transportName);\r\n          transports.main.push(trans);\r\n          if (trans.facadeTransport) {\r\n            transports.facade.push(trans.facadeTransport);\r\n          }\r\n        } else {\r\n          debug('disabled', trans.transportName);\r\n        }\r\n      });\r\n      return transports;\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khouloud\\\\Documents\\\\PI\\\\MERN_Stack_PI\\\\src\\\\views\\\\DriveTest\\\\Engineer\\\\PlanningDriveTest.js\";\n\n/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\nimport React from \"react\";\nimport Datetime from \"react-datetime\";\nimport bsCustomFileInput from 'bs-custom-file-input'; // reactstrap components\n\nimport { Button, Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport axios from \"axios\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport Alert from \"react-bootstrap/Alert\";\nimport Badge from \"react-bootstrap/Badge\";\nimport jwt_decode from \"jwt-decode\";\n\nclass PlanningDriveTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.validator = new SimpleReactValidator({\n      validators: {\n        py: {\n          // name the rule\n          message: 'This file must be python script with .py extension.',\n          rule: (val, params, validator) => {\n            return validator.helpers.testRegex(val, /(?:.*).py/);\n          }\n        },\n        csv: {\n          // name the rule\n          message: 'This file must be data set  with .CSV/.csv extension.',\n          rule: (val, params, validator) => {\n            return validator.helpers.testRegex(val, /(?:.*).CSV|csv/);\n          }\n        }\n      }\n    });\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleDescChange = this.handleDescChange.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleRoadChange = this.handleRoadChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.VerifyData = this.VerifyData.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      file1: '',\n      file2: '',\n      DriveTest_Title: '',\n      DriveTest_Description: '',\n      DriveTest_Start_Time: null,\n      DriveTest_File: null,\n      DriveTest_Road: null,\n      DriveTest_Driver: null,\n      drivers: [],\n      test: []\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    axios.get('http://localhost:4000/api/driveTestDrivers').then(response => {\n      this.setState({\n        drivers: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  VerifyData(stateDriver, date) {\n    axios.get('http://localhost:4000/api/driveTestDrivers/CheckAvibility/' + date + '/' + stateDriver).then(response => {\n      this.setState({\n        test: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  handleSelectChange(e) {\n    this.setState({\n      DriveTest_Driver: e.target.value\n    });\n  }\n\n  handleTitleChange(e) {\n    this.setState({\n      DriveTest_Title: e.target.value\n    });\n  }\n\n  handleDescChange(e) {\n    this.setState({\n      DriveTest_Description: e.target.value\n    });\n  }\n\n  handleTimeChange(date) {\n    this.setState({\n      DriveTest_Start_Time: date\n    });\n  }\n\n  handleFileChange(e) {\n    this.setState({\n      DriveTest_File: e.target.files[0],\n      file1: e.target.files[0].name,\n      loaded: 0\n    });\n  }\n\n  handleRoadChange(e) {\n    this.setState({\n      DriveTest_Road: e.target.files[0],\n      file2: e.target.files[0].name,\n      loaded: 0\n    });\n    console.log(this.state.DriveTest_Road);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const token = localStorage.usertoken;\n    const decoded = jwt_decode(token);\n    const formData = new FormData();\n    formData.append('DriveTest_Title', this.state.DriveTest_Title);\n    formData.append('DriveTest_Description', this.state.DriveTest_Description);\n    formData.append('DriveTest_Start_Time', this.state.DriveTest_Start_Time);\n    formData.append('DriveTestFile', this.state.DriveTest_File);\n    formData.append('DriveTestRoad', this.state.DriveTest_Road);\n    formData.append('DriveTest_Driver_id', this.state.DriveTest_Driver);\n    formData.append('DriveTest_Enginner_id', decoded._id);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n\n    if (this.validator.allValid()) {\n      axios.get('http://localhost:4000/api/driveTestDrivers/CheckAvibility/' + this.state.DriveTest_Start_Time + '/' + this.state.DriveTest_Driver).then(response => {\n        this.setState({\n          test: response.data\n        });\n        console.log(\"aaaa\", this.state.test);\n\n        if (this.state.test.length === 0) {\n          axios.post('http://localhost:4000/api/driveTest/AddDriveTest', formData, config).then(response => {\n            if (response.status === 200) {\n              if (decoded.role === \"Admin\") {\n                document.location.href = '/admin/DrivetestListAdmin';\n              } else if (decoded.role === \"Engineer\") {\n                document.location.href = '/admin/Engineer';\n              }\n            } else {\n              console.log('DriveTest failed to add');\n            }\n          });\n          this.setState({\n            DriveTest_Title: '',\n            DriveTest_Description: '',\n            DriveTest_Start_Time: '',\n            DriveTest_File: null,\n            DriveTest_Road: null,\n            selectedOption: null\n          });\n        } else {\n          alert(\"Choose another driver for this test !!! This driver has a mission at that time\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      this.validator.showMessages();\n      console.log(this.validator.allValid());\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\",\n      style: {\n        minHeight: \"600px\",\n        backgroundImage: \"url(\" + require(\"assets/img/theme/Logo-SFM.png\") + \")\",\n        backgroundSize: \"50 %\",\n        backgroundPosition: \"center top\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"mask bg-gradient-default opacity-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"d-flex align-items-center\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Container, {\n      className: \"d-flex align-items-center\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"70rem\"\n      },\n      className: \"bg-secondary shadow border-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      className: \"bg-transparent pb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center mt-2 mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Fill the form to plan a drive test\"))), React.createElement(CardBody, {\n      className: \"px-lg-5 py-lg-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center text-muted mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"All fields are required\")), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"input-group-alternative mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-check-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }))), React.createElement(Input, {\n      placeholder: \"Write the Title\",\n      type: \"text\",\n      value: this.state.DriveTest_Title,\n      onChange: this.handleTitleChange,\n      name: \"DriveTest_Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(Badge, {\n      className: \"badge-danger\",\n      pill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, this.validator.message('DriveTest_Title', this.state.DriveTest_Title, 'required'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"input-group-alternative mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-align-left-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }))), React.createElement(\"textarea\", {\n      className: \"form-control-alternative form-control\",\n      rows: \"6\",\n      placeholder: \"Write the description here...\",\n      type: \"text\",\n      value: this.state.DriveTest_Description,\n      onChange: this.handleDescChange,\n      name: \"DriveTest_Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })), React.createElement(Badge, {\n      className: \"badge-danger\",\n      pill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.validator.message('DriveTest_Description', this.state.DriveTest_Description, 'required'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      className: \"input-group-alternative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"ni ni-calendar-grid-58\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }))), React.createElement(Datetime, {\n      dateFormat: \"YYYY-MM-DD\",\n      showTimeSelect: true,\n      timeFormat: \"HH:mm\",\n      timeIntervals: 5,\n      timeCaption: \"time\",\n      inputProps: {\n        placeholder: \"Date Picker Here...\" + \" Select the date and time for this drive test\"\n      },\n      name: \"DriveTest_Start_Time\",\n      selected: this.state.DriveTest_Start_Time,\n      onChange: this.handleTimeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })), React.createElement(Badge, {\n      className: \"badge-danger\",\n      pill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, this.validator.message('DriveTest_Start_Time', this.state.DriveTest_Start_Time, 'required'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputGroupFile01\",\n      type: \"file\",\n      className: \"custom-file-input\",\n      name: \"DriveTest_File\",\n      onChange: this.handleFileChange,\n      onBlur: () => this.validator.showMessageFor('DriveTest_File'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        color: \"red\"\n      },\n      className: \"custom-file-label\",\n      htmlFor: \"inputGroupFile01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Choose Python script file for this drive test\")), React.createElement(Badge, {\n      className: \"badge-danger\",\n      pill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, this.validator.message('DriveTest_File', this.state.file1, 'required|py'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"inputGroupFile01\",\n      type: \"file\",\n      className: \"custom-file-input\",\n      name: \"DriveTest_Road\",\n      onChange: this.handleRoadChange,\n      onBlur: () => this.validator.showMessageFor('DriveTest_Road'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        color: \"red\"\n      },\n      className: \"custom-file-label\",\n      htmlFor: \"inputGroupFile01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Choose CSV file of the Drive test's Road\")), React.createElement(Badge, {\n      className: \"badge-danger\",\n      pill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, this.validator.message('DriveTest_Road', this.state.file2, 'required|csv'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"browser-default custom-select\",\n      name: \"DriveTest_Driver\",\n      onChange: this.handleSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Choose the affected driver for this mission... \"), this.state.drivers.map(V => React.createElement(\"option\", {\n      value: V._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, V.first_name, \" \", V.last_name))), React.createElement(Badge, {\n      className: \"badge-danger\",\n      pill: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, this.validator.message('DriveTest_Driver', this.state.DriveTest_Driver, 'required'))), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"mt-4\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"Add drive test\")))))))))));\n  }\n\n}\n\nexport default PlanningDriveTest;","map":{"version":3,"sources":["C:/Users/khouloud/Documents/PI/MERN_Stack_PI/src/views/DriveTest/Engineer/PlanningDriveTest.js"],"names":["React","Datetime","bsCustomFileInput","Button","Container","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","Input","InputGroup","InputGroupAddon","InputGroupText","axios","SimpleReactValidator","Alert","Badge","jwt_decode","PlanningDriveTest","Component","constructor","props","validator","validators","py","message","rule","val","params","helpers","testRegex","csv","handleTitleChange","bind","handleDescChange","handleTimeChange","handleFileChange","handleRoadChange","handleSelectChange","VerifyData","onSubmit","state","file1","file2","DriveTest_Title","DriveTest_Description","DriveTest_Start_Time","DriveTest_File","DriveTest_Road","DriveTest_Driver","drivers","test","componentDidMount","init","get","then","response","setState","data","catch","error","console","log","stateDriver","date","e","target","value","files","name","loaded","preventDefault","token","localStorage","usertoken","decoded","formData","FormData","append","_id","config","headers","allValid","length","post","status","role","document","location","href","selectedOption","alert","showMessages","forceUpdate","render","minHeight","backgroundImage","require","backgroundSize","backgroundPosition","width","placeholder","showMessageFor","color","map","V","first_name","last_name"],"mappings":"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","sourcesContent":["/*!\r\n\r\n=========================================================\r\n* Argon Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport Datetime from\"react-datetime\";\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\n// reactstrap components\r\nimport {\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon, InputGroupText\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nclass PlanningDriveTest extends React.Component {\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.validator = new SimpleReactValidator({\r\n            validators: {\r\n                py: {  // name the rule\r\n                    message: 'This file must be python script with .py extension.',\r\n                    rule: (val, params, validator) => {\r\n                        return validator.helpers.testRegex(val,/(?:.*).py/)\r\n                    }\r\n                },\r\n                csv: {  // name the rule\r\n                    message: 'This file must be data set  with .CSV/.csv extension.',\r\n                    rule: (val, params, validator) => {\r\n                        return validator.helpers.testRegex(val,/(?:.*).CSV|csv/)\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleDescChange = this.handleDescChange.bind(this);\r\n        this.handleTimeChange = this.handleTimeChange.bind(this);\r\n        this.handleFileChange = this.handleFileChange.bind(this);\r\n        this.handleRoadChange = this.handleRoadChange.bind(this);\r\n        this.handleSelectChange=this.handleSelectChange.bind(this);\r\n        this.VerifyData=this.VerifyData.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.state = {\r\n            file1:'',file2:'',\r\n            DriveTest_Title: '',\r\n            DriveTest_Description: '',\r\n            DriveTest_Start_Time: null,\r\n            DriveTest_File: null,\r\n            DriveTest_Road: null,\r\n            DriveTest_Driver: null,\r\n            drivers:[],test:[]\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        bsCustomFileInput.init();\r\n        axios.get('http://localhost:4000/api/driveTestDrivers')\r\n            .then(response => {\r\n                this.setState({ drivers: response.data });\r\n\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n    }\r\n    VerifyData(stateDriver,date){\r\n        axios.get('http://localhost:4000/api/driveTestDrivers/CheckAvibility/'+date+'/'+stateDriver)\r\n            .then(response => {\r\n                this.setState({ test: response.data });\r\n\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n    handleSelectChange  (e)  {\r\n        this.setState({DriveTest_Driver: e.target.value  });\r\n\r\n\r\n    }\r\n    handleTitleChange(e) {\r\n        this.setState({\r\n            DriveTest_Title: e.target.value\r\n        });\r\n    }\r\n    handleDescChange(e) {\r\n        this.setState({\r\n            DriveTest_Description: e.target.value\r\n        });\r\n    }\r\n    handleTimeChange(date) {\r\n        this.setState({\r\n            DriveTest_Start_Time: date\r\n        });\r\n    }\r\n    handleFileChange(e) {\r\n        this.setState({\r\n            DriveTest_File: e.target.files[0],\r\n            file1 : e.target.files[0].name,\r\n            loaded: 0,\r\n        });\r\n\r\n    }\r\n    handleRoadChange(e) {\r\n        this.setState({\r\n            DriveTest_Road: e.target.files[0],\r\n            file2:  e.target.files[0].name,\r\n            loaded: 0,\r\n\r\n        });console.log(this.state.DriveTest_Road)\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const token = localStorage.usertoken\r\n        const decoded = jwt_decode(token)\r\n        const formData = new FormData();\r\n        formData.append('DriveTest_Title',this.state.DriveTest_Title);\r\n        formData.append('DriveTest_Description',this.state.DriveTest_Description);\r\n        formData.append('DriveTest_Start_Time',this.state.DriveTest_Start_Time);\r\n        formData.append('DriveTestFile',this.state.DriveTest_File);\r\n        formData.append('DriveTestRoad',this.state.DriveTest_Road);\r\n        formData.append('DriveTest_Driver_id',this.state.DriveTest_Driver);\r\n        formData.append('DriveTest_Enginner_id',decoded._id);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n        if (this.validator.allValid() ) {\r\n\r\n            axios.get('http://localhost:4000/api/driveTestDrivers/CheckAvibility/'+this.state.DriveTest_Start_Time+'/'+this.state.DriveTest_Driver)\r\n                .then(response => {\r\n                    this.setState({ test: response.data });\r\n                    console.log(\"aaaa\",this.state.test);\r\n                    if(this.state.test.length === 0) {\r\n                        axios.post('http://localhost:4000/api/driveTest/AddDriveTest', formData,config)\r\n                            .then(response =>\r\n                            {\r\n                                if ( response.status === 200) {\r\n                                    if (decoded.role === \"Admin\") {\r\n                                        document.location.href = '/admin/DrivetestListAdmin'\r\n                                    } else if (decoded.role === \"Engineer\") {\r\n                                        document.location.href = '/admin/Engineer'\r\n                                    }\r\n                                }\r\n                                else\r\n                                {\r\n                                    console.log('DriveTest failed to add')\r\n\r\n                                }\r\n                            });\r\n                        this.setState({\r\n                            DriveTest_Title: '',\r\n                            DriveTest_Description: '',\r\n                            DriveTest_Start_Time: '',\r\n                            DriveTest_File: null,\r\n                            DriveTest_Road: null,\r\n                            selectedOption: null,\r\n                        })\r\n                    }else\r\n                    {\r\n                        alert(\"Choose another driver for this test !!! This driver has a mission at that time\")\r\n                    }\r\n\r\n                })\r\n                .catch(function (error){\r\n                    console.log(error);\r\n                });\r\n\r\n            }\r\n        else {\r\n            this.validator.showMessages();\r\n            console.log(this.validator.allValid())\r\n            this.forceUpdate();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div\r\n                    className=\"header pb-8 pt-5 pt-lg-8 d-flex align-items-center\"\r\n                    style={{\r\n                        minHeight: \"600px\",\r\n                        backgroundImage:\r\n                            \"url(\" + require(\"assets/img/theme/Logo-SFM.png\") + \")\",\r\n                        backgroundSize: \"50 %\"  ,\r\n                        backgroundPosition: \"center top\"\r\n                    }}>\r\n\r\n                    {/* Mask */}\r\n                    <span className=\"mask bg-gradient-default opacity-8\" />\r\n                    {/* Header container */}\r\n\r\n                    <Container className=\"d-flex align-items-center\" fluid>\r\n                        <Container className=\"d-flex align-items-center\" fluid>\r\n                            <Row>\r\n\r\n                                <Col lg=\"12\" md=\"12\">\r\n                                    <Card  style={{ width: \"70rem\" }} className=\"bg-secondary shadow border-0\">\r\n                                        <CardHeader className=\"bg-transparent pb-5\">\r\n                                            <div className=\"text-center mt-2 mb-4\">\r\n                                                <strong>Fill the form to plan a drive test</strong>\r\n                                            </div>\r\n\r\n                                        </CardHeader>\r\n                                        <CardBody className=\"px-lg-5 py-lg-5\">\r\n                                            <div className=\"text-center text-muted mb-4\">\r\n                                                <small>All fields are required</small>\r\n                                            </div>\r\n                                            <Form  onSubmit={this.onSubmit} >\r\n                                                <FormGroup>\r\n                                                    <InputGroup className=\"input-group-alternative mb-3\">\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <i className=\"ni ni-check-bold\" />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <Input placeholder=\"Write the Title\" type=\"text\"\r\n                                                               value={this.state.DriveTest_Title}\r\n                                                               onChange={this.handleTitleChange} name=\"DriveTest_Title\"/>\r\n\r\n                                                    </InputGroup>\r\n                                                    <Badge className=\"badge-danger\" pill >\r\n                                                        {this.validator.message('DriveTest_Title', this.state.DriveTest_Title, 'required')}\r\n                                                    </Badge>\r\n\r\n                                                </FormGroup>\r\n\r\n                                                <FormGroup>\r\n                                                    <InputGroup className=\"input-group-alternative mb-3\">\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <i className=\"ni ni-align-left-2\" />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <textarea className=\"form-control-alternative form-control\"\r\n                                                                  rows=\"6\" placeholder=\"Write the description here...\" type=\"text\"\r\n                                                                  value={this.state.DriveTest_Description}\r\n                                                                  onChange={this.handleDescChange}  name=\"DriveTest_Description\">\r\n\r\n                                                </textarea>\r\n\r\n                                                    </InputGroup>\r\n                                                    <Badge className=\"badge-danger\" pill >\r\n                                                        {this.validator.message('DriveTest_Description', this.state.DriveTest_Description, 'required')}\r\n                                                    </Badge>\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <InputGroup className=\"input-group-alternative\">\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <i className=\"ni ni-calendar-grid-58\" />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <Datetime dateFormat=\"YYYY-MM-DD\"  showTimeSelect\r\n                                                                  timeFormat=\"HH:mm\"\r\n                                                                  timeIntervals={5}\r\n                                                                  timeCaption=\"time\"\r\n                                                                  inputProps={{\r\n                                                                      placeholder: \"Date Picker Here...\" +\r\n                                                                          \" Select the date and time for this drive test\"\r\n\r\n                                                                  }}\r\n                                                                  name=\"DriveTest_Start_Time\"\r\n                                                                  selected={this.state.DriveTest_Start_Time}\r\n                                                                  onChange={ this.handleTimeChange } />\r\n\r\n                                                    </InputGroup>\r\n                                                    <Badge className=\"badge-danger\" pill >\r\n                                                        {this.validator.message('DriveTest_Start_Time', this.state.DriveTest_Start_Time, 'required')}\r\n                                                    </Badge>\r\n                                                </FormGroup>\r\n\r\n                                                <FormGroup>\r\n                                                    <div className=\"custom-file\">\r\n                                                        <input id=\"inputGroupFile01\" type=\"file\"\r\n                                                               className=\"custom-file-input\"\r\n                                                               name=\"DriveTest_File\"\r\n                                                               onChange={this.handleFileChange} onBlur={() => this.validator.showMessageFor('DriveTest_File')}\r\n                                                        />\r\n                                                        <label style={{color: \"red\"}}  className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                            Choose Python script file for this drive test</label>\r\n                                                    </div>\r\n                                                    <Badge className=\"badge-danger\" pill>\r\n                                                        {this.validator.message('DriveTest_File', this.state.file1, 'required|py')}\r\n                                                    </Badge>\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n                                                    <div className=\"custom-file\">\r\n                                                        <input id=\"inputGroupFile01\" type=\"file\"\r\n                                                               className=\"custom-file-input\"\r\n                                                               name=\"DriveTest_Road\"\r\n                                                               onChange={this.handleRoadChange}\r\n                                                               onBlur={() => this.validator.showMessageFor('DriveTest_Road')}\r\n                                                        />\r\n                                                        <label style={{color: \"red\"}} className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                                            Choose CSV file of the Drive test's Road</label>\r\n                                                    </div>\r\n                                                    <Badge className=\"badge-danger\" pill >\r\n                                                        {this.validator.message('DriveTest_Road', this.state.file2, 'required|csv')}\r\n                                                    </Badge>\r\n                                                </FormGroup>\r\n                                                <FormGroup>\r\n\r\n                                                    <select className=\"browser-default custom-select\"\r\n                                                            name=\"DriveTest_Driver\"\r\n                                                            onChange={this.handleSelectChange}  >\r\n                                                        <option  disabled selected>Choose the affected driver for this mission... </option>\r\n                                                        {this.state.drivers.map(V => (\r\n                                                            <option   value={V._id}>{V.first_name} {V.last_name}</option>))}\r\n                                                    </select>\r\n                                                    <Badge className=\"badge-danger\" pill >\r\n                                                        {this.validator.message('DriveTest_Driver', this.state.DriveTest_Driver, 'required')}\r\n                                                    </Badge>\r\n                                                </FormGroup>\r\n                                                <div className=\"text-center\">\r\n                                                    <Button className=\"mt-4\" color=\"primary\"  type=\"submit\"\r\n                                                    >\r\n                                                        Add drive test\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Form>\r\n\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n\r\n\r\n                    </Container>\r\n                </div>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlanningDriveTest;\r\n"]},"metadata":{},"sourceType":"module"}